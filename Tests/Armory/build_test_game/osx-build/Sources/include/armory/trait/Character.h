// Generated by Haxe 3.4.4
#ifndef INCLUDED_armory_trait_Character
#define INCLUDED_armory_trait_Character

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_iron_Trait
#include <iron/Trait.h>
#endif
HX_DECLARE_CLASS2(armory,trait,Character)
HX_DECLARE_CLASS1(iron,Trait)
HX_DECLARE_CLASS2(iron,math,Vec4)
HX_DECLARE_CLASS2(iron,object,Animation)

namespace armory{
namespace trait{


class HXCPP_CLASS_ATTRIBUTES Character_obj : public  ::iron::Trait_obj
{
	public:
		typedef  ::iron::Trait_obj super;
		typedef Character_obj OBJ_;
		Character_obj();

	public:
		enum { _hx_ClassId = 0x355cb615 };

		void __construct(::String actionIdle,::String actionMove);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="armory.trait.Character")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"armory.trait.Character"); }
		static hx::ObjectPtr< Character_obj > __new(::String actionIdle,::String actionMove);
		static hx::ObjectPtr< Character_obj > __alloc(hx::Ctx *_hx_ctx,::String actionIdle,::String actionMove);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Character_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Character","\x89","\xbb","\xa4","\xe3"); }

		::String actionIdle;
		::String actionMove;
		::String currentAction;
		 ::iron::object::Animation animation;
		Float speed;
		 ::iron::math::Vec4 loc;
		 ::iron::math::Vec4 lastLoc;
		int framesIdle;
		void init();
		::Dynamic init_dyn();

		void update();
		::Dynamic update_dyn();

};

} // end namespace armory
} // end namespace trait

#endif /* INCLUDED_armory_trait_Character */ 
