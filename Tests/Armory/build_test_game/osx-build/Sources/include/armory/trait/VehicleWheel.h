// Generated by Haxe 3.4.4
#ifndef INCLUDED_armory_trait_VehicleWheel
#define INCLUDED_armory_trait_VehicleWheel

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_f92921caf2f4112a_245_new)
HX_DECLARE_CLASS2(armory,trait,VehicleWheel)

namespace armory{
namespace trait{


class HXCPP_CLASS_ATTRIBUTES VehicleWheel_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef VehicleWheel_obj OBJ_;
		VehicleWheel_obj();

	public:
		enum { _hx_ClassId = 0x6017287f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="armory.trait.VehicleWheel")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"armory.trait.VehicleWheel"); }

		hx::ObjectPtr< VehicleWheel_obj > __new() {
			hx::ObjectPtr< VehicleWheel_obj > __this = new VehicleWheel_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< VehicleWheel_obj > __alloc(hx::Ctx *_hx_ctx) {
			VehicleWheel_obj *__this = (VehicleWheel_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(VehicleWheel_obj), false, "armory.trait.VehicleWheel"));
			*(void **)__this = VehicleWheel_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_f92921caf2f4112a_245_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~VehicleWheel_obj();

		HX_DO_RTTI_ALL;
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("VehicleWheel","\x6f","\x39","\xd7","\xf9"); }

};

} // end namespace armory
} // end namespace trait

#endif /* INCLUDED_armory_trait_VehicleWheel */ 
