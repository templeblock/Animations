// Generated by Haxe 3.4.4
#ifndef INCLUDED_armory_renderpath_Inc
#define INCLUDED_armory_renderpath_Inc

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(armory,renderpath,Inc)
HX_DECLARE_CLASS1(iron,RenderPath)
HX_DECLARE_CLASS2(iron,object,LampObject)
HX_DECLARE_CLASS2(iron,object,Object)

namespace armory{
namespace renderpath{


class HXCPP_CLASS_ATTRIBUTES Inc_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Inc_obj OBJ_;
		Inc_obj();

	public:
		enum { _hx_ClassId = 0x7c22cf09 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="armory.renderpath.Inc")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"armory.renderpath.Inc"); }

		hx::ObjectPtr< Inc_obj > __new() {
			hx::ObjectPtr< Inc_obj > __this = new Inc_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Inc_obj > __alloc(hx::Ctx *_hx_ctx) {
			Inc_obj *__this = (Inc_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Inc_obj), false, "armory.renderpath.Inc"));
			*(void **)__this = Inc_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Inc_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Inc","\xbe","\xc4","\x37","\x00"); }

		static  ::iron::RenderPath path;
		static void init( ::iron::RenderPath _path);
		static ::Dynamic init_dyn();

		static void bindShadowMap();
		static ::Dynamic bindShadowMap_dyn();

		static ::String shadowMapName();
		static ::Dynamic shadowMapName_dyn();

		static ::String getShadowMap();
		static ::Dynamic getShadowMap_dyn();

		static int getShadowmapSize();
		static ::Dynamic getShadowmapSize_dyn();

		static int getVoxelRes();
		static ::Dynamic getVoxelRes_dyn();

		static Float getVoxelResZ();
		static ::Dynamic getVoxelResZ_dyn();

		static Float getSuperSampling();
		static ::Dynamic getSuperSampling_dyn();

		static ::String getHdrFormat();
		static ::Dynamic getHdrFormat_dyn();

		static  ::Dynamic getDisplayp();
		static ::Dynamic getDisplayp_dyn();

		static void drawShadowMap( ::iron::object::LampObject l);
		static ::Dynamic drawShadowMap_dyn();

};

} // end namespace armory
} // end namespace renderpath

#endif /* INCLUDED_armory_renderpath_Inc */ 
