// Generated by Haxe 3.4.4
#ifndef INCLUDED_kha_Storage
#define INCLUDED_kha_Storage

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Storage)
HX_DECLARE_CLASS1(kha,StorageFile)

namespace kha{


class HXCPP_CLASS_ATTRIBUTES Storage_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Storage_obj OBJ_;
		Storage_obj();

	public:
		enum { _hx_ClassId = 0x0211887f };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="kha.Storage")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"kha.Storage"); }

		hx::ObjectPtr< Storage_obj > __new() {
			hx::ObjectPtr< Storage_obj > __this = new Storage_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< Storage_obj > __alloc(hx::Ctx *_hx_ctx) {
			Storage_obj *__this = (Storage_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Storage_obj), false, "kha.Storage"));
			*(void **)__this = Storage_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Storage_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Storage","\x1b","\x07","\xfa","\x11"); }

		static  ::kha::StorageFile namedFile(::String name);
		static ::Dynamic namedFile_dyn();

		static  ::kha::StorageFile defaultFile();
		static ::Dynamic defaultFile_dyn();

};

} // end namespace kha

#endif /* INCLUDED_kha_Storage */ 
