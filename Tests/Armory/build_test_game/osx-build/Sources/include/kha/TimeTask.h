// Generated by Haxe 3.4.4
#ifndef INCLUDED_kha_TimeTask
#define INCLUDED_kha_TimeTask

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_8f7ed6afeb08a1de_16_new)
HX_DECLARE_CLASS1(kha,TimeTask)

namespace kha{


class HXCPP_CLASS_ATTRIBUTES TimeTask_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef TimeTask_obj OBJ_;
		TimeTask_obj();

	public:
		enum { _hx_ClassId = 0x02ecd666 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.TimeTask")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"kha.TimeTask"); }

		hx::ObjectPtr< TimeTask_obj > __new() {
			hx::ObjectPtr< TimeTask_obj > __this = new TimeTask_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< TimeTask_obj > __alloc(hx::Ctx *_hx_ctx) {
			TimeTask_obj *__this = (TimeTask_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(TimeTask_obj), true, "kha.TimeTask"));
			*(void **)__this = TimeTask_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_8f7ed6afeb08a1de_16_new)
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~TimeTask_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("TimeTask","\x12","\xfe","\x09","\xc7"); }

		 ::Dynamic task;
		Dynamic task_dyn() { return task;}
		Float start;
		Float period;
		Float duration;
		Float next;
		int id;
		int groupId;
		bool active;
		bool paused;
};

} // end namespace kha

#endif /* INCLUDED_kha_TimeTask */ 
