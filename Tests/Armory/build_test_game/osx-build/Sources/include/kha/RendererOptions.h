// Generated by Haxe 3.4.4
#ifndef INCLUDED_kha_RendererOptions
#define INCLUDED_kha_RendererOptions

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,RendererOptions)
HX_DECLARE_CLASS2(kha,graphics4,TextureFormat)

namespace kha{


class HXCPP_CLASS_ATTRIBUTES RendererOptions_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef RendererOptions_obj OBJ_;
		RendererOptions_obj();

	public:
		enum { _hx_ClassId = 0x0abf973b };

		void __construct( ::kha::graphics4::TextureFormat textureFormat, ::Dynamic depthStencilFormat, ::Dynamic samplesPerPixel);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.RendererOptions")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"kha.RendererOptions"); }
		static hx::ObjectPtr< RendererOptions_obj > __new( ::kha::graphics4::TextureFormat textureFormat, ::Dynamic depthStencilFormat, ::Dynamic samplesPerPixel);
		static hx::ObjectPtr< RendererOptions_obj > __alloc(hx::Ctx *_hx_ctx, ::kha::graphics4::TextureFormat textureFormat, ::Dynamic depthStencilFormat, ::Dynamic samplesPerPixel);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~RendererOptions_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("RendererOptions","\x3b","\x1c","\x66","\x06"); }

		 ::kha::graphics4::TextureFormat textureFormat;
		int depthStencilFormat;
		int samplesPerPixel;
};

} // end namespace kha

#endif /* INCLUDED_kha_RendererOptions */ 
