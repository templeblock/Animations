// Generated by Haxe 3.4.4
#ifndef INCLUDED_kha_graphics2_Graphics
#define INCLUDED_kha_graphics2_Graphics

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Image)
HX_DECLARE_CLASS1(kha,Kravur)
HX_DECLARE_CLASS1(kha,Resource)
HX_DECLARE_CLASS1(kha,Video)
HX_DECLARE_CLASS2(kha,graphics2,Graphics)
HX_DECLARE_CLASS2(kha,graphics2,ImageScaleQuality)
HX_DECLARE_CLASS2(kha,graphics4,PipelineState)
HX_DECLARE_CLASS2(kha,graphics4,PipelineStateBase)
HX_DECLARE_CLASS2(kha,math,FastMatrix3)

namespace kha{
namespace graphics2{


class HXCPP_CLASS_ATTRIBUTES Graphics_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef Graphics_obj OBJ_;
		Graphics_obj();

	public:
		enum { _hx_ClassId = 0x3f458a72 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="kha.graphics2.Graphics")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"kha.graphics2.Graphics"); }
		static hx::ObjectPtr< Graphics_obj > __new();
		static hx::ObjectPtr< Graphics_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~Graphics_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("Graphics","\xeb","\xb4","\x19","\xec"); }

		static void __boot();
		static ::Array< int > _glyphs;
		virtual void begin(hx::Null< bool >  clear, ::Dynamic clearColor);
		::Dynamic begin_dyn();

		virtual void end();
		::Dynamic end_dyn();

		virtual void flush();
		::Dynamic flush_dyn();

		virtual void clear( ::Dynamic color);
		::Dynamic clear_dyn();

		virtual void drawImage( ::kha::Image img,float x,float y);
		::Dynamic drawImage_dyn();

		void drawSubImage( ::kha::Image img,float x,float y,float sx,float sy,float sw,float sh);
		::Dynamic drawSubImage_dyn();

		void drawScaledImage( ::kha::Image img,float dx,float dy,float dw,float dh);
		::Dynamic drawScaledImage_dyn();

		virtual void drawScaledSubImage( ::kha::Image image,float sx,float sy,float sw,float sh,float dx,float dy,float dw,float dh);
		::Dynamic drawScaledSubImage_dyn();

		virtual void drawRect(Float x,Float y,Float width,Float height,hx::Null< Float >  strength);
		::Dynamic drawRect_dyn();

		virtual void fillRect(Float x,Float y,Float width,Float height);
		::Dynamic fillRect_dyn();

		virtual void drawString(::String text,Float x,Float y);
		::Dynamic drawString_dyn();

		virtual void drawCharacters(::Array< int > text,int start,int length,Float x,Float y);
		::Dynamic drawCharacters_dyn();

		virtual void drawLine(Float x1,Float y1,Float x2,Float y2,hx::Null< Float >  strength);
		::Dynamic drawLine_dyn();

		virtual void drawVideo( ::kha::Video video,Float x,Float y,Float width,Float height);
		::Dynamic drawVideo_dyn();

		virtual void fillTriangle(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3);
		::Dynamic fillTriangle_dyn();

		virtual  ::kha::graphics2::ImageScaleQuality get_imageScaleQuality();
		::Dynamic get_imageScaleQuality_dyn();

		virtual  ::kha::graphics2::ImageScaleQuality set_imageScaleQuality( ::kha::graphics2::ImageScaleQuality value);
		::Dynamic set_imageScaleQuality_dyn();

		virtual  ::kha::graphics2::ImageScaleQuality get_mipmapScaleQuality();
		::Dynamic get_mipmapScaleQuality_dyn();

		virtual  ::kha::graphics2::ImageScaleQuality set_mipmapScaleQuality( ::kha::graphics2::ImageScaleQuality value);
		::Dynamic set_mipmapScaleQuality_dyn();

		virtual int get_color();
		::Dynamic get_color_dyn();

		virtual int set_color(int color);
		::Dynamic set_color_dyn();

		virtual  ::kha::Kravur get_font();
		::Dynamic get_font_dyn();

		virtual  ::kha::Kravur set_font( ::kha::Kravur font);
		::Dynamic set_font_dyn();

		int get_fontSize();
		::Dynamic get_fontSize_dyn();

		virtual int set_fontSize(int value);
		::Dynamic set_fontSize_dyn();

		::Array< int > get_fontGlyphs();
		::Dynamic get_fontGlyphs_dyn();

		::Array< int > set_fontGlyphs(::Array< int > value);
		::Dynamic set_fontGlyphs_dyn();

		void pushTransformation( ::kha::math::FastMatrix3 transformation);
		::Dynamic pushTransformation_dyn();

		 ::kha::math::FastMatrix3 popTransformation();
		::Dynamic popTransformation_dyn();

		 ::kha::math::FastMatrix3 get_transformation();
		::Dynamic get_transformation_dyn();

		 ::kha::math::FastMatrix3 set_transformation( ::kha::math::FastMatrix3 transformation);
		::Dynamic set_transformation_dyn();

		 ::kha::math::FastMatrix3 translation(float tx,float ty);
		::Dynamic translation_dyn();

		void translate(float tx,float ty);
		::Dynamic translate_dyn();

		void pushTranslation(float tx,float ty);
		::Dynamic pushTranslation_dyn();

		 ::kha::math::FastMatrix3 rotation(float angle,float centerx,float centery);
		::Dynamic rotation_dyn();

		void rotate(float angle,float centerx,float centery);
		::Dynamic rotate_dyn();

		void pushRotation(float angle,float centerx,float centery);
		::Dynamic pushRotation_dyn();

		void pushOpacity(Float opacity);
		::Dynamic pushOpacity_dyn();

		Float popOpacity();
		::Dynamic popOpacity_dyn();

		Float get_opacity();
		::Dynamic get_opacity_dyn();

		Float set_opacity(Float opacity);
		::Dynamic set_opacity_dyn();

		virtual void scissor(int x,int y,int width,int height);
		::Dynamic scissor_dyn();

		virtual void disableScissor();
		::Dynamic disableScissor_dyn();

		 ::kha::graphics4::PipelineState pipe;
		 ::kha::graphics4::PipelineState get_pipeline();
		::Dynamic get_pipeline_dyn();

		 ::kha::graphics4::PipelineState set_pipeline( ::kha::graphics4::PipelineState pipeline);
		::Dynamic set_pipeline_dyn();

		::Array< ::Dynamic> transformations;
		::Array< Float > opacities;
		int myFontSize;
		void setTransformation( ::kha::math::FastMatrix3 transformation);
		::Dynamic setTransformation_dyn();

		void setOpacity(Float opacity);
		::Dynamic setOpacity_dyn();

		virtual void setPipeline( ::kha::graphics4::PipelineState pipeline);
		::Dynamic setPipeline_dyn();

};

} // end namespace kha
} // end namespace graphics2

#endif /* INCLUDED_kha_graphics2_Graphics */ 
