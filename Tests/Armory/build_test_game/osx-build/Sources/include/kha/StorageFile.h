// Generated by Haxe 3.4.4
#ifndef INCLUDED_kha_StorageFile
#define INCLUDED_kha_StorageFile

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(kha,Resource)
HX_DECLARE_CLASS1(kha,StorageFile)
HX_DECLARE_CLASS2(kha,internal,BytesBlob)

namespace kha{


class HXCPP_CLASS_ATTRIBUTES StorageFile_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef StorageFile_obj OBJ_;
		StorageFile_obj();

	public:
		enum { _hx_ClassId = 0x5d721dd3 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="kha.StorageFile")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"kha.StorageFile"); }

		hx::ObjectPtr< StorageFile_obj > __new() {
			hx::ObjectPtr< StorageFile_obj > __this = new StorageFile_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< StorageFile_obj > __alloc(hx::Ctx *_hx_ctx) {
			StorageFile_obj *__this = (StorageFile_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(StorageFile_obj), false, "kha.StorageFile"));
			*(void **)__this = StorageFile_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~StorageFile_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("StorageFile","\x37","\x2b","\x70","\x1f"); }

		virtual  ::kha::internal::BytesBlob read();
		::Dynamic read_dyn();

		virtual void write( ::kha::internal::BytesBlob data);
		::Dynamic write_dyn();

		void append( ::kha::internal::BytesBlob data);
		::Dynamic append_dyn();

		bool canAppend();
		::Dynamic canAppend_dyn();

		int maxSize();
		::Dynamic maxSize_dyn();

		void writeString(::String data);
		::Dynamic writeString_dyn();

		void appendString(::String data);
		::Dynamic appendString_dyn();

		::String readString();
		::Dynamic readString_dyn();

		void writeObject( ::Dynamic object);
		::Dynamic writeObject_dyn();

		 ::Dynamic readObject();
		::Dynamic readObject_dyn();

};

} // end namespace kha

#endif /* INCLUDED_kha_StorageFile */ 
