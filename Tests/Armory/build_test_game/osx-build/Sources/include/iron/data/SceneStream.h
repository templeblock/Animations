// Generated by Haxe 3.4.4
#ifndef INCLUDED_iron_data_SceneStream
#define INCLUDED_iron_data_SceneStream

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS2(iron,data,Armature)
HX_DECLARE_CLASS2(iron,data,Data)
HX_DECLARE_CLASS2(iron,data,MaterialData)
HX_DECLARE_CLASS2(iron,data,SceneStream)
HX_DECLARE_CLASS2(iron,data,StreamSector)
HX_DECLARE_CLASS2(iron,object,CameraObject)
HX_DECLARE_CLASS2(iron,object,Object)

namespace iron{
namespace data{


class HXCPP_CLASS_ATTRIBUTES SceneStream_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef SceneStream_obj OBJ_;
		SceneStream_obj();

	public:
		enum { _hx_ClassId = 0x1094309a };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.data.SceneStream")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.data.SceneStream"); }
		static hx::ObjectPtr< SceneStream_obj > __new();
		static hx::ObjectPtr< SceneStream_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SceneStream_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("SceneStream","\xcc","\xfa","\x8d","\x9f"); }

		int checkMax;
		int checkPos;
		int loadMax;
		int loading;
		int loadDistance;
		int unloadDistance;
		::Array< ::Dynamic> sectors;
		int sceneTotal();
		::Dynamic sceneTotal_dyn();

		void add(::String object_file,::String data_ref,::String sceneName, ::iron::data::Armature armature,::Array< ::Dynamic> materials, ::iron::object::Object parent, ::Dynamic obj);
		::Dynamic add_dyn();

		void setup( ::iron::object::CameraObject camera);
		::Dynamic setup_dyn();

		void update( ::iron::object::CameraObject camera);
		::Dynamic update_dyn();

};

} // end namespace iron
} // end namespace data

#endif /* INCLUDED_iron_data_SceneStream */ 
