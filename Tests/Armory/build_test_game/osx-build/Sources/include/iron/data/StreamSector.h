// Generated by Haxe 3.4.4
#ifndef INCLUDED_iron_data_StreamSector
#define INCLUDED_iron_data_StreamSector

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_STACK_FRAME(_hx_pos_ed4b2704ebf427d9_26_new)
HX_DECLARE_CLASS2(iron,data,StreamSector)

namespace iron{
namespace data{


class HXCPP_CLASS_ATTRIBUTES StreamSector_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef StreamSector_obj OBJ_;
		StreamSector_obj();

	public:
		enum { _hx_ClassId = 0x0bf0c7a0 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.data.StreamSector")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.data.StreamSector"); }

		hx::ObjectPtr< StreamSector_obj > __new() {
			hx::ObjectPtr< StreamSector_obj > __this = new StreamSector_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< StreamSector_obj > __alloc(hx::Ctx *_hx_ctx) {
			StreamSector_obj *__this = (StreamSector_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(StreamSector_obj), true, "iron.data.StreamSector"));
			*(void **)__this = StreamSector_obj::_hx_vtable;
{
            	HX_STACKFRAME(&_hx_pos_ed4b2704ebf427d9_26_new)
HXDLIN(  26)		( ( ::iron::data::StreamSector)(__this) )->handles = ::Array_obj< ::Dynamic>::__new(0);
            	}
		
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~StreamSector_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("StreamSector","\x66","\xd0","\xe1","\x89"); }

		::Array< ::Dynamic> handles;
};

} // end namespace iron
} // end namespace data

#endif /* INCLUDED_iron_data_StreamSector */ 
