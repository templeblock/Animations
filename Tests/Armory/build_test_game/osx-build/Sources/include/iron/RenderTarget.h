// Generated by Haxe 3.4.4
#ifndef INCLUDED_iron_RenderTarget
#define INCLUDED_iron_RenderTarget

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(iron,RenderTarget)
HX_DECLARE_CLASS1(iron,RenderTargetRaw)
HX_DECLARE_CLASS1(kha,Canvas)
HX_DECLARE_CLASS1(kha,Image)
HX_DECLARE_CLASS1(kha,Resource)
HX_DECLARE_CLASS2(kha,graphics4,CubeMap)

namespace iron{


class HXCPP_CLASS_ATTRIBUTES RenderTarget_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef RenderTarget_obj OBJ_;
		RenderTarget_obj();

	public:
		enum { _hx_ClassId = 0x7d6a3a4b };

		void __construct( ::iron::RenderTargetRaw raw);
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="iron.RenderTarget")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"iron.RenderTarget"); }
		static hx::ObjectPtr< RenderTarget_obj > __new( ::iron::RenderTargetRaw raw);
		static hx::ObjectPtr< RenderTarget_obj > __alloc(hx::Ctx *_hx_ctx, ::iron::RenderTargetRaw raw);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~RenderTarget_obj();

		HX_DO_RTTI_ALL;
		hx::Val __Field(const ::String &inString, hx::PropertyAccess inCallProp);
		hx::Val __SetField(const ::String &inString,const hx::Val &inValue, hx::PropertyAccess inCallProp);
		void __GetFields(Array< ::String> &outFields);
		static void __register();
		void __Mark(HX_MARK_PARAMS);
		void __Visit(HX_VISIT_PARAMS);
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("RenderTarget","\x67","\x43","\x55","\xbe"); }

		 ::iron::RenderTargetRaw raw;
		int depthStencil;
		::String depthStencilFrom;
		 ::kha::Image image;
		 ::kha::graphics4::CubeMap cubeMap;
		bool hasDepth;
		bool is3D;
		bool isCubeMap;
		void unload();
		::Dynamic unload_dyn();

};

} // end namespace iron

#endif /* INCLUDED_iron_RenderTarget */ 
