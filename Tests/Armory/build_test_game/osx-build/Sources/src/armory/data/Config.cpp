// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_armory_data_Config
#include <armory/data/Config.h>
#endif
#ifndef INCLUDED_haxe_format_JsonParser
#include <haxe/format/JsonParser.h>
#endif
#ifndef INCLUDED_haxe_format_JsonPrinter
#include <haxe/format/JsonPrinter.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_iron_data_Data
#include <iron/data/Data.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif
#ifndef INCLUDED_kha_internal_BytesBlob
#include <kha/internal/BytesBlob.h>
#endif
#ifndef INCLUDED_sys_io_File
#include <sys/io/File.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_f6e52965167147dd_8_load,"armory.data.Config","load",0x432948c2,"armory.data.Config.load","armory/data/Config.hx",8,0x2380024c)
HX_LOCAL_STACK_FRAME(_hx_pos_f6e52965167147dd_14_save,"armory.data.Config","save",0x47bf39d9,"armory.data.Config.save","armory/data/Config.hx",14,0x2380024c)
HX_LOCAL_STACK_FRAME(_hx_pos_f6e52965167147dd_23_reset,"armory.data.Config","reset",0xeecf63b3,"armory.data.Config.reset","armory/data/Config.hx",23,0x2380024c)
HX_LOCAL_STACK_FRAME(_hx_pos_f6e52965167147dd_5_boot,"armory.data.Config","boot",0x3c8d32ce,"armory.data.Config.boot","armory/data/Config.hx",5,0x2380024c)
namespace armory{
namespace data{

void Config_obj::__construct() { }

Dynamic Config_obj::__CreateEmpty() { return new Config_obj; }

void *Config_obj::_hx_vtable = 0;

Dynamic Config_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Config_obj > _hx_result = new Config_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Config_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0666758a;
}

 ::Dynamic Config_obj::raw;

void Config_obj::load( ::Dynamic done){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::internal::BytesBlob blob){
            			HX_GC_STACKFRAME(&_hx_pos_f6e52965167147dd_8_load)
HXLINE(   9)			::armory::data::Config_obj::raw =  ::haxe::format::JsonParser_obj::__alloc( HX_CTX ,blob->toString())->parseRec();
HXLINE(  10)			done();
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_f6e52965167147dd_8_load)
HXDLIN(   8)		::iron::data::Data_obj::getBlob(HX_("config.arm",b0,ae,23,61), ::Dynamic(new _hx_Closure_0(done)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Config_obj,load,(void))

void Config_obj::save(){
            	HX_STACKFRAME(&_hx_pos_f6e52965167147dd_14_save)
HXLINE(  15)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::ofString(::haxe::format::JsonPrinter_obj::print(::armory::data::Config_obj::raw,null(),null()));
HXLINE(  19)		::sys::io::File_obj::saveBytes(HX_("./config.arm",31,12,5f,da),bytes);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Config_obj,save,(void))

void Config_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_f6e52965167147dd_23_reset)
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Config_obj,reset,(void))


Config_obj::Config_obj()
{
}

bool Config_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"raw") ) { outValue = ( raw ); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"load") ) { outValue = load_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"save") ) { outValue = save_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"reset") ) { outValue = reset_dyn(); return true; }
	}
	return false;
}

bool Config_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"raw") ) { raw=ioValue.Cast<  ::Dynamic >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Config_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Config_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Dynamic*/ ,(void *) &Config_obj::raw,HX_HCSTRING("raw","\xe8","\xd5","\x56","\x00")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Config_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Config_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Config_obj::raw,"raw");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Config_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Config_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Config_obj::raw,"raw");
};

#endif

hx::Class Config_obj::__mClass;

static ::String Config_obj_sStaticFields[] = {
	HX_HCSTRING("raw","\xe8","\xd5","\x56","\x00"),
	HX_HCSTRING("load","\x26","\x9a","\xb7","\x47"),
	HX_HCSTRING("save","\x3d","\x8b","\x4d","\x4c"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	::String(null())
};

void Config_obj::__register()
{
	hx::Object *dummy = new Config_obj;
	Config_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("armory.data.Config","\x52","\x37","\x79","\x14");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Config_obj::__GetStatic;
	__mClass->mSetStaticField = &Config_obj::__SetStatic;
	__mClass->mMarkFunc = Config_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Config_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Config_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Config_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Config_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Config_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Config_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_f6e52965167147dd_5_boot)
HXDLIN(   5)		raw = null();
            	}
}

} // end namespace armory
} // end namespace data
