// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_armory_trait_PhysicsBreak
#include <armory/trait/PhysicsBreak.h>
#endif
#ifndef INCLUDED_iron_Trait
#include <iron/Trait.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_7081345defa0eb9d_18_new,"armory.trait.PhysicsBreak","new",0xe61238fe,"armory.trait.PhysicsBreak.new","armory/trait/PhysicsBreak.hx",18,0x7f52e3b0)
namespace armory{
namespace trait{

void PhysicsBreak_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_7081345defa0eb9d_18_new)
HXDLIN(  18)		super::__construct();
            	}

Dynamic PhysicsBreak_obj::__CreateEmpty() { return new PhysicsBreak_obj; }

void *PhysicsBreak_obj::_hx_vtable = 0;

Dynamic PhysicsBreak_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< PhysicsBreak_obj > _hx_result = new PhysicsBreak_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool PhysicsBreak_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x53fe9b8c) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x53fe9b8c;
	} else {
		return inClassId==(int)0x7b609ac2;
	}
}


hx::ObjectPtr< PhysicsBreak_obj > PhysicsBreak_obj::__new() {
	hx::ObjectPtr< PhysicsBreak_obj > __this = new PhysicsBreak_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< PhysicsBreak_obj > PhysicsBreak_obj::__alloc(hx::Ctx *_hx_ctx) {
	PhysicsBreak_obj *__this = (PhysicsBreak_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(PhysicsBreak_obj), true, "armory.trait.PhysicsBreak"));
	*(void **)__this = PhysicsBreak_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

PhysicsBreak_obj::PhysicsBreak_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *PhysicsBreak_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *PhysicsBreak_obj_sStaticStorageInfo = 0;
#endif

static void PhysicsBreak_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(PhysicsBreak_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void PhysicsBreak_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(PhysicsBreak_obj::__mClass,"__mClass");
};

#endif

hx::Class PhysicsBreak_obj::__mClass;

void PhysicsBreak_obj::__register()
{
	hx::Object *dummy = new PhysicsBreak_obj;
	PhysicsBreak_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("armory.trait.PhysicsBreak","\x0c","\xa2","\x8e","\x15");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = PhysicsBreak_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< PhysicsBreak_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = PhysicsBreak_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = PhysicsBreak_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = PhysicsBreak_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace armory
} // end namespace trait
