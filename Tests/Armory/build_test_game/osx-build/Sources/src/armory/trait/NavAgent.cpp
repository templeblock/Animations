// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_armory_trait_NavAgent
#include <armory/trait/NavAgent.h>
#endif
#ifndef INCLUDED_iron_Trait
#include <iron/Trait.h>
#endif
#ifndef INCLUDED_iron_math_Quat
#include <iron/math/Quat.h>
#endif
#ifndef INCLUDED_iron_math_Vec4
#include <iron/math/Vec4.h>
#endif
#ifndef INCLUDED_iron_object_Object
#include <iron/object/Object.h>
#endif
#ifndef INCLUDED_iron_object_Transform
#include <iron/object/Transform.h>
#endif
#ifndef INCLUDED_iron_system_Tween
#include <iron/system/Tween.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5c7f596898ebd914_8_new,"armory.trait.NavAgent","new",0x160f8068,"armory.trait.NavAgent.new","armory/trait/NavAgent.hx",8,0xf98be086)
HX_LOCAL_STACK_FRAME(_hx_pos_5c7f596898ebd914_23_setPath,"armory.trait.NavAgent","setPath",0x405e7a6f,"armory.trait.NavAgent.setPath","armory/trait/NavAgent.hx",23,0xf98be086)
HX_LOCAL_STACK_FRAME(_hx_pos_5c7f596898ebd914_33_stopTween,"armory.trait.NavAgent","stopTween",0xcbfe4911,"armory.trait.NavAgent.stopTween","armory/trait/NavAgent.hx",33,0xf98be086)
HX_LOCAL_STACK_FRAME(_hx_pos_5c7f596898ebd914_38_stop,"armory.trait.NavAgent","stop",0x3ada46fa,"armory.trait.NavAgent.stop","armory/trait/NavAgent.hx",38,0xf98be086)
HX_LOCAL_STACK_FRAME(_hx_pos_5c7f596898ebd914_43_shortAngle,"armory.trait.NavAgent","shortAngle",0xdc184eaf,"armory.trait.NavAgent.shortAngle","armory/trait/NavAgent.hx",43,0xf98be086)
HX_LOCAL_STACK_FRAME(_hx_pos_5c7f596898ebd914_61_go,"armory.trait.NavAgent","go",0xa5688320,"armory.trait.NavAgent.go","armory/trait/NavAgent.hx",61,0xf98be086)
HX_LOCAL_STACK_FRAME(_hx_pos_5c7f596898ebd914_52_go,"armory.trait.NavAgent","go",0xa5688320,"armory.trait.NavAgent.go","armory/trait/NavAgent.hx",52,0xf98be086)
HX_LOCAL_STACK_FRAME(_hx_pos_5c7f596898ebd914_72_update,"armory.trait.NavAgent","update",0xd3018b01,"armory.trait.NavAgent.update","armory/trait/NavAgent.hx",72,0xf98be086)
HX_LOCAL_STACK_FRAME(_hx_pos_5c7f596898ebd914_8_boot,"armory.trait.NavAgent","boot",0x2f99db2a,"armory.trait.NavAgent.boot","armory/trait/NavAgent.hx",8,0xf98be086)
namespace armory{
namespace trait{

void NavAgent_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_5c7f596898ebd914_8_new)
HXLINE(  51)		this->orient =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE(  17)		this->locAnim = null();
HXLINE(  16)		this->rotAnim = null();
HXLINE(  14)		this->index = (int)0;
HXLINE(  13)		this->path = null();
HXLINE(  11)		this->speed = ((Float)5);
HXLINE(  20)		super::__construct();
            	}

Dynamic NavAgent_obj::__CreateEmpty() { return new NavAgent_obj; }

void *NavAgent_obj::_hx_vtable = 0;

Dynamic NavAgent_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< NavAgent_obj > _hx_result = new NavAgent_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool NavAgent_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x3e09be2e) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x3e09be2e;
	} else {
		return inClassId==(int)0x7b609ac2;
	}
}

void NavAgent_obj::setPath(::Array< ::Dynamic> path){
            	HX_STACKFRAME(&_hx_pos_5c7f596898ebd914_23_setPath)
HXLINE(  24)		this->stopTween();
HXLINE(  26)		this->path = path;
HXLINE(  27)		this->index = (int)1;
HXLINE(  28)		this->notifyOnUpdate(this->update_dyn());
HXLINE(  30)		this->go();
            	}


HX_DEFINE_DYNAMIC_FUNC1(NavAgent_obj,setPath,(void))

void NavAgent_obj::stopTween(){
            	HX_STACKFRAME(&_hx_pos_5c7f596898ebd914_33_stopTween)
HXLINE(  34)		if (hx::IsNotNull( this->rotAnim )) {
HXLINE(  34)			::iron::_hx_system::Tween_obj::stop(this->rotAnim);
            		}
HXLINE(  35)		if (hx::IsNotNull( this->locAnim )) {
HXLINE(  35)			::iron::_hx_system::Tween_obj::stop(this->locAnim);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(NavAgent_obj,stopTween,(void))

void NavAgent_obj::stop(){
            	HX_STACKFRAME(&_hx_pos_5c7f596898ebd914_38_stop)
HXLINE(  39)		this->stopTween();
HXLINE(  40)		this->path = null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NavAgent_obj,stop,(void))

Float NavAgent_obj::shortAngle(Float from,Float to){
            	HX_STACKFRAME(&_hx_pos_5c7f596898ebd914_43_shortAngle)
HXLINE(  44)		if ((from < (int)0)) {
HXLINE(  44)			from = (from + (::Math_obj::PI * (int)2));
            		}
HXLINE(  45)		if ((to < (int)0)) {
HXLINE(  45)			to = (to + (::Math_obj::PI * (int)2));
            		}
HXLINE(  46)		Float delta = ::Math_obj::abs((from - to));
HXLINE(  47)		if ((delta > ::Math_obj::PI)) {
HXLINE(  47)			to = ((::Math_obj::PI * (int)2) - delta);
            		}
HXLINE(  48)		return to;
            	}


HX_DEFINE_DYNAMIC_FUNC2(NavAgent_obj,shortAngle,return )

void NavAgent_obj::go(){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::armory::trait::NavAgent,_gthis) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_5c7f596898ebd914_61_go)
HXLINE(  62)			_gthis->index++;
HXLINE(  63)			if ((_gthis->index < _gthis->path->length)) {
HXLINE(  63)				_gthis->go();
            			}
            			else {
HXLINE(  64)				_gthis->removeUpdate(_gthis->update_dyn());
            			}
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_GC_STACKFRAME(&_hx_pos_5c7f596898ebd914_52_go)
HXDLIN(  52)		 ::armory::trait::NavAgent _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE(  53)		bool _hx_tmp;
HXDLIN(  53)		if (hx::IsNotNull( this->path )) {
HXLINE(  53)			_hx_tmp = (this->index >= this->path->length);
            		}
            		else {
HXLINE(  53)			_hx_tmp = true;
            		}
HXDLIN(  53)		if (_hx_tmp) {
HXLINE(  53)			return;
            		}
HXLINE(  55)		 ::iron::math::Vec4 p = this->path->__get(this->index).StaticCast<  ::iron::math::Vec4 >();
HXLINE(  56)		 ::iron::math::Vec4 v1 = this->object->transform->loc;
HXDLIN(  56)		float vx = (v1->x - p->x);
HXDLIN(  56)		float vy = (v1->y - p->y);
HXDLIN(  56)		float vz = (v1->z - p->z);
HXDLIN(  56)		float dist = ::Math_obj::sqrt((((vx * vx) + (vy * vy)) + (vz * vz)));
HXLINE(  58)		this->orient->subvecs(p,this->object->transform->loc);
HXLINE(  59)		Float targetAngle = ::Math_obj::atan2(this->orient->y,this->orient->x);
HXDLIN(  59)		Float targetAngle1 = (targetAngle + ((Float)::Math_obj::PI / (Float)(int)2));
HXLINE(  61)		 ::Dynamic _hx_tmp1 = this->object->transform->loc;
HXDLIN(  61)		 ::Dynamic _hx_tmp2 =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("x",78,00,00,00),p->x)
            			->setFixed(1,HX_("y",79,00,00,00),p->y));
HXDLIN(  61)		this->locAnim = ::iron::_hx_system::Tween_obj::to( ::Dynamic(hx::Anon_obj::Create(4)
            			->setFixed(0,HX_("target",51,f3,ec,86),_hx_tmp1)
            			->setFixed(1,HX_("props",70,e7,8f,c8),_hx_tmp2)
            			->setFixed(2,HX_("duration",54,0f,8e,14),((Float)dist / (Float)this->speed))
            			->setFixed(3,HX_("done",82,f0,6d,42), ::Dynamic(new _hx_Closure_0(_gthis)))));
HXLINE(  67)		 ::iron::math::Quat q =  ::iron::math::Quat_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE(  68)		 ::Dynamic _hx_tmp3 = this->object->transform;
HXDLIN(  68)		this->rotAnim = ::iron::_hx_system::Tween_obj::to( ::Dynamic(hx::Anon_obj::Create(3)
            			->setFixed(0,HX_("target",51,f3,ec,86),_hx_tmp3)
            			->setFixed(1,HX_("props",70,e7,8f,c8), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("rot",17,e2,56,00),q->fromEuler((int)0,(int)0,targetAngle1))))
            			->setFixed(2,HX_("duration",54,0f,8e,14),((Float)0.4))));
            	}


HX_DEFINE_DYNAMIC_FUNC0(NavAgent_obj,go,(void))

void NavAgent_obj::update(){
            	HX_STACKFRAME(&_hx_pos_5c7f596898ebd914_72_update)
HXDLIN(  72)		this->object->transform->buildMatrix();
            	}


HX_DEFINE_DYNAMIC_FUNC0(NavAgent_obj,update,(void))


hx::ObjectPtr< NavAgent_obj > NavAgent_obj::__new() {
	hx::ObjectPtr< NavAgent_obj > __this = new NavAgent_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< NavAgent_obj > NavAgent_obj::__alloc(hx::Ctx *_hx_ctx) {
	NavAgent_obj *__this = (NavAgent_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(NavAgent_obj), true, "armory.trait.NavAgent"));
	*(void **)__this = NavAgent_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

NavAgent_obj::NavAgent_obj()
{
}

void NavAgent_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(NavAgent);
	HX_MARK_MEMBER_NAME(speed,"speed");
	HX_MARK_MEMBER_NAME(path,"path");
	HX_MARK_MEMBER_NAME(index,"index");
	HX_MARK_MEMBER_NAME(rotAnim,"rotAnim");
	HX_MARK_MEMBER_NAME(locAnim,"locAnim");
	HX_MARK_MEMBER_NAME(orient,"orient");
	 ::iron::Trait_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void NavAgent_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(speed,"speed");
	HX_VISIT_MEMBER_NAME(path,"path");
	HX_VISIT_MEMBER_NAME(index,"index");
	HX_VISIT_MEMBER_NAME(rotAnim,"rotAnim");
	HX_VISIT_MEMBER_NAME(locAnim,"locAnim");
	HX_VISIT_MEMBER_NAME(orient,"orient");
	 ::iron::Trait_obj::__Visit(HX_VISIT_ARG);
}

hx::Val NavAgent_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"go") ) { return hx::Val( go_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"path") ) { return hx::Val( path ); }
		if (HX_FIELD_EQ(inName,"stop") ) { return hx::Val( stop_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"speed") ) { return hx::Val( speed ); }
		if (HX_FIELD_EQ(inName,"index") ) { return hx::Val( index ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"orient") ) { return hx::Val( orient ); }
		if (HX_FIELD_EQ(inName,"update") ) { return hx::Val( update_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"rotAnim") ) { return hx::Val( rotAnim ); }
		if (HX_FIELD_EQ(inName,"locAnim") ) { return hx::Val( locAnim ); }
		if (HX_FIELD_EQ(inName,"setPath") ) { return hx::Val( setPath_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"stopTween") ) { return hx::Val( stopTween_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"shortAngle") ) { return hx::Val( shortAngle_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val NavAgent_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"path") ) { path=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"speed") ) { speed=inValue.Cast< Float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"index") ) { index=inValue.Cast< int >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"orient") ) { orient=inValue.Cast<  ::iron::math::Vec4 >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"rotAnim") ) { rotAnim=inValue.Cast<  ::Dynamic >(); return inValue; }
		if (HX_FIELD_EQ(inName,"locAnim") ) { locAnim=inValue.Cast<  ::Dynamic >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void NavAgent_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("speed","\x87","\x97","\x69","\x81"));
	outFields->push(HX_HCSTRING("path","\xa5","\xe5","\x51","\x4a"));
	outFields->push(HX_HCSTRING("index","\x12","\x9b","\x14","\xbe"));
	outFields->push(HX_HCSTRING("rotAnim","\xc8","\xeb","\xf1","\xdb"));
	outFields->push(HX_HCSTRING("locAnim","\xb1","\x46","\xa1","\x18"));
	outFields->push(HX_HCSTRING("orient","\xc5","\x99","\xff","\x4a"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo NavAgent_obj_sMemberStorageInfo[] = {
	{hx::fsFloat,(int)offsetof(NavAgent_obj,speed),HX_HCSTRING("speed","\x87","\x97","\x69","\x81")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(NavAgent_obj,path),HX_HCSTRING("path","\xa5","\xe5","\x51","\x4a")},
	{hx::fsInt,(int)offsetof(NavAgent_obj,index),HX_HCSTRING("index","\x12","\x9b","\x14","\xbe")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(NavAgent_obj,rotAnim),HX_HCSTRING("rotAnim","\xc8","\xeb","\xf1","\xdb")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(NavAgent_obj,locAnim),HX_HCSTRING("locAnim","\xb1","\x46","\xa1","\x18")},
	{hx::fsObject /*::iron::math::Vec4*/ ,(int)offsetof(NavAgent_obj,orient),HX_HCSTRING("orient","\xc5","\x99","\xff","\x4a")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *NavAgent_obj_sStaticStorageInfo = 0;
#endif

static ::String NavAgent_obj_sMemberFields[] = {
	HX_HCSTRING("speed","\x87","\x97","\x69","\x81"),
	HX_HCSTRING("path","\xa5","\xe5","\x51","\x4a"),
	HX_HCSTRING("index","\x12","\x9b","\x14","\xbe"),
	HX_HCSTRING("rotAnim","\xc8","\xeb","\xf1","\xdb"),
	HX_HCSTRING("locAnim","\xb1","\x46","\xa1","\x18"),
	HX_HCSTRING("setPath","\x67","\x26","\xd6","\x0f"),
	HX_HCSTRING("stopTween","\x09","\xe3","\xb2","\x29"),
	HX_HCSTRING("stop","\x02","\xf0","\x5b","\x4c"),
	HX_HCSTRING("shortAngle","\xb7","\x6d","\x6a","\x7c"),
	HX_HCSTRING("orient","\xc5","\x99","\xff","\x4a"),
	HX_HCSTRING("go","\x28","\x5a","\x00","\x00"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	::String(null()) };

static void NavAgent_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(NavAgent_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void NavAgent_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(NavAgent_obj::__mClass,"__mClass");
};

#endif

hx::Class NavAgent_obj::__mClass;

void NavAgent_obj::__register()
{
	hx::Object *dummy = new NavAgent_obj;
	NavAgent_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("armory.trait.NavAgent","\x76","\x6c","\xe5","\xe8");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = NavAgent_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(NavAgent_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< NavAgent_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = NavAgent_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = NavAgent_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = NavAgent_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void NavAgent_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_5c7f596898ebd914_8_boot)
HXDLIN(   8)		__mClass->__meta__ =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("fields",79,8e,8e,80), ::Dynamic(hx::Anon_obj::Create(1)
            				->setFixed(0,HX_("speed",87,97,69,81), ::Dynamic(hx::Anon_obj::Create(1)
            					->setFixed(0,HX_("prop",a3,c7,5e,4a),null()))))));
            	}
}

} // end namespace armory
} // end namespace trait
