// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_armory_trait_internal_CanvasScript
#include <armory/trait/internal/CanvasScript.h>
#endif
#ifndef INCLUDED_iron_Trait
#include <iron/Trait.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_2fe55ec65c4e89ca_63_new,"armory.trait.internal.CanvasScript","new",0x77c31ff2,"armory.trait.internal.CanvasScript.new","armory/trait/internal/CanvasScript.hx",63,0xf342f99f)
namespace armory{
namespace trait{
namespace internal{

void CanvasScript_obj::__construct(::String canvasName){
            	HX_STACKFRAME(&_hx_pos_2fe55ec65c4e89ca_63_new)
HXDLIN(  63)		super::__construct();
            	}

Dynamic CanvasScript_obj::__CreateEmpty() { return new CanvasScript_obj; }

void *CanvasScript_obj::_hx_vtable = 0;

Dynamic CanvasScript_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< CanvasScript_obj > _hx_result = new CanvasScript_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool CanvasScript_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2af702f0) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x2af702f0;
	} else {
		return inClassId==(int)0x7b609ac2;
	}
}


hx::ObjectPtr< CanvasScript_obj > CanvasScript_obj::__new(::String canvasName) {
	hx::ObjectPtr< CanvasScript_obj > __this = new CanvasScript_obj();
	__this->__construct(canvasName);
	return __this;
}

hx::ObjectPtr< CanvasScript_obj > CanvasScript_obj::__alloc(hx::Ctx *_hx_ctx,::String canvasName) {
	CanvasScript_obj *__this = (CanvasScript_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(CanvasScript_obj), true, "armory.trait.internal.CanvasScript"));
	*(void **)__this = CanvasScript_obj::_hx_vtable;
	__this->__construct(canvasName);
	return __this;
}

CanvasScript_obj::CanvasScript_obj()
{
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *CanvasScript_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *CanvasScript_obj_sStaticStorageInfo = 0;
#endif

static void CanvasScript_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(CanvasScript_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void CanvasScript_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(CanvasScript_obj::__mClass,"__mClass");
};

#endif

hx::Class CanvasScript_obj::__mClass;

void CanvasScript_obj::__register()
{
	hx::Object *dummy = new CanvasScript_obj;
	CanvasScript_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("armory.trait.internal.CanvasScript","\x00","\xff","\x9b","\xc1");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = CanvasScript_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< CanvasScript_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = CanvasScript_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = CanvasScript_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = CanvasScript_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace armory
} // end namespace trait
} // end namespace internal
