// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_armory_object_Uniforms
#include <armory/object/Uniforms.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_iron_Scene
#include <iron/Scene.h>
#endif
#ifndef INCLUDED_iron_math_Vec4
#include <iron/math/Vec4.h>
#endif
#ifndef INCLUDED_iron_object_Uniforms
#include <iron/object/Uniforms.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_e0d408d4dac2cbeb_9_register,"armory.object.Uniforms","register",0x189d4037,"armory.object.Uniforms.register","armory/object/Uniforms.hx",9,0x7a469fc4)
HX_LOCAL_STACK_FRAME(_hx_pos_e0d408d4dac2cbeb_15_externalTextureLink,"armory.object.Uniforms","externalTextureLink",0xdf479896,"armory.object.Uniforms.externalTextureLink","armory/object/Uniforms.hx",15,0x7a469fc4)
HX_LOCAL_STACK_FRAME(_hx_pos_e0d408d4dac2cbeb_44_externalVec3Link,"armory.object.Uniforms","externalVec3Link",0x71335638,"armory.object.Uniforms.externalVec3Link","armory/object/Uniforms.hx",44,0x7a469fc4)
HX_LOCAL_STACK_FRAME(_hx_pos_e0d408d4dac2cbeb_180_externalFloatLink,"armory.object.Uniforms","externalFloatLink",0x49470f97,"armory.object.Uniforms.externalFloatLink","armory/object/Uniforms.hx",180,0x7a469fc4)
namespace armory{
namespace object{

void Uniforms_obj::__construct() { }

Dynamic Uniforms_obj::__CreateEmpty() { return new Uniforms_obj; }

void *Uniforms_obj::_hx_vtable = 0;

Dynamic Uniforms_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Uniforms_obj > _hx_result = new Uniforms_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Uniforms_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5a898178;
}

void Uniforms_obj::_hx_register(){
            	HX_STACKFRAME(&_hx_pos_e0d408d4dac2cbeb_9_register)
HXLINE(  10)		::iron::object::Uniforms_obj::externalTextureLinks = ::Array_obj< ::Dynamic>::__new(1)->init(0,::armory::object::Uniforms_obj::externalTextureLink_dyn());
HXLINE(  11)		::iron::object::Uniforms_obj::externalVec3Links = ::Array_obj< ::Dynamic>::__new(1)->init(0,::armory::object::Uniforms_obj::externalVec3Link_dyn());
HXLINE(  12)		::iron::object::Uniforms_obj::externalFloatLinks = ::Array_obj< ::Dynamic>::__new(1)->init(0,::armory::object::Uniforms_obj::externalFloatLink_dyn());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Uniforms_obj,_hx_register,(void))

 ::kha::Image Uniforms_obj::externalTextureLink(::String tulink){
            	HX_STACKFRAME(&_hx_pos_e0d408d4dac2cbeb_15_externalTextureLink)
HXLINE(  16)		if ((tulink == HX_("_smaaSearch",21,ac,12,0a))) {
HXLINE(  17)			return ::iron::Scene_obj::active->embedded->get(HX_("smaa_search.png",08,c8,f3,5b)).StaticCast<  ::kha::Image >();
            		}
            		else {
HXLINE(  19)			if ((tulink == HX_("_smaaArea",06,c8,ac,7b))) {
HXLINE(  20)				return ::iron::Scene_obj::active->embedded->get(HX_("smaa_area.png",6d,17,61,d7)).StaticCast<  ::kha::Image >();
            			}
            			else {
HXLINE(  32)				if ((tulink == HX_("_lensTexture",7e,8b,d6,62))) {
HXLINE(  33)					return ::iron::Scene_obj::active->embedded->get(HX_("lenstexture.jpg",90,e9,9b,14)).StaticCast<  ::kha::Image >();
            				}
            				else {
HXLINE(  35)					if ((tulink == HX_("_lutTexture",6f,03,57,b1))) {
HXLINE(  36)						return ::iron::Scene_obj::active->embedded->get(HX_("luttexture.jpg",e3,a7,34,b7)).StaticCast<  ::kha::Image >();
            					}
            					else {
HXLINE(  38)						if ((tulink == HX_("_cloudsTexture",5e,3b,26,3b))) {
HXLINE(  39)							return ::iron::Scene_obj::active->embedded->get(HX_("cloudstexture.png",f8,32,7f,f1)).StaticCast<  ::kha::Image >();
            						}
            					}
            				}
            			}
            		}
HXLINE(  41)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Uniforms_obj,externalTextureLink,return )

 ::iron::math::Vec4 Uniforms_obj::externalVec3Link(::String clink){
            	HX_STACKFRAME(&_hx_pos_e0d408d4dac2cbeb_44_externalVec3Link)
HXLINE(  45)		 ::iron::math::Vec4 v = null();
HXLINE( 171)		return v;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Uniforms_obj,externalVec3Link,return )

float Uniforms_obj::externalFloatLink(::String clink){
            	HX_STACKFRAME(&_hx_pos_e0d408d4dac2cbeb_180_externalFloatLink)
HXDLIN( 180)		return ((Float)0.0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Uniforms_obj,externalFloatLink,return )


Uniforms_obj::Uniforms_obj()
{
}

bool Uniforms_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"register") ) { outValue = _hx_register_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"externalVec3Link") ) { outValue = externalVec3Link_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"externalFloatLink") ) { outValue = externalFloatLink_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"externalTextureLink") ) { outValue = externalTextureLink_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Uniforms_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Uniforms_obj_sStaticStorageInfo = 0;
#endif

static void Uniforms_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Uniforms_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Uniforms_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Uniforms_obj::__mClass,"__mClass");
};

#endif

hx::Class Uniforms_obj::__mClass;

static ::String Uniforms_obj_sStaticFields[] = {
	HX_HCSTRING("register","\x63","\xa6","\x9f","\xd0"),
	HX_HCSTRING("externalTextureLink","\xea","\xc9","\x19","\x95"),
	HX_HCSTRING("externalVec3Link","\x64","\xc8","\x89","\x6c"),
	HX_HCSTRING("externalFloatLink","\xeb","\x83","\x94","\x39"),
	::String(null())
};

void Uniforms_obj::__register()
{
	hx::Object *dummy = new Uniforms_obj;
	Uniforms_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("armory.object.Uniforms","\x1a","\x51","\xc1","\x56");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Uniforms_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Uniforms_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Uniforms_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Uniforms_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Uniforms_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Uniforms_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Uniforms_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace armory
} // end namespace object
