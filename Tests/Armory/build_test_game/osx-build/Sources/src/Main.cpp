// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Main
#include <Main.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_armory_data_Config
#include <armory/data/Config.h>
#endif
#ifndef INCLUDED_armory_object_Uniforms
#include <armory/object/Uniforms.h>
#endif
#ifndef INCLUDED_armory_renderpath_RenderPathCreator
#include <armory/renderpath/RenderPathCreator.h>
#endif
#ifndef INCLUDED_iron_App
#include <iron/App.h>
#endif
#ifndef INCLUDED_iron_RenderPath
#include <iron/RenderPath.h>
#endif
#ifndef INCLUDED_iron_Scene
#include <iron/Scene.h>
#endif
#ifndef INCLUDED_iron_object_Animation
#include <iron/object/Animation.h>
#endif
#ifndef INCLUDED_iron_object_BoneAnimation
#include <iron/object/BoneAnimation.h>
#endif
#ifndef INCLUDED_iron_object_LampObject
#include <iron/object/LampObject.h>
#endif
#ifndef INCLUDED_iron_object_Object
#include <iron/object/Object.h>
#endif
#ifndef INCLUDED_kha_DisplayImpl
#include <kha/DisplayImpl.h>
#endif
#ifndef INCLUDED_kha_System
#include <kha/System.h>
#endif
#ifndef INCLUDED_kha_WindowMode
#include <kha/WindowMode.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_24_main,"Main","main",0xed0e206e,"Main.main","Main.hx",24,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_59_start,"Main","start",0x003eba8d,"Main.start","Main.hx",59,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_57_start,"Main","start",0x003eba8d,"Main.start","Main.hx",57,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_55_start,"Main","start",0x003eba8d,"Main.start","Main.hx",55,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_36_start,"Main","start",0x003eba8d,"Main.start","Main.hx",36,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_4_boot,"Main","boot",0xe5d36c67,"Main.boot","Main.hx",4,0x087e5c05)
HX_LOCAL_STACK_FRAME(_hx_pos_e47a9afac0942eb9_5_boot,"Main","boot",0xe5d36c67,"Main.boot","Main.hx",5,0x087e5c05)

void Main_obj::__construct() { }

Dynamic Main_obj::__CreateEmpty() { return new Main_obj; }

void *Main_obj::_hx_vtable = 0;

Dynamic Main_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Main_obj > _hx_result = new Main_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Main_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x332f6459;
}

::String Main_obj::projectName;

::String Main_obj::projectPackage;

int Main_obj::state;

void Main_obj::main(){
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_24_main)
HXLINE(  25)		::iron::object::BoneAnimation_obj::skinMaxBones = (int)8;
HXLINE(  27)		::iron::object::LampObject_obj::cascadeCount = (int)4;
HXLINE(  28)		::iron::object::LampObject_obj::cascadeSplitFactor = ((Float)0.800000011920929);
HXLINE(  30)		::Main_obj::state = (int)1;
HXLINE(  34)		::Main_obj::state--;
HXDLIN(  34)		::Main_obj::start();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Main_obj,main,(void))

void Main_obj::start(){
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_2) HXARGC(0)
            		void _hx_run(){
            			HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_1) HXARGC(0)
            			void _hx_run(){
            				HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(1)
            				void _hx_run( ::iron::object::Object object){
            					HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_59_start)
HXLINE(  59)					::iron::RenderPath_obj::setActive(::armory::renderpath::RenderPathCreator_obj::get());
            				}
            				HX_END_LOCAL_FUNC1((void))

            				HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_57_start)
HXLINE(  57)				::iron::Scene_obj::setActive(HX_("Scene",2c,49,ff,0b), ::Dynamic(new _hx_Closure_0()));
            			}
            			HX_END_LOCAL_FUNC0((void))

            			HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_55_start)
HXLINE(  55)			::iron::App_obj::init( ::Dynamic(new _hx_Closure_1()));
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_36_start)
HXLINE(  37)		if ((::Main_obj::state > (int)0)) {
HXLINE(  37)			return;
            		}
HXLINE(  38)		if (hx::IsNull( ::armory::data::Config_obj::raw )) {
HXLINE(  38)			::armory::data::Config_obj::raw =  ::Dynamic(hx::Anon_obj::Create(0));
            		}
HXLINE(  39)		 ::Dynamic config = ::armory::data::Config_obj::raw;
HXLINE(  40)		if (hx::IsNull( config->__Field(HX_("window_mode",52,15,17,59),hx::paccDynamic) )) {
HXLINE(  40)			config->__SetField(HX_("window_mode",52,15,17,59),(int)0,hx::paccDynamic);
            		}
HXLINE(  41)		if (hx::IsNull( config->__Field(HX_("window_resizable",1c,93,99,06),hx::paccDynamic) )) {
HXLINE(  41)			config->__SetField(HX_("window_resizable",1c,93,99,06),false,hx::paccDynamic);
            		}
HXLINE(  42)		if (hx::IsNull( config->__Field(HX_("window_minimizable",72,d2,2e,4d),hx::paccDynamic) )) {
HXLINE(  42)			config->__SetField(HX_("window_minimizable",72,d2,2e,4d),true,hx::paccDynamic);
            		}
HXLINE(  43)		if (hx::IsNull( config->__Field(HX_("window_maximizable",84,2d,49,88),hx::paccDynamic) )) {
HXLINE(  43)			config->__SetField(HX_("window_maximizable",84,2d,49,88),false,hx::paccDynamic);
            		}
HXLINE(  44)		if (hx::IsNull( config->__Field(HX_("window_w",28,c3,cd,7d),hx::paccDynamic) )) {
HXLINE(  44)			config->__SetField(HX_("window_w",28,c3,cd,7d),(int)1920,hx::paccDynamic);
            		}
HXLINE(  45)		if (hx::IsNull( config->__Field(HX_("window_h",19,c3,cd,7d),hx::paccDynamic) )) {
HXLINE(  45)			config->__SetField(HX_("window_h",19,c3,cd,7d),(int)1080,hx::paccDynamic);
            		}
HXLINE(  46)		if (hx::IsNull( config->__Field(HX_("window_msaa",b5,1b,1a,59),hx::paccDynamic) )) {
HXLINE(  46)			config->__SetField(HX_("window_msaa",b5,1b,1a,59),(int)1,hx::paccDynamic);
            		}
HXLINE(  47)		if (hx::IsNull( config->__Field(HX_("window_vsync",02,9d,6b,cc),hx::paccDynamic) )) {
HXLINE(  47)			config->__SetField(HX_("window_vsync",02,9d,6b,cc),true,hx::paccDynamic);
            		}
HXLINE(  48)		::armory::object::Uniforms_obj::_hx_register();
HXLINE(  49)		 ::kha::WindowMode windowMode;
HXDLIN(  49)		if (hx::IsEq( config->__Field(HX_("window_mode",52,15,17,59),hx::paccDynamic),(int)0 )) {
HXLINE(  49)			windowMode = ::kha::WindowMode_obj::Window_dyn();
            		}
            		else {
HXLINE(  49)			if (hx::IsEq( config->__Field(HX_("window_mode",52,15,17,59),hx::paccDynamic),(int)1 )) {
HXLINE(  49)				windowMode = ::kha::WindowMode_obj::BorderlessWindow_dyn();
            			}
            			else {
HXLINE(  49)				windowMode = ::kha::WindowMode_obj::Fullscreen_dyn();
            			}
            		}
HXLINE(  50)		if (hx::IsEq( windowMode,::kha::WindowMode_obj::Fullscreen_dyn() )) {
HXLINE(  50)			windowMode = ::kha::WindowMode_obj::BorderlessWindow_dyn();
HXDLIN(  50)			config->__SetField(HX_("window_w",28,c3,cd,7d),::kha::DisplayImpl_obj::width((int)0),hx::paccDynamic);
HXDLIN(  50)			config->__SetField(HX_("window_h",19,c3,cd,7d),::kha::DisplayImpl_obj::height((int)0),hx::paccDynamic);
            		}
            		else {
HXLINE(  52)			 ::Dynamic config1 = config->__Field(HX_("window_w",28,c3,cd,7d),hx::paccDynamic);
HXDLIN(  52)			config->__SetField(HX_("window_w",28,c3,cd,7d),::Std_obj::_hx_int(::Math_obj::min(config1,::kha::DisplayImpl_obj::width((int)0))),hx::paccDynamic);
HXDLIN(  52)			 ::Dynamic config2 = config->__Field(HX_("window_h",19,c3,cd,7d),hx::paccDynamic);
HXDLIN(  52)			config->__SetField(HX_("window_h",19,c3,cd,7d),::Std_obj::_hx_int(::Math_obj::min(config2,::kha::DisplayImpl_obj::height((int)0))),hx::paccDynamic);
            		}
HXLINE(  54)		::kha::System_obj::init( ::Dynamic(hx::Anon_obj::Create(9)
            			->setFixed(0,HX_("resizable",6b,37,50,a9), ::Dynamic(config->__Field(HX_("window_resizable",1c,93,99,06),hx::paccDynamic)))
            			->setFixed(1,HX_("width",06,b6,62,ca), ::Dynamic(config->__Field(HX_("window_w",28,c3,cd,7d),hx::paccDynamic)))
            			->setFixed(2,HX_("windowMode",73,4b,37,d3),windowMode)
            			->setFixed(3,HX_("height",e7,07,4c,02), ::Dynamic(config->__Field(HX_("window_h",19,c3,cd,7d),hx::paccDynamic)))
            			->setFixed(4,HX_("minimizable",81,68,12,06), ::Dynamic(config->__Field(HX_("window_minimizable",72,d2,2e,4d),hx::paccDynamic)))
            			->setFixed(5,HX_("title",98,15,3b,10),HX_("test_game",3f,de,44,2d))
            			->setFixed(6,HX_("vSync",f1,59,81,28), ::Dynamic(config->__Field(HX_("window_vsync",02,9d,6b,cc),hx::paccDynamic)))
            			->setFixed(7,HX_("maximizable",93,c3,2c,41), ::Dynamic(config->__Field(HX_("window_maximizable",84,2d,49,88),hx::paccDynamic)))
            			->setFixed(8,HX_("samplesPerPixel",92,52,4f,57), ::Dynamic(config->__Field(HX_("window_msaa",b5,1b,1a,59),hx::paccDynamic)))), ::Dynamic(new _hx_Closure_2()));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Main_obj,start,(void))


Main_obj::Main_obj()
{
}

bool Main_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"main") ) { outValue = main_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { outValue = ( state ); return true; }
		if (HX_FIELD_EQ(inName,"start") ) { outValue = start_dyn(); return true; }
	}
	return false;
}

bool Main_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"state") ) { state=ioValue.Cast< int >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Main_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Main_obj_sStaticStorageInfo[] = {
	{hx::fsString,(void *) &Main_obj::projectName,HX_HCSTRING("projectName","\xc4","\x91","\xa8","\x23")},
	{hx::fsString,(void *) &Main_obj::projectPackage,HX_HCSTRING("projectPackage","\xad","\x3d","\x40","\x84")},
	{hx::fsInt,(void *) &Main_obj::state,HX_HCSTRING("state","\x11","\x76","\x0b","\x84")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Main_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Main_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Main_obj::projectName,"projectName");
	HX_MARK_MEMBER_NAME(Main_obj::projectPackage,"projectPackage");
	HX_MARK_MEMBER_NAME(Main_obj::state,"state");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Main_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Main_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Main_obj::projectName,"projectName");
	HX_VISIT_MEMBER_NAME(Main_obj::projectPackage,"projectPackage");
	HX_VISIT_MEMBER_NAME(Main_obj::state,"state");
};

#endif

hx::Class Main_obj::__mClass;

static ::String Main_obj_sStaticFields[] = {
	HX_HCSTRING("projectName","\xc4","\x91","\xa8","\x23"),
	HX_HCSTRING("projectPackage","\xad","\x3d","\x40","\x84"),
	HX_HCSTRING("state","\x11","\x76","\x0b","\x84"),
	HX_HCSTRING("main","\x39","\x38","\x56","\x48"),
	HX_HCSTRING("start","\x62","\x74","\x0b","\x84"),
	::String(null())
};

void Main_obj::__register()
{
	hx::Object *dummy = new Main_obj;
	Main_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("Main","\x59","\x64","\x2f","\x33");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Main_obj::__GetStatic;
	__mClass->mSetStaticField = &Main_obj::__SetStatic;
	__mClass->mMarkFunc = Main_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Main_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Main_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Main_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Main_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Main_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Main_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_4_boot)
HXDLIN(   4)		projectName = HX_("test_game",3f,de,44,2d);
            	}
{
            	HX_STACKFRAME(&_hx_pos_e47a9afac0942eb9_5_boot)
HXDLIN(   5)		projectPackage = HX_("arm",5c,fe,49,00);
            	}
}

