// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_c5728fd05c542abe
#define INCLUDED_c5728fd05c542abe
#include "cpp_float32array.h"
#endif
#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_iron_math_Mat4
#include <iron/math/Mat4.h>
#endif
#ifndef INCLUDED_iron_math_Quat
#include <iron/math/Quat.h>
#endif
#ifndef INCLUDED_iron_math_Vec4
#include <iron/math/Vec4.h>
#endif
#ifndef INCLUDED_kha_arrays_Float32ArrayPrivate
#include <kha/arrays/Float32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix4
#include <kha/math/FastMatrix4.h>
#endif
#ifndef INCLUDED_kha_math_FastVector4
#include <kha/math/FastVector4.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_04012593dfa58962_18_new,"iron.math.Mat4","new",0xa6640e66,"iron.math.Mat4.new","iron/math/Mat4.hx",18,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_21_compose,"iron.math.Mat4","compose",0xbde27218,"iron.math.Mat4.compose","iron/math/Mat4.hx",21,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_28_decompose,"iron.math.Mat4","decompose",0x38fb4a37,"iron.math.Mat4.decompose","iron/math/Mat4.hx",28,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_65_setLocation,"iron.math.Mat4","setLocation",0xb4cdebfd,"iron.math.Mat4.setLocation","iron/math/Mat4.hx",65,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_72_fromQuaternion,"iron.math.Mat4","fromQuaternion",0xeeef72e2,"iron.math.Mat4.fromQuaternion","iron/math/Mat4.hx",72,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_125_toArray,"iron.math.Mat4","toArray",0x2c827324,"iron.math.Mat4.toArray","iron/math/Mat4.hx",125,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_133_setIdentity,"iron.math.Mat4","setIdentity",0x88b6c306,"iron.math.Mat4.setIdentity","iron/math/Mat4.hx",133,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_141_initTranslate,"iron.math.Mat4","initTranslate",0x81bfdba4,"iron.math.Mat4.initTranslate","iron/math/Mat4.hx",141,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_148_translate,"iron.math.Mat4","translate",0x07d35dd4,"iron.math.Mat4.translate","iron/math/Mat4.hx",148,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_155_scale,"iron.math.Mat4","scale",0xf1ef1a10,"iron.math.Mat4.scale","iron/math/Mat4.hx",155,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_161_multmat3x4,"iron.math.Mat4","multmat3x4",0xc7669fb9,"iron.math.Mat4.multmat3x4","iron/math/Mat4.hx",161,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_193_multmat,"iron.math.Mat4","multmat",0x3319f1b6,"iron.math.Mat4.multmat","iron/math/Mat4.hx",193,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_202_multmat2,"iron.math.Mat4","multmat2",0x83998dbc,"iron.math.Mat4.multmat2","iron/math/Mat4.hx",202,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_235_multmats,"iron.math.Mat4","multmats",0x83998dfd,"iron.math.Mat4.multmats","iron/math/Mat4.hx",235,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_269_getInverse,"iron.math.Mat4","getInverse",0x58150074,"iron.math.Mat4.getInverse","iron/math/Mat4.hx",269,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_298_transpose,"iron.math.Mat4","transpose",0x0a82d6ff,"iron.math.Mat4.transpose","iron/math/Mat4.hx",298,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_308_transpose3x3,"iron.math.Mat4","transpose3x3",0x0f1b6e0f,"iron.math.Mat4.transpose3x3","iron/math/Mat4.hx",308,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_315_clone,"iron.math.Mat4","clone",0xc1835ee3,"iron.math.Mat4.clone","iron/math/Mat4.hx",315,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_327_init,"iron.math.Mat4","init",0xede1424a,"iron.math.Mat4.init","iron/math/Mat4.hx",327,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_334_set,"iron.math.Mat4","set",0xa667d9a8,"iron.math.Mat4.set","iron/math/Mat4.hx",334,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_341_setF32,"iron.math.Mat4","setF32",0xf286e9bd,"iron.math.Mat4.setF32","iron/math/Mat4.hx",341,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_348_setFrom,"iron.math.Mat4","setFrom",0x43b59f32,"iron.math.Mat4.setFrom","iron/math/Mat4.hx",348,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_357_getLoc,"iron.math.Mat4","getLoc",0x26435744,"iron.math.Mat4.getLoc","iron/math/Mat4.hx",357,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_361_getScale,"iron.math.Mat4","getScale",0xbf190a4e,"iron.math.Mat4.getScale","iron/math/Mat4.hx",361,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_368_mult,"iron.math.Mat4","mult",0xf08b6f2a,"iron.math.Mat4.mult","iron/math/Mat4.hx",368,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_376_toRotation,"iron.math.Mat4","toRotation",0x45650093,"iron.math.Mat4.toRotation","iron/math/Mat4.hx",376,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_395_getQuat,"iron.math.Mat4","getQuat",0x57fba193,"iron.math.Mat4.getQuat","iron/math/Mat4.hx",395,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_474_setLookAt,"iron.math.Mat4","setLookAt",0x7fb070fa,"iron.math.Mat4.setLookAt","iron/math/Mat4.hx",474,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_517_applyQuat,"iron.math.Mat4","applyQuat",0xf32cbfeb,"iron.math.Mat4.applyQuat","iron/math/Mat4.hx",517,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_522_write,"iron.math.Mat4","write",0x4979b865,"iron.math.Mat4.write","iron/math/Mat4.hx",522,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_546_multvec,"iron.math.Mat4","multvec",0x3320c96a,"iron.math.Mat4.multvec","iron/math/Mat4.hx",546,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_549_right,"iron.math.Mat4","right",0x62845762,"iron.math.Mat4.right","iron/math/Mat4.hx",549,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_550_up,"iron.math.Mat4","up",0x56d84b15,"iron.math.Mat4.up","iron/math/Mat4.hx",550,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_551_look,"iron.math.Mat4","look",0xefddad99,"iron.math.Mat4.look","iron/math/Mat4.hx",551,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_553_get__00,"iron.math.Mat4","get__00",0x612bc1bc,"iron.math.Mat4.get__00","iron/math/Mat4.hx",553,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_553_set__00,"iron.math.Mat4","set__00",0x542d52c8,"iron.math.Mat4.set__00","iron/math/Mat4.hx",553,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_554_get__01,"iron.math.Mat4","get__01",0x612bc1bd,"iron.math.Mat4.get__01","iron/math/Mat4.hx",554,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_554_set__01,"iron.math.Mat4","set__01",0x542d52c9,"iron.math.Mat4.set__01","iron/math/Mat4.hx",554,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_555_get__02,"iron.math.Mat4","get__02",0x612bc1be,"iron.math.Mat4.get__02","iron/math/Mat4.hx",555,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_555_set__02,"iron.math.Mat4","set__02",0x542d52ca,"iron.math.Mat4.set__02","iron/math/Mat4.hx",555,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_556_get__03,"iron.math.Mat4","get__03",0x612bc1bf,"iron.math.Mat4.get__03","iron/math/Mat4.hx",556,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_556_set__03,"iron.math.Mat4","set__03",0x542d52cb,"iron.math.Mat4.set__03","iron/math/Mat4.hx",556,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_557_get__10,"iron.math.Mat4","get__10",0x612bc29b,"iron.math.Mat4.get__10","iron/math/Mat4.hx",557,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_557_set__10,"iron.math.Mat4","set__10",0x542d53a7,"iron.math.Mat4.set__10","iron/math/Mat4.hx",557,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_558_get__11,"iron.math.Mat4","get__11",0x612bc29c,"iron.math.Mat4.get__11","iron/math/Mat4.hx",558,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_558_set__11,"iron.math.Mat4","set__11",0x542d53a8,"iron.math.Mat4.set__11","iron/math/Mat4.hx",558,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_559_get__12,"iron.math.Mat4","get__12",0x612bc29d,"iron.math.Mat4.get__12","iron/math/Mat4.hx",559,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_559_set__12,"iron.math.Mat4","set__12",0x542d53a9,"iron.math.Mat4.set__12","iron/math/Mat4.hx",559,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_560_get__13,"iron.math.Mat4","get__13",0x612bc29e,"iron.math.Mat4.get__13","iron/math/Mat4.hx",560,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_560_set__13,"iron.math.Mat4","set__13",0x542d53aa,"iron.math.Mat4.set__13","iron/math/Mat4.hx",560,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_561_get__20,"iron.math.Mat4","get__20",0x612bc37a,"iron.math.Mat4.get__20","iron/math/Mat4.hx",561,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_561_set__20,"iron.math.Mat4","set__20",0x542d5486,"iron.math.Mat4.set__20","iron/math/Mat4.hx",561,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_562_get__21,"iron.math.Mat4","get__21",0x612bc37b,"iron.math.Mat4.get__21","iron/math/Mat4.hx",562,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_562_set__21,"iron.math.Mat4","set__21",0x542d5487,"iron.math.Mat4.set__21","iron/math/Mat4.hx",562,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_563_get__22,"iron.math.Mat4","get__22",0x612bc37c,"iron.math.Mat4.get__22","iron/math/Mat4.hx",563,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_563_set__22,"iron.math.Mat4","set__22",0x542d5488,"iron.math.Mat4.set__22","iron/math/Mat4.hx",563,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_564_get__23,"iron.math.Mat4","get__23",0x612bc37d,"iron.math.Mat4.get__23","iron/math/Mat4.hx",564,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_564_set__23,"iron.math.Mat4","set__23",0x542d5489,"iron.math.Mat4.set__23","iron/math/Mat4.hx",564,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_565_get__30,"iron.math.Mat4","get__30",0x612bc459,"iron.math.Mat4.get__30","iron/math/Mat4.hx",565,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_565_set__30,"iron.math.Mat4","set__30",0x542d5565,"iron.math.Mat4.set__30","iron/math/Mat4.hx",565,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_566_get__31,"iron.math.Mat4","get__31",0x612bc45a,"iron.math.Mat4.get__31","iron/math/Mat4.hx",566,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_566_set__31,"iron.math.Mat4","set__31",0x542d5566,"iron.math.Mat4.set__31","iron/math/Mat4.hx",566,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_567_get__32,"iron.math.Mat4","get__32",0x612bc45b,"iron.math.Mat4.get__32","iron/math/Mat4.hx",567,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_567_set__32,"iron.math.Mat4","set__32",0x542d5567,"iron.math.Mat4.set__32","iron/math/Mat4.hx",567,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_568_get__33,"iron.math.Mat4","get__33",0x612bc45c,"iron.math.Mat4.get__33","iron/math/Mat4.hx",568,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_568_set__33,"iron.math.Mat4","set__33",0x542d5568,"iron.math.Mat4.set__33","iron/math/Mat4.hx",568,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_571_toString,"iron.math.Mat4","toString",0x1ee1fce6,"iron.math.Mat4.toString","iron/math/Mat4.hx",571,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_98_identity,"iron.math.Mat4","identity",0x9fa27178,"iron.math.Mat4.identity","iron/math/Mat4.hx",98,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_107_fromArray,"iron.math.Mat4","fromArray",0x986bde55,"iron.math.Mat4.fromArray","iron/math/Mat4.hx",107,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_116_fromFloat32Array,"iron.math.Mat4","fromFloat32Array",0xbbb25522,"iron.math.Mat4.fromFloat32Array","iron/math/Mat4.hx",116,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_448_persp,"iron.math.Mat4","persp",0x391ab640,"iron.math.Mat4.persp","iron/math/Mat4.hx",448,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_459_ortho,"iron.math.Mat4","ortho",0xae4d62be,"iron.math.Mat4.ortho","iron/math/Mat4.hx",459,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_542_lookAt,"iron.math.Mat4","lookAt",0xe4d73eec,"iron.math.Mat4.lookAt","iron/math/Mat4.hx",542,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_10_boot,"iron.math.Mat4","boot",0xe9418b6c,"iron.math.Mat4.boot","iron/math/Mat4.hx",10,0xd5cb2f6a)
HX_LOCAL_STACK_FRAME(_hx_pos_04012593dfa58962_11_boot,"iron.math.Mat4","boot",0xe9418b6c,"iron.math.Mat4.boot","iron/math/Mat4.hx",11,0xd5cb2f6a)
namespace iron{
namespace math{

void Mat4_obj::__construct(float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_18_new)
HXDLIN(  18)		this->self =  ::kha::math::FastMatrix4_obj::__alloc( HX_CTX ,_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
            	}

Dynamic Mat4_obj::__CreateEmpty() { return new Mat4_obj; }

void *Mat4_obj::_hx_vtable = 0;

Dynamic Mat4_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Mat4_obj > _hx_result = new Mat4_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3],inArgs[4],inArgs[5],inArgs[6],inArgs[7],inArgs[8],inArgs[9],inArgs[10],inArgs[11],inArgs[12],inArgs[13],inArgs[14],inArgs[15]);
	return _hx_result;
}

bool Mat4_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x118e08a8;
}

 ::iron::math::Mat4 Mat4_obj::compose( ::iron::math::Vec4 location, ::iron::math::Quat quaternion, ::iron::math::Vec4 sc){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_21_compose)
HXLINE(  22)		this->fromQuaternion(quaternion);
HXLINE(  23)		this->scale(sc);
HXLINE(  24)		this->setLocation(location);
HXLINE(  25)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,compose,return )

 ::iron::math::Mat4 Mat4_obj::decompose( ::iron::math::Vec4 location, ::iron::math::Quat quaternion, ::iron::math::Vec4 scale){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_28_decompose)
HXLINE(  29)		::iron::math::Mat4_obj::helpVec->w = ((Float)0.0);
HXLINE(  30)		 ::iron::math::Vec4 _this = ::iron::math::Mat4_obj::helpVec->set(this->self->_00,this->self->_01,this->self->_02,null());
HXDLIN(  30)		float v = (_this->x * _this->x);
HXDLIN(  30)		float v1 = (v + (_this->y * _this->y));
HXDLIN(  30)		float sx = ::Math_obj::sqrt((v1 + (_this->z * _this->z)));
HXLINE(  31)		 ::iron::math::Vec4 _this1 = ::iron::math::Mat4_obj::helpVec->set(this->self->_10,this->self->_11,this->self->_12,null());
HXDLIN(  31)		float v2 = (_this1->x * _this1->x);
HXDLIN(  31)		float v3 = (v2 + (_this1->y * _this1->y));
HXDLIN(  31)		float sy = ::Math_obj::sqrt((v3 + (_this1->z * _this1->z)));
HXLINE(  32)		 ::iron::math::Vec4 _this2 = ::iron::math::Mat4_obj::helpVec->set(this->self->_20,this->self->_21,this->self->_22,null());
HXDLIN(  32)		float v4 = (_this2->x * _this2->x);
HXDLIN(  32)		float v5 = (v4 + (_this2->y * _this2->y));
HXDLIN(  32)		float sz = ::Math_obj::sqrt((v5 + (_this2->z * _this2->z)));
HXLINE(  33)		 ::kha::math::FastMatrix4 _this3 = this->self;
HXDLIN(  33)		float m3 = _this3->_12;
HXDLIN(  33)		float m4 = _this3->_22;
HXDLIN(  33)		float m5 = _this3->_32;
HXDLIN(  33)		float m6 = _this3->_13;
HXDLIN(  33)		float m7 = _this3->_23;
HXDLIN(  33)		float m8 = _this3->_33;
HXDLIN(  33)		float c00 = (((_this3->_11 * ((m4 * m8) - (m5 * m7))) - (_this3->_21 * ((m3 * m8) - (m5 * m6)))) + (_this3->_31 * ((m3 * m7) - (m4 * m6))));
HXDLIN(  33)		float m31 = _this3->_12;
HXDLIN(  33)		float m41 = _this3->_22;
HXDLIN(  33)		float m51 = _this3->_32;
HXDLIN(  33)		float m61 = _this3->_13;
HXDLIN(  33)		float m71 = _this3->_23;
HXDLIN(  33)		float m81 = _this3->_33;
HXDLIN(  33)		float c01 = (((_this3->_10 * ((m41 * m81) - (m51 * m71))) - (_this3->_20 * ((m31 * m81) - (m51 * m61)))) + (_this3->_30 * ((m31 * m71) - (m41 * m61))));
HXDLIN(  33)		float m32 = _this3->_11;
HXDLIN(  33)		float m42 = _this3->_21;
HXDLIN(  33)		float m52 = _this3->_31;
HXDLIN(  33)		float m62 = _this3->_13;
HXDLIN(  33)		float m72 = _this3->_23;
HXDLIN(  33)		float m82 = _this3->_33;
HXDLIN(  33)		float c02 = (((_this3->_10 * ((m42 * m82) - (m52 * m72))) - (_this3->_20 * ((m32 * m82) - (m52 * m62)))) + (_this3->_30 * ((m32 * m72) - (m42 * m62))));
HXDLIN(  33)		float m33 = _this3->_11;
HXDLIN(  33)		float m43 = _this3->_21;
HXDLIN(  33)		float m53 = _this3->_31;
HXDLIN(  33)		float m63 = _this3->_12;
HXDLIN(  33)		float m73 = _this3->_22;
HXDLIN(  33)		float m83 = _this3->_32;
HXDLIN(  33)		float c03 = (((_this3->_10 * ((m43 * m83) - (m53 * m73))) - (_this3->_20 * ((m33 * m83) - (m53 * m63)))) + (_this3->_30 * ((m33 * m73) - (m43 * m63))));
HXDLIN(  33)		float det = (_this3->_00 * c00);
HXDLIN(  33)		float det1 = (det - (_this3->_01 * c01));
HXDLIN(  33)		float det2 = (det1 + (_this3->_02 * c02));
HXDLIN(  33)		float det3 = (det2 - (_this3->_03 * c03));
HXLINE(  34)		if ((det3 < ((Float)0.0))) {
HXLINE(  34)			sx = -(sx);
            		}
HXLINE(  35)		location->x = this->self->_30;
HXDLIN(  35)		location->y = this->self->_31;
HXDLIN(  35)		location->z = this->self->_32;
HXLINE(  37)		::iron::math::Mat4_obj::helpMat->self->_00 = this->self->_00;
HXDLIN(  37)		::iron::math::Mat4_obj::helpMat->self->_10 = this->self->_10;
HXDLIN(  37)		::iron::math::Mat4_obj::helpMat->self->_20 = this->self->_20;
HXDLIN(  37)		::iron::math::Mat4_obj::helpMat->self->_30 = this->self->_30;
HXLINE(  38)		::iron::math::Mat4_obj::helpMat->self->_01 = this->self->_01;
HXDLIN(  38)		::iron::math::Mat4_obj::helpMat->self->_11 = this->self->_11;
HXDLIN(  38)		::iron::math::Mat4_obj::helpMat->self->_21 = this->self->_21;
HXDLIN(  38)		::iron::math::Mat4_obj::helpMat->self->_31 = this->self->_31;
HXLINE(  39)		::iron::math::Mat4_obj::helpMat->self->_02 = this->self->_02;
HXDLIN(  39)		::iron::math::Mat4_obj::helpMat->self->_12 = this->self->_12;
HXDLIN(  39)		::iron::math::Mat4_obj::helpMat->self->_22 = this->self->_22;
HXDLIN(  39)		::iron::math::Mat4_obj::helpMat->self->_32 = this->self->_32;
HXLINE(  40)		::iron::math::Mat4_obj::helpMat->self->_03 = this->self->_03;
HXDLIN(  40)		::iron::math::Mat4_obj::helpMat->self->_13 = this->self->_13;
HXDLIN(  40)		::iron::math::Mat4_obj::helpMat->self->_23 = this->self->_23;
HXDLIN(  40)		::iron::math::Mat4_obj::helpMat->self->_33 = this->self->_33;
HXLINE(  41)		Float invSX = ((Float)((Float)1.0) / (Float)sx);
HXLINE(  42)		Float invSY = ((Float)((Float)1.0) / (Float)sy);
HXLINE(  43)		Float invSZ = ((Float)((Float)1.0) / (Float)sz);
HXLINE(  44)		{
HXLINE(  44)			 ::iron::math::Mat4 _g = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  44)			_g->self->_00 = (_g->self->_00 * invSX);
            		}
HXLINE(  45)		{
HXLINE(  45)			 ::iron::math::Mat4 _g1 = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  45)			_g1->self->_01 = (_g1->self->_01 * invSX);
            		}
HXLINE(  46)		{
HXLINE(  46)			 ::iron::math::Mat4 _g2 = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  46)			_g2->self->_02 = (_g2->self->_02 * invSX);
            		}
HXLINE(  47)		::iron::math::Mat4_obj::helpMat->self->_03 = ((Float)0.0);
HXLINE(  48)		{
HXLINE(  48)			 ::iron::math::Mat4 _g3 = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  48)			_g3->self->_10 = (_g3->self->_10 * invSY);
            		}
HXLINE(  49)		{
HXLINE(  49)			 ::iron::math::Mat4 _g4 = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  49)			_g4->self->_11 = (_g4->self->_11 * invSY);
            		}
HXLINE(  50)		{
HXLINE(  50)			 ::iron::math::Mat4 _g5 = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  50)			_g5->self->_12 = (_g5->self->_12 * invSY);
            		}
HXLINE(  51)		::iron::math::Mat4_obj::helpMat->self->_13 = ((Float)0.0);
HXLINE(  52)		{
HXLINE(  52)			 ::iron::math::Mat4 _g6 = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  52)			_g6->self->_20 = (_g6->self->_20 * invSZ);
            		}
HXLINE(  53)		{
HXLINE(  53)			 ::iron::math::Mat4 _g7 = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  53)			_g7->self->_21 = (_g7->self->_21 * invSZ);
            		}
HXLINE(  54)		{
HXLINE(  54)			 ::iron::math::Mat4 _g8 = ::iron::math::Mat4_obj::helpMat;
HXDLIN(  54)			_g8->self->_22 = (_g8->self->_22 * invSZ);
            		}
HXLINE(  55)		::iron::math::Mat4_obj::helpMat->self->_23 = ((Float)0.0);
HXLINE(  56)		::iron::math::Mat4_obj::helpMat->self->_30 = ((Float)0.0);
HXLINE(  57)		::iron::math::Mat4_obj::helpMat->self->_31 = ((Float)0.0);
HXLINE(  58)		::iron::math::Mat4_obj::helpMat->self->_32 = ((Float)0.0);
HXLINE(  59)		::iron::math::Mat4_obj::helpMat->self->_33 = ((Float)0.0);
HXLINE(  60)		quaternion->fromRotationMat(::iron::math::Mat4_obj::helpMat);
HXLINE(  61)		scale->x = sx;
HXDLIN(  61)		scale->y = sy;
HXDLIN(  61)		scale->z = sz;
HXLINE(  62)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,decompose,return )

 ::iron::math::Mat4 Mat4_obj::setLocation( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_65_setLocation)
HXLINE(  66)		this->self->_30 = v->x;
HXLINE(  67)		this->self->_31 = v->y;
HXLINE(  68)		this->self->_32 = v->z;
HXLINE(  69)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,setLocation,return )

 ::iron::math::Mat4 Mat4_obj::fromQuaternion( ::iron::math::Quat q){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_72_fromQuaternion)
HXLINE(  73)		float x = q->x;
HXDLIN(  73)		float y = q->y;
HXDLIN(  73)		float z = q->z;
HXDLIN(  73)		float w = q->w;
HXLINE(  74)		float x2 = (x + x);
HXDLIN(  74)		float y2 = (y + y);
HXDLIN(  74)		float z2 = (z + z);
HXLINE(  75)		float xx = (x * x2);
HXDLIN(  75)		float xy = (x * y2);
HXDLIN(  75)		float xz = (x * z2);
HXLINE(  76)		float yy = (y * y2);
HXDLIN(  76)		float yz = (y * z2);
HXDLIN(  76)		float zz = (z * z2);
HXLINE(  77)		float wx = (w * x2);
HXDLIN(  77)		float wy = (w * y2);
HXDLIN(  77)		float wz = (w * z2);
HXLINE(  79)		this->self->_00 = (((Float)1.0) - (yy + zz));
HXLINE(  80)		this->self->_10 = (xy - wz);
HXLINE(  81)		this->self->_20 = (xz + wy);
HXLINE(  83)		this->self->_01 = (xy + wz);
HXLINE(  84)		this->self->_11 = (((Float)1.0) - (xx + zz));
HXLINE(  85)		this->self->_21 = (yz - wx);
HXLINE(  87)		this->self->_02 = (xz - wy);
HXLINE(  88)		this->self->_12 = (yz + wx);
HXLINE(  89)		this->self->_22 = (((Float)1.0) - (xx + yy));
HXLINE(  91)		this->self->_03 = ((Float)0.0);
HXDLIN(  91)		this->self->_13 = ((Float)0.0);
HXDLIN(  91)		this->self->_23 = ((Float)0.0);
HXLINE(  92)		this->self->_30 = ((Float)0.0);
HXDLIN(  92)		this->self->_31 = ((Float)0.0);
HXDLIN(  92)		this->self->_32 = ((Float)0.0);
HXDLIN(  92)		this->self->_33 = ((Float)1.0);
HXLINE(  94)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,fromQuaternion,return )

::Array< float > Mat4_obj::toArray(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_125_toArray)
HXDLIN( 125)		return ::Array_obj< float >::__new(16)->init(0,this->self->_00)->init(1,this->self->_10)->init(2,this->self->_20)->init(3,this->self->_30)->init(4,this->self->_01)->init(5,this->self->_11)->init(6,this->self->_21)->init(7,this->self->_31)->init(8,this->self->_02)->init(9,this->self->_12)->init(10,this->self->_22)->init(11,this->self->_32)->init(12,this->self->_03)->init(13,this->self->_13)->init(14,this->self->_23)->init(15,this->self->_33);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,toArray,return )

 ::iron::math::Mat4 Mat4_obj::setIdentity(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_133_setIdentity)
HXLINE( 134)		this->self->_00 = ((Float)1.0);
HXDLIN( 134)		this->self->_01 = ((Float)0.0);
HXDLIN( 134)		this->self->_02 = ((Float)0.0);
HXDLIN( 134)		this->self->_03 = ((Float)0.0);
HXLINE( 135)		this->self->_10 = ((Float)0.0);
HXDLIN( 135)		this->self->_11 = ((Float)1.0);
HXDLIN( 135)		this->self->_12 = ((Float)0.0);
HXDLIN( 135)		this->self->_13 = ((Float)0.0);
HXLINE( 136)		this->self->_20 = ((Float)0.0);
HXDLIN( 136)		this->self->_21 = ((Float)0.0);
HXDLIN( 136)		this->self->_22 = ((Float)1.0);
HXDLIN( 136)		this->self->_23 = ((Float)0.0);
HXLINE( 137)		this->self->_30 = ((Float)0.0);
HXDLIN( 137)		this->self->_31 = ((Float)0.0);
HXDLIN( 137)		this->self->_32 = ((Float)0.0);
HXDLIN( 137)		this->self->_33 = ((Float)1.0);
HXLINE( 138)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,setIdentity,return )

void Mat4_obj::initTranslate(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< Float >  __o_z){
Float x = __o_x.Default(((Float)0.0));
Float y = __o_y.Default(((Float)0.0));
Float z = __o_z.Default(((Float)0.0));
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_141_initTranslate)
HXLINE( 142)		this->self->_00 = ((Float)1.0);
HXDLIN( 142)		this->self->_01 = ((Float)0.0);
HXDLIN( 142)		this->self->_02 = ((Float)0.0);
HXDLIN( 142)		this->self->_03 = ((Float)0.0);
HXLINE( 143)		this->self->_10 = ((Float)0.0);
HXDLIN( 143)		this->self->_11 = ((Float)1.0);
HXDLIN( 143)		this->self->_12 = ((Float)0.0);
HXDLIN( 143)		this->self->_13 = ((Float)0.0);
HXLINE( 144)		this->self->_20 = ((Float)0.0);
HXDLIN( 144)		this->self->_21 = ((Float)0.0);
HXDLIN( 144)		this->self->_22 = ((Float)1.0);
HXDLIN( 144)		this->self->_23 = ((Float)0.0);
HXLINE( 145)		this->self->_30 = x;
HXDLIN( 145)		this->self->_31 = y;
HXDLIN( 145)		this->self->_32 = z;
HXDLIN( 145)		this->self->_33 = ((Float)1.0);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,initTranslate,(void))

void Mat4_obj::translate(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< Float >  __o_z){
Float x = __o_x.Default(((Float)0.0));
Float y = __o_y.Default(((Float)0.0));
Float z = __o_z.Default(((Float)0.0));
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_148_translate)
HXLINE( 149)		{
HXLINE( 149)			 ::iron::math::Mat4 _g = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 149)			{
HXLINE( 149)				float _g1 = _g->self->_00;
HXDLIN( 149)				_g->self->_00 = (_g1 + (x * this->self->_03));
            			}
            		}
HXDLIN( 149)		{
HXLINE( 149)			 ::iron::math::Mat4 _g2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 149)			{
HXLINE( 149)				float _g3 = _g2->self->_01;
HXDLIN( 149)				_g2->self->_01 = (_g3 + (y * this->self->_03));
            			}
            		}
HXDLIN( 149)		{
HXLINE( 149)			 ::iron::math::Mat4 _g4 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 149)			{
HXLINE( 149)				float _g5 = _g4->self->_02;
HXDLIN( 149)				_g4->self->_02 = (_g5 + (z * this->self->_03));
            			}
            		}
HXLINE( 150)		{
HXLINE( 150)			 ::iron::math::Mat4 _g6 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 150)			{
HXLINE( 150)				float _g7 = _g6->self->_10;
HXDLIN( 150)				_g6->self->_10 = (_g7 + (x * this->self->_13));
            			}
            		}
HXDLIN( 150)		{
HXLINE( 150)			 ::iron::math::Mat4 _g8 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 150)			{
HXLINE( 150)				float _g9 = _g8->self->_11;
HXDLIN( 150)				_g8->self->_11 = (_g9 + (y * this->self->_13));
            			}
            		}
HXDLIN( 150)		{
HXLINE( 150)			 ::iron::math::Mat4 _g10 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 150)			{
HXLINE( 150)				float _g11 = _g10->self->_12;
HXDLIN( 150)				_g10->self->_12 = (_g11 + (z * this->self->_13));
            			}
            		}
HXLINE( 151)		{
HXLINE( 151)			 ::iron::math::Mat4 _g12 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 151)			{
HXLINE( 151)				float _g13 = _g12->self->_20;
HXDLIN( 151)				_g12->self->_20 = (_g13 + (x * this->self->_23));
            			}
            		}
HXDLIN( 151)		{
HXLINE( 151)			 ::iron::math::Mat4 _g14 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 151)			{
HXLINE( 151)				float _g15 = _g14->self->_21;
HXDLIN( 151)				_g14->self->_21 = (_g15 + (y * this->self->_23));
            			}
            		}
HXDLIN( 151)		{
HXLINE( 151)			 ::iron::math::Mat4 _g16 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 151)			{
HXLINE( 151)				float _g17 = _g16->self->_22;
HXDLIN( 151)				_g16->self->_22 = (_g17 + (z * this->self->_23));
            			}
            		}
HXLINE( 152)		{
HXLINE( 152)			 ::iron::math::Mat4 _g18 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 152)			{
HXLINE( 152)				float _g19 = _g18->self->_30;
HXDLIN( 152)				_g18->self->_30 = (_g19 + (x * this->self->_33));
            			}
            		}
HXDLIN( 152)		{
HXLINE( 152)			 ::iron::math::Mat4 _g20 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 152)			{
HXLINE( 152)				float _g21 = _g20->self->_31;
HXDLIN( 152)				_g20->self->_31 = (_g21 + (y * this->self->_33));
            			}
            		}
HXDLIN( 152)		{
HXLINE( 152)			 ::iron::math::Mat4 _g22 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 152)			{
HXLINE( 152)				float _g23 = _g22->self->_32;
HXDLIN( 152)				_g22->self->_32 = (_g23 + (z * this->self->_33));
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,translate,(void))

void Mat4_obj::scale( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_155_scale)
HXLINE( 156)		{
HXLINE( 156)			 ::iron::math::Mat4 _g = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 156)			_g->self->_00 = (_g->self->_00 * v->x);
            		}
HXDLIN( 156)		{
HXLINE( 156)			 ::iron::math::Mat4 _g1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 156)			_g1->self->_01 = (_g1->self->_01 * v->x);
            		}
HXDLIN( 156)		{
HXLINE( 156)			 ::iron::math::Mat4 _g2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 156)			_g2->self->_02 = (_g2->self->_02 * v->x);
            		}
HXDLIN( 156)		{
HXLINE( 156)			 ::iron::math::Mat4 _g3 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 156)			_g3->self->_03 = (_g3->self->_03 * v->x);
            		}
HXLINE( 157)		{
HXLINE( 157)			 ::iron::math::Mat4 _g4 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 157)			_g4->self->_10 = (_g4->self->_10 * v->y);
            		}
HXDLIN( 157)		{
HXLINE( 157)			 ::iron::math::Mat4 _g5 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 157)			_g5->self->_11 = (_g5->self->_11 * v->y);
            		}
HXDLIN( 157)		{
HXLINE( 157)			 ::iron::math::Mat4 _g6 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 157)			_g6->self->_12 = (_g6->self->_12 * v->y);
            		}
HXDLIN( 157)		{
HXLINE( 157)			 ::iron::math::Mat4 _g7 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 157)			_g7->self->_13 = (_g7->self->_13 * v->y);
            		}
HXLINE( 158)		{
HXLINE( 158)			 ::iron::math::Mat4 _g8 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 158)			_g8->self->_20 = (_g8->self->_20 * v->z);
            		}
HXDLIN( 158)		{
HXLINE( 158)			 ::iron::math::Mat4 _g9 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 158)			_g9->self->_21 = (_g9->self->_21 * v->z);
            		}
HXDLIN( 158)		{
HXLINE( 158)			 ::iron::math::Mat4 _g10 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 158)			_g10->self->_22 = (_g10->self->_22 * v->z);
            		}
HXDLIN( 158)		{
HXLINE( 158)			 ::iron::math::Mat4 _g11 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 158)			_g11->self->_23 = (_g11->self->_23 * v->z);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,scale,(void))

void Mat4_obj::multmat3x4( ::iron::math::Mat4 a, ::iron::math::Mat4 b){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_161_multmat3x4)
HXLINE( 162)		float m11 = a->self->_00;
HXDLIN( 162)		float m12 = a->self->_01;
HXDLIN( 162)		float m13 = a->self->_02;
HXLINE( 163)		float m21 = a->self->_10;
HXDLIN( 163)		float m22 = a->self->_11;
HXDLIN( 163)		float m23 = a->self->_12;
HXLINE( 164)		float a31 = a->self->_20;
HXDLIN( 164)		float a32 = a->self->_21;
HXDLIN( 164)		float a33 = a->self->_22;
HXLINE( 165)		float a41 = a->self->_30;
HXDLIN( 165)		float a42 = a->self->_31;
HXDLIN( 165)		float a43 = a->self->_32;
HXLINE( 166)		float b11 = b->self->_00;
HXDLIN( 166)		float b12 = b->self->_01;
HXDLIN( 166)		float b13 = b->self->_02;
HXLINE( 167)		float b21 = b->self->_10;
HXDLIN( 167)		float b22 = b->self->_11;
HXDLIN( 167)		float b23 = b->self->_12;
HXLINE( 168)		float b31 = b->self->_20;
HXDLIN( 168)		float b32 = b->self->_21;
HXDLIN( 168)		float b33 = b->self->_22;
HXLINE( 169)		float b41 = b->self->_30;
HXDLIN( 169)		float b42 = b->self->_31;
HXDLIN( 169)		float b43 = b->self->_32;
HXLINE( 171)		this->self->_00 = (((m11 * b11) + (m12 * b21)) + (m13 * b31));
HXLINE( 172)		this->self->_01 = (((m11 * b12) + (m12 * b22)) + (m13 * b32));
HXLINE( 173)		this->self->_02 = (((m11 * b13) + (m12 * b23)) + (m13 * b33));
HXLINE( 174)		this->self->_03 = ((Float)0.0);
HXLINE( 176)		this->self->_10 = (((m21 * b11) + (m22 * b21)) + (m23 * b31));
HXLINE( 177)		this->self->_11 = (((m21 * b12) + (m22 * b22)) + (m23 * b32));
HXLINE( 178)		this->self->_12 = (((m21 * b13) + (m22 * b23)) + (m23 * b33));
HXLINE( 179)		this->self->_13 = ((Float)0.0);
HXLINE( 181)		this->self->_20 = (((a31 * b11) + (a32 * b21)) + (a33 * b31));
HXLINE( 182)		this->self->_21 = (((a31 * b12) + (a32 * b22)) + (a33 * b32));
HXLINE( 183)		this->self->_22 = (((a31 * b13) + (a32 * b23)) + (a33 * b33));
HXLINE( 184)		this->self->_23 = ((Float)0.0);
HXLINE( 186)		this->self->_30 = ((((a41 * b11) + (a42 * b21)) + (a43 * b31)) + b41);
HXLINE( 187)		this->self->_31 = ((((a41 * b12) + (a42 * b22)) + (a43 * b32)) + b42);
HXLINE( 188)		this->self->_32 = ((((a41 * b13) + (a42 * b23)) + (a43 * b33)) + b43);
HXLINE( 189)		this->self->_33 = ((Float)1.0);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,multmat3x4,(void))

 ::iron::math::Mat4 Mat4_obj::multmat( ::iron::math::Mat4 m){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_193_multmat)
HXLINE( 194)		float _hx_tmp = (this->self->_00 * m->self->_00);
HXDLIN( 194)		float _hx_tmp1 = (_hx_tmp + (this->self->_10 * m->self->_01));
HXDLIN( 194)		float _hx_tmp2 = (_hx_tmp1 + (this->self->_20 * m->self->_02));
HXDLIN( 194)		float _hx_tmp3 = (_hx_tmp2 + (this->self->_30 * m->self->_03));
HXDLIN( 194)		float _hx_tmp4 = (this->self->_00 * m->self->_10);
HXDLIN( 194)		float _hx_tmp5 = (_hx_tmp4 + (this->self->_10 * m->self->_11));
HXDLIN( 194)		float _hx_tmp6 = (_hx_tmp5 + (this->self->_20 * m->self->_12));
HXDLIN( 194)		float _hx_tmp7 = (_hx_tmp6 + (this->self->_30 * m->self->_13));
HXDLIN( 194)		float _hx_tmp8 = (this->self->_00 * m->self->_20);
HXDLIN( 194)		float _hx_tmp9 = (_hx_tmp8 + (this->self->_10 * m->self->_21));
HXDLIN( 194)		float _hx_tmp10 = (_hx_tmp9 + (this->self->_20 * m->self->_22));
HXDLIN( 194)		float _hx_tmp11 = (_hx_tmp10 + (this->self->_30 * m->self->_23));
HXDLIN( 194)		float _hx_tmp12 = (this->self->_00 * m->self->_30);
HXDLIN( 194)		float _hx_tmp13 = (_hx_tmp12 + (this->self->_10 * m->self->_31));
HXDLIN( 194)		float _hx_tmp14 = (_hx_tmp13 + (this->self->_20 * m->self->_32));
HXDLIN( 194)		float _hx_tmp15 = (_hx_tmp14 + (this->self->_30 * m->self->_33));
HXLINE( 195)		float _hx_tmp16 = (this->self->_01 * m->self->_00);
HXDLIN( 195)		float _hx_tmp17 = (_hx_tmp16 + (this->self->_11 * m->self->_01));
HXDLIN( 195)		float _hx_tmp18 = (_hx_tmp17 + (this->self->_21 * m->self->_02));
HXDLIN( 195)		float _hx_tmp19 = (_hx_tmp18 + (this->self->_31 * m->self->_03));
HXDLIN( 195)		float _hx_tmp20 = (this->self->_01 * m->self->_10);
HXDLIN( 195)		float _hx_tmp21 = (_hx_tmp20 + (this->self->_11 * m->self->_11));
HXDLIN( 195)		float _hx_tmp22 = (_hx_tmp21 + (this->self->_21 * m->self->_12));
HXDLIN( 195)		float _hx_tmp23 = (_hx_tmp22 + (this->self->_31 * m->self->_13));
HXDLIN( 195)		float _hx_tmp24 = (this->self->_01 * m->self->_20);
HXDLIN( 195)		float _hx_tmp25 = (_hx_tmp24 + (this->self->_11 * m->self->_21));
HXDLIN( 195)		float _hx_tmp26 = (_hx_tmp25 + (this->self->_21 * m->self->_22));
HXDLIN( 195)		float _hx_tmp27 = (_hx_tmp26 + (this->self->_31 * m->self->_23));
HXDLIN( 195)		float _hx_tmp28 = (this->self->_01 * m->self->_30);
HXDLIN( 195)		float _hx_tmp29 = (_hx_tmp28 + (this->self->_11 * m->self->_31));
HXDLIN( 195)		float _hx_tmp30 = (_hx_tmp29 + (this->self->_21 * m->self->_32));
HXDLIN( 195)		float _hx_tmp31 = (_hx_tmp30 + (this->self->_31 * m->self->_33));
HXLINE( 196)		float _hx_tmp32 = (this->self->_02 * m->self->_00);
HXDLIN( 196)		float _hx_tmp33 = (_hx_tmp32 + (this->self->_12 * m->self->_01));
HXDLIN( 196)		float _hx_tmp34 = (_hx_tmp33 + (this->self->_22 * m->self->_02));
HXDLIN( 196)		float _hx_tmp35 = (_hx_tmp34 + (this->self->_32 * m->self->_03));
HXDLIN( 196)		float _hx_tmp36 = (this->self->_02 * m->self->_10);
HXDLIN( 196)		float _hx_tmp37 = (_hx_tmp36 + (this->self->_12 * m->self->_11));
HXDLIN( 196)		float _hx_tmp38 = (_hx_tmp37 + (this->self->_22 * m->self->_12));
HXDLIN( 196)		float _hx_tmp39 = (_hx_tmp38 + (this->self->_32 * m->self->_13));
HXDLIN( 196)		float _hx_tmp40 = (this->self->_02 * m->self->_20);
HXDLIN( 196)		float _hx_tmp41 = (_hx_tmp40 + (this->self->_12 * m->self->_21));
HXDLIN( 196)		float _hx_tmp42 = (_hx_tmp41 + (this->self->_22 * m->self->_22));
HXDLIN( 196)		float _hx_tmp43 = (_hx_tmp42 + (this->self->_32 * m->self->_23));
HXDLIN( 196)		float _hx_tmp44 = (this->self->_02 * m->self->_30);
HXDLIN( 196)		float _hx_tmp45 = (_hx_tmp44 + (this->self->_12 * m->self->_31));
HXDLIN( 196)		float _hx_tmp46 = (_hx_tmp45 + (this->self->_22 * m->self->_32));
HXDLIN( 196)		float _hx_tmp47 = (_hx_tmp46 + (this->self->_32 * m->self->_33));
HXLINE( 197)		float _hx_tmp48 = (this->self->_03 * m->self->_00);
HXDLIN( 197)		float _hx_tmp49 = (_hx_tmp48 + (this->self->_13 * m->self->_01));
HXDLIN( 197)		float _hx_tmp50 = (_hx_tmp49 + (this->self->_23 * m->self->_02));
HXDLIN( 197)		float _hx_tmp51 = (_hx_tmp50 + (this->self->_33 * m->self->_03));
HXDLIN( 197)		float _hx_tmp52 = (this->self->_03 * m->self->_10);
HXDLIN( 197)		float _hx_tmp53 = (_hx_tmp52 + (this->self->_13 * m->self->_11));
HXDLIN( 197)		float _hx_tmp54 = (_hx_tmp53 + (this->self->_23 * m->self->_12));
HXDLIN( 197)		float _hx_tmp55 = (_hx_tmp54 + (this->self->_33 * m->self->_13));
HXDLIN( 197)		float _hx_tmp56 = (this->self->_03 * m->self->_20);
HXDLIN( 197)		float _hx_tmp57 = (_hx_tmp56 + (this->self->_13 * m->self->_21));
HXDLIN( 197)		float _hx_tmp58 = (_hx_tmp57 + (this->self->_23 * m->self->_22));
HXDLIN( 197)		float _hx_tmp59 = (_hx_tmp58 + (this->self->_33 * m->self->_23));
HXDLIN( 197)		float _hx_tmp60 = (this->self->_03 * m->self->_30);
HXDLIN( 197)		float _hx_tmp61 = (_hx_tmp60 + (this->self->_13 * m->self->_31));
HXDLIN( 197)		float _hx_tmp62 = (_hx_tmp61 + (this->self->_23 * m->self->_32));
HXLINE( 193)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,_hx_tmp3,_hx_tmp7,_hx_tmp11,_hx_tmp15,_hx_tmp19,_hx_tmp23,_hx_tmp27,_hx_tmp31,_hx_tmp35,_hx_tmp39,_hx_tmp43,_hx_tmp47,_hx_tmp51,_hx_tmp55,_hx_tmp59,(_hx_tmp62 + (this->self->_33 * m->self->_33)));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,multmat,return )

 ::iron::math::Mat4 Mat4_obj::multmat2( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_202_multmat2)
HXLINE( 203)		float a00 = this->self->_00;
HXDLIN( 203)		float a01 = this->self->_01;
HXDLIN( 203)		float a02 = this->self->_02;
HXDLIN( 203)		float a03 = this->self->_03;
HXLINE( 204)		float a10 = this->self->_10;
HXDLIN( 204)		float a11 = this->self->_11;
HXDLIN( 204)		float a12 = this->self->_12;
HXDLIN( 204)		float a13 = this->self->_13;
HXLINE( 205)		float a20 = this->self->_20;
HXDLIN( 205)		float a21 = this->self->_21;
HXDLIN( 205)		float a22 = this->self->_22;
HXDLIN( 205)		float a23 = this->self->_23;
HXLINE( 206)		float a30 = this->self->_30;
HXDLIN( 206)		float a31 = this->self->_31;
HXDLIN( 206)		float a32 = this->self->_32;
HXDLIN( 206)		float a33 = this->self->_33;
HXLINE( 207)		float b00 = m->self->_00;
HXDLIN( 207)		float b01 = m->self->_01;
HXDLIN( 207)		float b02 = m->self->_02;
HXDLIN( 207)		float b03 = m->self->_03;
HXLINE( 208)		float b10 = m->self->_10;
HXDLIN( 208)		float b11 = m->self->_11;
HXDLIN( 208)		float b12 = m->self->_12;
HXDLIN( 208)		float b13 = m->self->_13;
HXLINE( 209)		float b20 = m->self->_20;
HXDLIN( 209)		float b21 = m->self->_21;
HXDLIN( 209)		float b22 = m->self->_22;
HXDLIN( 209)		float b23 = m->self->_23;
HXLINE( 210)		float b30 = m->self->_30;
HXDLIN( 210)		float b31 = m->self->_31;
HXDLIN( 210)		float b32 = m->self->_32;
HXDLIN( 210)		float b33 = m->self->_33;
HXLINE( 212)		this->self->_00 = ((((a00 * b00) + (a01 * b10)) + (a02 * b20)) + (a03 * b30));
HXLINE( 213)		this->self->_01 = ((((a00 * b01) + (a01 * b11)) + (a02 * b21)) + (a03 * b31));
HXLINE( 214)		this->self->_02 = ((((a00 * b02) + (a01 * b12)) + (a02 * b22)) + (a03 * b32));
HXLINE( 215)		this->self->_03 = ((((a00 * b03) + (a01 * b13)) + (a02 * b23)) + (a03 * b33));
HXLINE( 217)		this->self->_10 = ((((a10 * b00) + (a11 * b10)) + (a12 * b20)) + (a13 * b30));
HXLINE( 218)		this->self->_11 = ((((a10 * b01) + (a11 * b11)) + (a12 * b21)) + (a13 * b31));
HXLINE( 219)		this->self->_12 = ((((a10 * b02) + (a11 * b12)) + (a12 * b22)) + (a13 * b32));
HXLINE( 220)		this->self->_13 = ((((a10 * b03) + (a11 * b13)) + (a12 * b23)) + (a13 * b33));
HXLINE( 222)		this->self->_20 = ((((a20 * b00) + (a21 * b10)) + (a22 * b20)) + (a23 * b30));
HXLINE( 223)		this->self->_21 = ((((a20 * b01) + (a21 * b11)) + (a22 * b21)) + (a23 * b31));
HXLINE( 224)		this->self->_22 = ((((a20 * b02) + (a21 * b12)) + (a22 * b22)) + (a23 * b32));
HXLINE( 225)		this->self->_23 = ((((a20 * b03) + (a21 * b13)) + (a22 * b23)) + (a23 * b33));
HXLINE( 227)		this->self->_30 = ((((a30 * b00) + (a31 * b10)) + (a32 * b20)) + (a33 * b30));
HXLINE( 228)		this->self->_31 = ((((a30 * b01) + (a31 * b11)) + (a32 * b21)) + (a33 * b31));
HXLINE( 229)		this->self->_32 = ((((a30 * b02) + (a31 * b12)) + (a32 * b22)) + (a33 * b32));
HXLINE( 230)		this->self->_33 = ((((a30 * b03) + (a31 * b13)) + (a32 * b23)) + (a33 * b33));
HXLINE( 232)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,multmat2,return )

 ::iron::math::Mat4 Mat4_obj::multmats( ::iron::math::Mat4 a, ::iron::math::Mat4 b){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_235_multmats)
HXLINE( 236)		float a11 = a->self->_00;
HXDLIN( 236)		float a12 = a->self->_10;
HXDLIN( 236)		float a13 = a->self->_20;
HXDLIN( 236)		float a14 = a->self->_30;
HXLINE( 237)		float a21 = a->self->_01;
HXDLIN( 237)		float a22 = a->self->_11;
HXDLIN( 237)		float a23 = a->self->_21;
HXDLIN( 237)		float a24 = a->self->_31;
HXLINE( 238)		float a31 = a->self->_02;
HXDLIN( 238)		float a32 = a->self->_12;
HXDLIN( 238)		float a33 = a->self->_22;
HXDLIN( 238)		float a34 = a->self->_32;
HXLINE( 239)		float a41 = a->self->_03;
HXDLIN( 239)		float a42 = a->self->_13;
HXDLIN( 239)		float a43 = a->self->_23;
HXDLIN( 239)		float a44 = a->self->_33;
HXLINE( 241)		float b11 = b->self->_00;
HXDLIN( 241)		float b12 = b->self->_10;
HXDLIN( 241)		float b13 = b->self->_20;
HXDLIN( 241)		float b14 = b->self->_30;
HXLINE( 242)		float b21 = b->self->_01;
HXDLIN( 242)		float b22 = b->self->_11;
HXDLIN( 242)		float b23 = b->self->_21;
HXDLIN( 242)		float b24 = b->self->_31;
HXLINE( 243)		float b31 = b->self->_02;
HXDLIN( 243)		float b32 = b->self->_12;
HXDLIN( 243)		float b33 = b->self->_22;
HXDLIN( 243)		float b34 = b->self->_32;
HXLINE( 244)		float b41 = b->self->_03;
HXDLIN( 244)		float b42 = b->self->_13;
HXDLIN( 244)		float b43 = b->self->_23;
HXDLIN( 244)		float b44 = b->self->_33;
HXLINE( 246)		this->self->_00 = ((((a11 * b11) + (a12 * b21)) + (a13 * b31)) + (a14 * b41));
HXLINE( 247)		this->self->_10 = ((((a11 * b12) + (a12 * b22)) + (a13 * b32)) + (a14 * b42));
HXLINE( 248)		this->self->_20 = ((((a11 * b13) + (a12 * b23)) + (a13 * b33)) + (a14 * b43));
HXLINE( 249)		this->self->_30 = ((((a11 * b14) + (a12 * b24)) + (a13 * b34)) + (a14 * b44));
HXLINE( 251)		this->self->_01 = ((((a21 * b11) + (a22 * b21)) + (a23 * b31)) + (a24 * b41));
HXLINE( 252)		this->self->_11 = ((((a21 * b12) + (a22 * b22)) + (a23 * b32)) + (a24 * b42));
HXLINE( 253)		this->self->_21 = ((((a21 * b13) + (a22 * b23)) + (a23 * b33)) + (a24 * b43));
HXLINE( 254)		this->self->_31 = ((((a21 * b14) + (a22 * b24)) + (a23 * b34)) + (a24 * b44));
HXLINE( 256)		this->self->_02 = ((((a31 * b11) + (a32 * b21)) + (a33 * b31)) + (a34 * b41));
HXLINE( 257)		this->self->_12 = ((((a31 * b12) + (a32 * b22)) + (a33 * b32)) + (a34 * b42));
HXLINE( 258)		this->self->_22 = ((((a31 * b13) + (a32 * b23)) + (a33 * b33)) + (a34 * b43));
HXLINE( 259)		this->self->_32 = ((((a31 * b14) + (a32 * b24)) + (a33 * b34)) + (a34 * b44));
HXLINE( 261)		this->self->_03 = ((((a41 * b11) + (a42 * b21)) + (a43 * b31)) + (a44 * b41));
HXLINE( 262)		this->self->_13 = ((((a41 * b12) + (a42 * b22)) + (a43 * b32)) + (a44 * b42));
HXLINE( 263)		this->self->_23 = ((((a41 * b13) + (a42 * b23)) + (a43 * b33)) + (a44 * b43));
HXLINE( 264)		this->self->_33 = ((((a41 * b14) + (a42 * b24)) + (a43 * b34)) + (a44 * b44));
HXLINE( 266)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,multmats,return )

 ::iron::math::Mat4 Mat4_obj::getInverse( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_269_getInverse)
HXLINE( 270)		float n11 = m->self->_00;
HXDLIN( 270)		float n12 = m->self->_10;
HXDLIN( 270)		float n13 = m->self->_20;
HXDLIN( 270)		float n14 = m->self->_30;
HXLINE( 271)		float n21 = m->self->_01;
HXDLIN( 271)		float n22 = m->self->_11;
HXDLIN( 271)		float n23 = m->self->_21;
HXDLIN( 271)		float n24 = m->self->_31;
HXLINE( 272)		float n31 = m->self->_02;
HXDLIN( 272)		float n32 = m->self->_12;
HXDLIN( 272)		float n33 = m->self->_22;
HXDLIN( 272)		float n34 = m->self->_32;
HXLINE( 273)		float n41 = m->self->_03;
HXDLIN( 273)		float n42 = m->self->_13;
HXDLIN( 273)		float n43 = m->self->_23;
HXDLIN( 273)		float n44 = m->self->_33;
HXLINE( 275)		this->self->_00 = (((((((n23 * n34) * n42) - ((n24 * n33) * n42)) + ((n24 * n32) * n43)) - ((n22 * n34) * n43)) - ((n23 * n32) * n44)) + ((n22 * n33) * n44));
HXLINE( 276)		this->self->_10 = (((((((n14 * n33) * n42) - ((n13 * n34) * n42)) - ((n14 * n32) * n43)) + ((n12 * n34) * n43)) + ((n13 * n32) * n44)) - ((n12 * n33) * n44));
HXLINE( 277)		this->self->_20 = (((((((n13 * n24) * n42) - ((n14 * n23) * n42)) + ((n14 * n22) * n43)) - ((n12 * n24) * n43)) - ((n13 * n22) * n44)) + ((n12 * n23) * n44));
HXLINE( 278)		this->self->_30 = (((((((n14 * n23) * n32) - ((n13 * n24) * n32)) - ((n14 * n22) * n33)) + ((n12 * n24) * n33)) + ((n13 * n22) * n34)) - ((n12 * n23) * n34));
HXLINE( 279)		this->self->_01 = (((((((n24 * n33) * n41) - ((n23 * n34) * n41)) - ((n24 * n31) * n43)) + ((n21 * n34) * n43)) + ((n23 * n31) * n44)) - ((n21 * n33) * n44));
HXLINE( 280)		this->self->_11 = (((((((n13 * n34) * n41) - ((n14 * n33) * n41)) + ((n14 * n31) * n43)) - ((n11 * n34) * n43)) - ((n13 * n31) * n44)) + ((n11 * n33) * n44));
HXLINE( 281)		this->self->_21 = (((((((n14 * n23) * n41) - ((n13 * n24) * n41)) - ((n14 * n21) * n43)) + ((n11 * n24) * n43)) + ((n13 * n21) * n44)) - ((n11 * n23) * n44));
HXLINE( 282)		this->self->_31 = (((((((n13 * n24) * n31) - ((n14 * n23) * n31)) + ((n14 * n21) * n33)) - ((n11 * n24) * n33)) - ((n13 * n21) * n34)) + ((n11 * n23) * n34));
HXLINE( 283)		this->self->_02 = (((((((n22 * n34) * n41) - ((n24 * n32) * n41)) + ((n24 * n31) * n42)) - ((n21 * n34) * n42)) - ((n22 * n31) * n44)) + ((n21 * n32) * n44));
HXLINE( 284)		this->self->_12 = (((((((n14 * n32) * n41) - ((n12 * n34) * n41)) - ((n14 * n31) * n42)) + ((n11 * n34) * n42)) + ((n12 * n31) * n44)) - ((n11 * n32) * n44));
HXLINE( 285)		this->self->_22 = (((((((n12 * n24) * n41) - ((n14 * n22) * n41)) + ((n14 * n21) * n42)) - ((n11 * n24) * n42)) - ((n12 * n21) * n44)) + ((n11 * n22) * n44));
HXLINE( 286)		this->self->_32 = (((((((n14 * n22) * n31) - ((n12 * n24) * n31)) - ((n14 * n21) * n32)) + ((n11 * n24) * n32)) + ((n12 * n21) * n34)) - ((n11 * n22) * n34));
HXLINE( 287)		this->self->_03 = (((((((n23 * n32) * n41) - ((n22 * n33) * n41)) - ((n23 * n31) * n42)) + ((n21 * n33) * n42)) + ((n22 * n31) * n43)) - ((n21 * n32) * n43));
HXLINE( 288)		this->self->_13 = (((((((n12 * n33) * n41) - ((n13 * n32) * n41)) + ((n13 * n31) * n42)) - ((n11 * n33) * n42)) - ((n12 * n31) * n43)) + ((n11 * n32) * n43));
HXLINE( 289)		this->self->_23 = (((((((n13 * n22) * n41) - ((n12 * n23) * n41)) - ((n13 * n21) * n42)) + ((n11 * n23) * n42)) + ((n12 * n21) * n43)) - ((n11 * n22) * n43));
HXLINE( 290)		this->self->_33 = (((((((n12 * n23) * n31) - ((n13 * n22) * n31)) + ((n13 * n21) * n32)) - ((n11 * n23) * n32)) - ((n12 * n21) * n33)) + ((n11 * n22) * n33));
HXLINE( 292)		float det = (n11 * this->self->_00);
HXDLIN( 292)		float det1 = (det + (n21 * this->self->_10));
HXDLIN( 292)		float det2 = (det1 + (n31 * this->self->_20));
HXDLIN( 292)		float det3 = (det2 + (n41 * this->self->_30));
HXLINE( 293)		if ((det3 == ((Float)0.0))) {
HXLINE( 293)			return this->setIdentity();
            		}
HXLINE( 294)		this->mult(((Float)((Float)1.0) / (Float)det3));
HXLINE( 295)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,getInverse,return )

void Mat4_obj::transpose(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_298_transpose)
HXLINE( 299)		float tmp = this->self->_01;
HXLINE( 300)		this->self->_01 = this->self->_10;
HXDLIN( 300)		this->self->_10 = tmp;
HXLINE( 301)		tmp = this->self->_02;
HXDLIN( 301)		this->self->_02 = this->self->_20;
HXDLIN( 301)		this->self->_20 = tmp;
HXLINE( 302)		tmp = this->self->_03;
HXDLIN( 302)		this->self->_03 = this->self->_30;
HXDLIN( 302)		this->self->_30 = tmp;
HXLINE( 303)		tmp = this->self->_12;
HXDLIN( 303)		this->self->_12 = this->self->_21;
HXDLIN( 303)		this->self->_21 = tmp;
HXLINE( 304)		tmp = this->self->_13;
HXDLIN( 304)		this->self->_13 = this->self->_31;
HXDLIN( 304)		this->self->_31 = tmp;
HXLINE( 305)		tmp = this->self->_23;
HXDLIN( 305)		this->self->_23 = this->self->_32;
HXDLIN( 305)		this->self->_32 = tmp;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,transpose,(void))

void Mat4_obj::transpose3x3(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_308_transpose3x3)
HXLINE( 309)		float tmp = this->self->_01;
HXLINE( 310)		this->self->_01 = this->self->_10;
HXDLIN( 310)		this->self->_10 = tmp;
HXLINE( 311)		tmp = this->self->_02;
HXDLIN( 311)		this->self->_02 = this->self->_20;
HXDLIN( 311)		this->self->_20 = tmp;
HXLINE( 312)		tmp = this->self->_12;
HXDLIN( 312)		this->self->_12 = this->self->_21;
HXDLIN( 312)		this->self->_21 = tmp;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,transpose3x3,(void))

 ::iron::math::Mat4 Mat4_obj::clone(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_315_clone)
HXLINE( 316)		 ::iron::math::Mat4 m = ::iron::math::Mat4_obj::identity();
HXLINE( 317)		m->self->_00 = this->self->_00;
HXDLIN( 317)		m->self->_01 = this->self->_01;
HXDLIN( 317)		m->self->_02 = this->self->_02;
HXDLIN( 317)		m->self->_03 = this->self->_03;
HXLINE( 318)		m->self->_10 = this->self->_10;
HXDLIN( 318)		m->self->_11 = this->self->_11;
HXDLIN( 318)		m->self->_12 = this->self->_12;
HXDLIN( 318)		m->self->_13 = this->self->_13;
HXLINE( 319)		m->self->_20 = this->self->_20;
HXDLIN( 319)		m->self->_21 = this->self->_21;
HXDLIN( 319)		m->self->_22 = this->self->_22;
HXDLIN( 319)		m->self->_23 = this->self->_23;
HXLINE( 320)		m->self->_30 = this->self->_30;
HXDLIN( 320)		m->self->_31 = this->self->_31;
HXDLIN( 320)		m->self->_32 = this->self->_32;
HXDLIN( 320)		m->self->_33 = this->self->_33;
HXLINE( 321)		return m;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,clone,return )

void Mat4_obj::init(float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_327_init)
HXLINE( 328)		this->self->_00 = _00;
HXDLIN( 328)		this->self->_10 = _10;
HXDLIN( 328)		this->self->_20 = _20;
HXDLIN( 328)		this->self->_30 = _30;
HXLINE( 329)		this->self->_01 = _01;
HXDLIN( 329)		this->self->_11 = _11;
HXDLIN( 329)		this->self->_21 = _21;
HXDLIN( 329)		this->self->_31 = _31;
HXLINE( 330)		this->self->_02 = _02;
HXDLIN( 330)		this->self->_12 = _12;
HXDLIN( 330)		this->self->_22 = _22;
HXDLIN( 330)		this->self->_32 = _32;
HXLINE( 331)		this->self->_03 = _03;
HXDLIN( 331)		this->self->_13 = _13;
HXDLIN( 331)		this->self->_23 = _23;
HXDLIN( 331)		this->self->_33 = _33;
            	}


HX_DEFINE_DYNAMIC_FUNC16(Mat4_obj,init,(void))

void Mat4_obj::set(::Array< float > a,hx::Null< int >  __o_offset){
int offset = __o_offset.Default(0);
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_334_set)
HXLINE( 335)		this->self->_00 = a->__get(offset);
HXDLIN( 335)		this->self->_10 = a->__get(((int)1 + offset));
HXDLIN( 335)		this->self->_20 = a->__get(((int)2 + offset));
HXDLIN( 335)		this->self->_30 = a->__get(((int)3 + offset));
HXLINE( 336)		this->self->_01 = a->__get(((int)4 + offset));
HXDLIN( 336)		this->self->_11 = a->__get(((int)5 + offset));
HXDLIN( 336)		this->self->_21 = a->__get(((int)6 + offset));
HXDLIN( 336)		this->self->_31 = a->__get(((int)7 + offset));
HXLINE( 337)		this->self->_02 = a->__get(((int)8 + offset));
HXDLIN( 337)		this->self->_12 = a->__get(((int)9 + offset));
HXDLIN( 337)		this->self->_22 = a->__get(((int)10 + offset));
HXDLIN( 337)		this->self->_32 = a->__get(((int)11 + offset));
HXLINE( 338)		this->self->_03 = a->__get(((int)12 + offset));
HXDLIN( 338)		this->self->_13 = a->__get(((int)13 + offset));
HXDLIN( 338)		this->self->_23 = a->__get(((int)14 + offset));
HXDLIN( 338)		this->self->_33 = a->__get(((int)15 + offset));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,set,(void))

void Mat4_obj::setF32( ::kha::arrays::Float32ArrayPrivate a,hx::Null< int >  __o_offset){
int offset = __o_offset.Default(0);
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_341_setF32)
HXLINE( 342)		{
HXLINE( 342)			float f = a->self.get(offset);
HXDLIN( 342)			this->self->_00 = f;
            		}
HXDLIN( 342)		{
HXLINE( 342)			 float32array a1 = a->self;
HXDLIN( 342)			float f1 = a1.get(((int)1 + offset));
HXDLIN( 342)			this->self->_10 = f1;
            		}
HXDLIN( 342)		{
HXLINE( 342)			 float32array a2 = a->self;
HXDLIN( 342)			float f2 = a2.get(((int)2 + offset));
HXDLIN( 342)			this->self->_20 = f2;
            		}
HXDLIN( 342)		{
HXLINE( 342)			 float32array a3 = a->self;
HXDLIN( 342)			float f3 = a3.get(((int)3 + offset));
HXDLIN( 342)			this->self->_30 = f3;
            		}
HXLINE( 343)		{
HXLINE( 343)			 float32array a4 = a->self;
HXDLIN( 343)			float f4 = a4.get(((int)4 + offset));
HXDLIN( 343)			this->self->_01 = f4;
            		}
HXDLIN( 343)		{
HXLINE( 343)			 float32array a5 = a->self;
HXDLIN( 343)			float f5 = a5.get(((int)5 + offset));
HXDLIN( 343)			this->self->_11 = f5;
            		}
HXDLIN( 343)		{
HXLINE( 343)			 float32array a6 = a->self;
HXDLIN( 343)			float f6 = a6.get(((int)6 + offset));
HXDLIN( 343)			this->self->_21 = f6;
            		}
HXDLIN( 343)		{
HXLINE( 343)			 float32array a7 = a->self;
HXDLIN( 343)			float f7 = a7.get(((int)7 + offset));
HXDLIN( 343)			this->self->_31 = f7;
            		}
HXLINE( 344)		{
HXLINE( 344)			 float32array a8 = a->self;
HXDLIN( 344)			float f8 = a8.get(((int)8 + offset));
HXDLIN( 344)			this->self->_02 = f8;
            		}
HXDLIN( 344)		{
HXLINE( 344)			 float32array a9 = a->self;
HXDLIN( 344)			float f9 = a9.get(((int)9 + offset));
HXDLIN( 344)			this->self->_12 = f9;
            		}
HXDLIN( 344)		{
HXLINE( 344)			 float32array a10 = a->self;
HXDLIN( 344)			float f10 = a10.get(((int)10 + offset));
HXDLIN( 344)			this->self->_22 = f10;
            		}
HXDLIN( 344)		{
HXLINE( 344)			 float32array a11 = a->self;
HXDLIN( 344)			float f11 = a11.get(((int)11 + offset));
HXDLIN( 344)			this->self->_32 = f11;
            		}
HXLINE( 345)		{
HXLINE( 345)			 float32array a12 = a->self;
HXDLIN( 345)			float f12 = a12.get(((int)12 + offset));
HXDLIN( 345)			this->self->_03 = f12;
            		}
HXDLIN( 345)		{
HXLINE( 345)			 float32array a13 = a->self;
HXDLIN( 345)			float f13 = a13.get(((int)13 + offset));
HXDLIN( 345)			this->self->_13 = f13;
            		}
HXDLIN( 345)		{
HXLINE( 345)			 float32array a14 = a->self;
HXDLIN( 345)			float f14 = a14.get(((int)14 + offset));
HXDLIN( 345)			this->self->_23 = f14;
            		}
HXDLIN( 345)		{
HXLINE( 345)			 float32array a15 = a->self;
HXDLIN( 345)			float f15 = a15.get(((int)15 + offset));
HXDLIN( 345)			this->self->_33 = f15;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,setF32,(void))

 ::iron::math::Mat4 Mat4_obj::setFrom( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_348_setFrom)
HXLINE( 349)		this->self->_00 = m->self->_00;
HXDLIN( 349)		this->self->_01 = m->self->_01;
HXDLIN( 349)		this->self->_02 = m->self->_02;
HXDLIN( 349)		this->self->_03 = m->self->_03;
HXLINE( 350)		this->self->_10 = m->self->_10;
HXDLIN( 350)		this->self->_11 = m->self->_11;
HXDLIN( 350)		this->self->_12 = m->self->_12;
HXDLIN( 350)		this->self->_13 = m->self->_13;
HXLINE( 351)		this->self->_20 = m->self->_20;
HXDLIN( 351)		this->self->_21 = m->self->_21;
HXDLIN( 351)		this->self->_22 = m->self->_22;
HXDLIN( 351)		this->self->_23 = m->self->_23;
HXLINE( 352)		this->self->_30 = m->self->_30;
HXDLIN( 352)		this->self->_31 = m->self->_31;
HXDLIN( 352)		this->self->_32 = m->self->_32;
HXDLIN( 352)		this->self->_33 = m->self->_33;
HXLINE( 353)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,setFrom,return )

 ::iron::math::Vec4 Mat4_obj::getLoc(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_357_getLoc)
HXDLIN( 357)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,this->self->_30,this->self->_31,this->self->_32,this->self->_33);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,getLoc,return )

 ::iron::math::Vec4 Mat4_obj::getScale(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_361_getScale)
HXLINE( 362)		float v = (this->self->_00 * this->self->_00);
HXDLIN( 362)		float v1 = (v + (this->self->_10 * this->self->_10));
HXLINE( 363)		float v2 = (this->self->_01 * this->self->_01);
HXDLIN( 363)		float v3 = (v2 + (this->self->_11 * this->self->_11));
HXLINE( 364)		float v4 = (this->self->_02 * this->self->_02);
HXDLIN( 364)		float v5 = (v4 + (this->self->_12 * this->self->_12));
HXLINE( 361)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,::Math_obj::sqrt((v1 + (this->self->_20 * this->self->_20))),::Math_obj::sqrt((v3 + (this->self->_21 * this->self->_21))),::Math_obj::sqrt((v5 + (this->self->_22 * this->self->_22))),null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,getScale,return )

 ::iron::math::Mat4 Mat4_obj::mult(Float s){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_368_mult)
HXLINE( 369)		{
HXLINE( 369)			 ::iron::math::Mat4 _g = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 369)			_g->self->_00 = (_g->self->_00 * s);
            		}
HXDLIN( 369)		{
HXLINE( 369)			 ::iron::math::Mat4 _g1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 369)			_g1->self->_10 = (_g1->self->_10 * s);
            		}
HXDLIN( 369)		{
HXLINE( 369)			 ::iron::math::Mat4 _g2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 369)			_g2->self->_20 = (_g2->self->_20 * s);
            		}
HXDLIN( 369)		{
HXLINE( 369)			 ::iron::math::Mat4 _g3 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 369)			_g3->self->_30 = (_g3->self->_30 * s);
            		}
HXLINE( 370)		{
HXLINE( 370)			 ::iron::math::Mat4 _g4 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 370)			_g4->self->_01 = (_g4->self->_01 * s);
            		}
HXDLIN( 370)		{
HXLINE( 370)			 ::iron::math::Mat4 _g5 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 370)			_g5->self->_11 = (_g5->self->_11 * s);
            		}
HXDLIN( 370)		{
HXLINE( 370)			 ::iron::math::Mat4 _g6 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 370)			_g6->self->_21 = (_g6->self->_21 * s);
            		}
HXDLIN( 370)		{
HXLINE( 370)			 ::iron::math::Mat4 _g7 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 370)			_g7->self->_31 = (_g7->self->_31 * s);
            		}
HXLINE( 371)		{
HXLINE( 371)			 ::iron::math::Mat4 _g8 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 371)			_g8->self->_02 = (_g8->self->_02 * s);
            		}
HXDLIN( 371)		{
HXLINE( 371)			 ::iron::math::Mat4 _g9 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 371)			_g9->self->_12 = (_g9->self->_12 * s);
            		}
HXDLIN( 371)		{
HXLINE( 371)			 ::iron::math::Mat4 _g10 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 371)			_g10->self->_22 = (_g10->self->_22 * s);
            		}
HXDLIN( 371)		{
HXLINE( 371)			 ::iron::math::Mat4 _g11 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 371)			_g11->self->_32 = (_g11->self->_32 * s);
            		}
HXLINE( 372)		{
HXLINE( 372)			 ::iron::math::Mat4 _g12 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 372)			_g12->self->_03 = (_g12->self->_03 * s);
            		}
HXDLIN( 372)		{
HXLINE( 372)			 ::iron::math::Mat4 _g13 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 372)			_g13->self->_13 = (_g13->self->_13 * s);
            		}
HXDLIN( 372)		{
HXLINE( 372)			 ::iron::math::Mat4 _g14 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 372)			_g14->self->_23 = (_g14->self->_23 * s);
            		}
HXDLIN( 372)		{
HXLINE( 372)			 ::iron::math::Mat4 _g15 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 372)			_g15->self->_33 = (_g15->self->_33 * s);
            		}
HXLINE( 373)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,mult,return )

 ::iron::math::Mat4 Mat4_obj::toRotation(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_376_toRotation)
HXLINE( 377)		 ::iron::math::Vec4 v1 =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE( 378)		 ::iron::math::Vec4 _this = v1->set(this->self->_00,this->self->_01,this->self->_02,null());
HXDLIN( 378)		float v = (_this->x * _this->x);
HXDLIN( 378)		float v2 = (v + (_this->y * _this->y));
HXDLIN( 378)		Float scaleX = ((Float)((Float)1.0) / (Float)::Math_obj::sqrt((v2 + (_this->z * _this->z))));
HXLINE( 379)		 ::iron::math::Vec4 _this1 = v1->set(this->self->_10,this->self->_11,this->self->_12,null());
HXDLIN( 379)		float v3 = (_this1->x * _this1->x);
HXDLIN( 379)		float v4 = (v3 + (_this1->y * _this1->y));
HXDLIN( 379)		Float scaleY = ((Float)((Float)1.0) / (Float)::Math_obj::sqrt((v4 + (_this1->z * _this1->z))));
HXLINE( 380)		 ::iron::math::Vec4 _this2 = v1->set(this->self->_20,this->self->_21,this->self->_22,null());
HXDLIN( 380)		float v5 = (_this2->x * _this2->x);
HXDLIN( 380)		float v6 = (v5 + (_this2->y * _this2->y));
HXDLIN( 380)		Float scaleZ = ((Float)((Float)1.0) / (Float)::Math_obj::sqrt((v6 + (_this2->z * _this2->z))));
HXLINE( 382)		this->self->_00 = (this->self->_00 * scaleX);
HXDLIN( 382)		this->self->_01 = (this->self->_01 * scaleX);
HXDLIN( 382)		this->self->_02 = (this->self->_02 * scaleX);
HXLINE( 383)		this->self->_03 = ((Float)0.0);
HXLINE( 385)		this->self->_10 = (this->self->_10 * scaleY);
HXDLIN( 385)		this->self->_11 = (this->self->_11 * scaleY);
HXDLIN( 385)		this->self->_12 = (this->self->_12 * scaleY);
HXLINE( 386)		this->self->_13 = ((Float)0.0);
HXLINE( 388)		this->self->_20 = (this->self->_20 * scaleZ);
HXDLIN( 388)		this->self->_21 = (this->self->_21 * scaleZ);
HXDLIN( 388)		this->self->_22 = (this->self->_22 * scaleZ);
HXLINE( 389)		this->self->_23 = ((Float)0.0);
HXLINE( 391)		this->self->_30 = ((Float)0.0);
HXDLIN( 391)		this->self->_31 = ((Float)0.0);
HXDLIN( 391)		this->self->_32 = ((Float)0.0);
HXDLIN( 391)		this->self->_33 = ((Float)1.0);
HXLINE( 392)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,toRotation,return )

 ::iron::math::Quat Mat4_obj::getQuat(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_395_getQuat)
HXLINE( 396)		::iron::math::Mat4_obj::helpMat->setFrom(hx::ObjectPtr<OBJ_>(this));
HXLINE( 397)		::iron::math::Mat4_obj::helpMat->toRotation();
HXLINE( 399)		 ::iron::math::Quat q =  ::iron::math::Quat_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE( 401)		float m11 = ::iron::math::Mat4_obj::helpMat->self->_00;
HXLINE( 402)		float m12 = ::iron::math::Mat4_obj::helpMat->self->_10;
HXLINE( 403)		float m13 = ::iron::math::Mat4_obj::helpMat->self->_20;
HXLINE( 404)		float m21 = ::iron::math::Mat4_obj::helpMat->self->_01;
HXLINE( 405)		float m22 = ::iron::math::Mat4_obj::helpMat->self->_11;
HXLINE( 406)		float m23 = ::iron::math::Mat4_obj::helpMat->self->_21;
HXLINE( 407)		float m31 = ::iron::math::Mat4_obj::helpMat->self->_02;
HXLINE( 408)		float m32 = ::iron::math::Mat4_obj::helpMat->self->_12;
HXLINE( 409)		float m33 = ::iron::math::Mat4_obj::helpMat->self->_22;
HXLINE( 411)		float ftrace = ((m11 + m22) + m33);
HXLINE( 412)		Float s = ((Float)0.0);
HXLINE( 414)		if ((ftrace > ((Float)0.0))) {
HXLINE( 415)			s = ((Float)((Float)0.5) / (Float)::Math_obj::sqrt((ftrace + ((Float)1.0))));
HXLINE( 416)			q->w = ((Float)((Float)0.25) / (Float)s);
HXLINE( 417)			q->x = ((m32 - m23) * s);
HXLINE( 418)			q->y = ((m13 - m31) * s);
HXLINE( 419)			q->z = ((m21 - m12) * s);
            		}
            		else {
HXLINE( 422)			bool _hx_tmp;
HXDLIN( 422)			if ((m11 > m22)) {
HXLINE( 422)				_hx_tmp = (m11 > m33);
            			}
            			else {
HXLINE( 422)				_hx_tmp = false;
            			}
HXDLIN( 422)			if (_hx_tmp) {
HXLINE( 423)				s = (((Float)2.0) * ::Math_obj::sqrt((((((Float)1.0) + m11) - m22) - m33)));
HXLINE( 424)				q->w = ((Float)(m32 - m23) / (Float)s);
HXLINE( 425)				q->x = (((Float)0.25) * s);
HXLINE( 426)				q->y = ((Float)(m12 + m21) / (Float)s);
HXLINE( 427)				q->z = ((Float)(m13 + m31) / (Float)s);
            			}
            			else {
HXLINE( 430)				if ((m22 > m33)) {
HXLINE( 431)					s = (((Float)2.0) * ::Math_obj::sqrt((((((Float)1.0) + m22) - m11) - m33)));
HXLINE( 432)					q->w = ((Float)(m13 - m31) / (Float)s);
HXLINE( 433)					q->x = ((Float)(m12 + m21) / (Float)s);
HXLINE( 434)					q->y = (((Float)0.25) * s);
HXLINE( 435)					q->z = ((Float)(m23 + m32) / (Float)s);
            				}
            				else {
HXLINE( 439)					s = (((Float)2.0) * ::Math_obj::sqrt((((((Float)1.0) + m33) - m11) - m22)));
HXLINE( 440)					q->w = ((Float)(m21 - m12) / (Float)s);
HXLINE( 441)					q->x = ((Float)(m13 + m31) / (Float)s);
HXLINE( 442)					q->y = ((Float)(m23 + m32) / (Float)s);
HXLINE( 443)					q->z = (((Float)0.25) * s);
            				}
            			}
            		}
HXLINE( 445)		return q;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,getQuat,return )

 ::iron::math::Mat4 Mat4_obj::setLookAt( ::iron::math::Vec4 eye, ::iron::math::Vec4 center, ::iron::math::Vec4 up){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_474_setLookAt)
HXLINE( 475)		float f0 = (center->x - eye->x);
HXLINE( 476)		float f1 = (center->y - eye->y);
HXLINE( 477)		float f2 = (center->z - eye->z);
HXLINE( 478)		Float n = ((Float)((Float)1.0) / (Float)::Math_obj::sqrt((((f0 * f0) + (f1 * f1)) + (f2 * f2))));
HXLINE( 479)		f0 = (f0 * n);
HXLINE( 480)		f1 = (f1 * n);
HXLINE( 481)		f2 = (f2 * n);
HXLINE( 483)		float s0 = (f1 * up->z);
HXDLIN( 483)		float s01 = (s0 - (f2 * up->y));
HXLINE( 484)		float s1 = (f2 * up->x);
HXDLIN( 484)		float s11 = (s1 - (f0 * up->z));
HXLINE( 485)		float s2 = (f0 * up->y);
HXDLIN( 485)		float s21 = (s2 - (f1 * up->x));
HXLINE( 486)		n = ((Float)((Float)1.0) / (Float)::Math_obj::sqrt((((s01 * s01) + (s11 * s11)) + (s21 * s21))));
HXLINE( 487)		s01 = (s01 * n);
HXLINE( 488)		s11 = (s11 * n);
HXLINE( 489)		s21 = (s21 * n);
HXLINE( 491)		float u0 = ((s11 * f2) - (s21 * f1));
HXLINE( 492)		float u1 = ((s21 * f0) - (s01 * f2));
HXLINE( 493)		float u2 = ((s01 * f1) - (s11 * f0));
HXLINE( 494)		float d0 = (-(eye->x) * s01);
HXDLIN( 494)		float d01 = (d0 - (eye->y * s11));
HXDLIN( 494)		float d02 = (d01 - (eye->z * s21));
HXLINE( 495)		float d1 = (-(eye->x) * u0);
HXDLIN( 495)		float d11 = (d1 - (eye->y * u1));
HXDLIN( 495)		float d12 = (d11 - (eye->z * u2));
HXLINE( 496)		float d2 = (eye->x * f0);
HXDLIN( 496)		float d21 = (d2 + (eye->y * f1));
HXDLIN( 496)		float d22 = (d21 + (eye->z * f2));
HXLINE( 498)		this->self->_00 = s01;
HXLINE( 499)		this->self->_10 = s11;
HXLINE( 500)		this->self->_20 = s21;
HXLINE( 501)		this->self->_30 = d02;
HXLINE( 502)		this->self->_01 = u0;
HXLINE( 503)		this->self->_11 = u1;
HXLINE( 504)		this->self->_21 = u2;
HXLINE( 505)		this->self->_31 = d12;
HXLINE( 506)		this->self->_02 = -(f0);
HXLINE( 507)		this->self->_12 = -(f1);
HXLINE( 508)		this->self->_22 = -(f2);
HXLINE( 509)		this->self->_32 = d22;
HXLINE( 510)		this->self->_03 = ((Float)0.0);
HXLINE( 511)		this->self->_13 = ((Float)0.0);
HXLINE( 512)		this->self->_23 = ((Float)0.0);
HXLINE( 513)		this->self->_33 = ((Float)1.0);
HXLINE( 514)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,setLookAt,return )

void Mat4_obj::applyQuat( ::iron::math::Quat q){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_517_applyQuat)
HXLINE( 518)		q->toMat(::iron::math::Mat4_obj::helpMat);
HXLINE( 519)		this->multmat2(::iron::math::Mat4_obj::helpMat);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,applyQuat,(void))

void Mat4_obj::write( ::kha::arrays::Float32ArrayPrivate ar,hx::Null< int >  __o_offset){
int offset = __o_offset.Default(0);
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_522_write)
HXLINE( 523)		ar->self.set(offset,this->self->_00);
HXLINE( 524)		{
HXLINE( 524)			 float32array ar1 = ar->self;
HXDLIN( 524)			ar1.set((offset + (int)1),this->self->_10);
            		}
HXLINE( 525)		{
HXLINE( 525)			 float32array ar2 = ar->self;
HXDLIN( 525)			ar2.set((offset + (int)2),this->self->_20);
            		}
HXLINE( 526)		{
HXLINE( 526)			 float32array ar3 = ar->self;
HXDLIN( 526)			ar3.set((offset + (int)3),this->self->_30);
            		}
HXLINE( 527)		{
HXLINE( 527)			 float32array ar4 = ar->self;
HXDLIN( 527)			ar4.set((offset + (int)4),this->self->_01);
            		}
HXLINE( 528)		{
HXLINE( 528)			 float32array ar5 = ar->self;
HXDLIN( 528)			ar5.set((offset + (int)5),this->self->_11);
            		}
HXLINE( 529)		{
HXLINE( 529)			 float32array ar6 = ar->self;
HXDLIN( 529)			ar6.set((offset + (int)6),this->self->_21);
            		}
HXLINE( 530)		{
HXLINE( 530)			 float32array ar7 = ar->self;
HXDLIN( 530)			ar7.set((offset + (int)7),this->self->_31);
            		}
HXLINE( 531)		{
HXLINE( 531)			 float32array ar8 = ar->self;
HXDLIN( 531)			ar8.set((offset + (int)8),this->self->_02);
            		}
HXLINE( 532)		{
HXLINE( 532)			 float32array ar9 = ar->self;
HXDLIN( 532)			ar9.set((offset + (int)9),this->self->_12);
            		}
HXLINE( 533)		{
HXLINE( 533)			 float32array ar10 = ar->self;
HXDLIN( 533)			ar10.set((offset + (int)10),this->self->_22);
            		}
HXLINE( 534)		{
HXLINE( 534)			 float32array ar11 = ar->self;
HXDLIN( 534)			ar11.set((offset + (int)11),this->self->_32);
            		}
HXLINE( 535)		{
HXLINE( 535)			 float32array ar12 = ar->self;
HXDLIN( 535)			ar12.set((offset + (int)12),this->self->_03);
            		}
HXLINE( 536)		{
HXLINE( 536)			 float32array ar13 = ar->self;
HXDLIN( 536)			ar13.set((offset + (int)13),this->self->_13);
            		}
HXLINE( 537)		{
HXLINE( 537)			 float32array ar14 = ar->self;
HXDLIN( 537)			ar14.set((offset + (int)14),this->self->_23);
            		}
HXLINE( 538)		{
HXLINE( 538)			 float32array ar15 = ar->self;
HXDLIN( 538)			ar15.set((offset + (int)15),this->self->_33);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,write,(void))

 ::kha::math::FastVector4 Mat4_obj::multvec( ::kha::math::FastVector4 value){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_546_multvec)
HXDLIN( 546)		 ::kha::math::FastMatrix4 _this = this->self;
HXDLIN( 546)		 ::kha::math::FastVector4 product =  ::kha::math::FastVector4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXDLIN( 546)		float _hx_tmp = (_this->_00 * value->x);
HXDLIN( 546)		float _hx_tmp1 = (_hx_tmp + (_this->_10 * value->y));
HXDLIN( 546)		float _hx_tmp2 = (_hx_tmp1 + (_this->_20 * value->z));
HXDLIN( 546)		product->x = (_hx_tmp2 + (_this->_30 * value->w));
HXDLIN( 546)		float _hx_tmp3 = (_this->_01 * value->x);
HXDLIN( 546)		float _hx_tmp4 = (_hx_tmp3 + (_this->_11 * value->y));
HXDLIN( 546)		float _hx_tmp5 = (_hx_tmp4 + (_this->_21 * value->z));
HXDLIN( 546)		product->y = (_hx_tmp5 + (_this->_31 * value->w));
HXDLIN( 546)		float _hx_tmp6 = (_this->_02 * value->x);
HXDLIN( 546)		float _hx_tmp7 = (_hx_tmp6 + (_this->_12 * value->y));
HXDLIN( 546)		float _hx_tmp8 = (_hx_tmp7 + (_this->_22 * value->z));
HXDLIN( 546)		product->z = (_hx_tmp8 + (_this->_32 * value->w));
HXDLIN( 546)		float _hx_tmp9 = (_this->_03 * value->x);
HXDLIN( 546)		float _hx_tmp10 = (_hx_tmp9 + (_this->_13 * value->y));
HXDLIN( 546)		float _hx_tmp11 = (_hx_tmp10 + (_this->_23 * value->z));
HXDLIN( 546)		product->w = (_hx_tmp11 + (_this->_33 * value->w));
HXDLIN( 546)		return product;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,multvec,return )

 ::iron::math::Vec4 Mat4_obj::right(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_549_right)
HXDLIN( 549)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,this->self->_00,this->self->_01,this->self->_02,null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,right,return )

 ::iron::math::Vec4 Mat4_obj::up(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_550_up)
HXDLIN( 550)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,this->self->_20,this->self->_21,this->self->_22,null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,up,return )

 ::iron::math::Vec4 Mat4_obj::look(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_551_look)
HXDLIN( 551)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,this->self->_10,this->self->_11,this->self->_12,null());
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,look,return )

float Mat4_obj::get__00(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_553_get__00)
HXDLIN( 553)		return this->self->_00;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__00,return )

float Mat4_obj::set__00(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_553_set__00)
HXDLIN( 553)		return (this->self->_00 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__00,return )

float Mat4_obj::get__01(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_554_get__01)
HXDLIN( 554)		return this->self->_01;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__01,return )

float Mat4_obj::set__01(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_554_set__01)
HXDLIN( 554)		return (this->self->_01 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__01,return )

float Mat4_obj::get__02(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_555_get__02)
HXDLIN( 555)		return this->self->_02;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__02,return )

float Mat4_obj::set__02(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_555_set__02)
HXDLIN( 555)		return (this->self->_02 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__02,return )

float Mat4_obj::get__03(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_556_get__03)
HXDLIN( 556)		return this->self->_03;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__03,return )

float Mat4_obj::set__03(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_556_set__03)
HXDLIN( 556)		return (this->self->_03 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__03,return )

float Mat4_obj::get__10(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_557_get__10)
HXDLIN( 557)		return this->self->_10;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__10,return )

float Mat4_obj::set__10(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_557_set__10)
HXDLIN( 557)		return (this->self->_10 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__10,return )

float Mat4_obj::get__11(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_558_get__11)
HXDLIN( 558)		return this->self->_11;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__11,return )

float Mat4_obj::set__11(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_558_set__11)
HXDLIN( 558)		return (this->self->_11 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__11,return )

float Mat4_obj::get__12(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_559_get__12)
HXDLIN( 559)		return this->self->_12;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__12,return )

float Mat4_obj::set__12(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_559_set__12)
HXDLIN( 559)		return (this->self->_12 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__12,return )

float Mat4_obj::get__13(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_560_get__13)
HXDLIN( 560)		return this->self->_13;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__13,return )

float Mat4_obj::set__13(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_560_set__13)
HXDLIN( 560)		return (this->self->_13 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__13,return )

float Mat4_obj::get__20(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_561_get__20)
HXDLIN( 561)		return this->self->_20;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__20,return )

float Mat4_obj::set__20(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_561_set__20)
HXDLIN( 561)		return (this->self->_20 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__20,return )

float Mat4_obj::get__21(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_562_get__21)
HXDLIN( 562)		return this->self->_21;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__21,return )

float Mat4_obj::set__21(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_562_set__21)
HXDLIN( 562)		return (this->self->_21 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__21,return )

float Mat4_obj::get__22(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_563_get__22)
HXDLIN( 563)		return this->self->_22;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__22,return )

float Mat4_obj::set__22(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_563_set__22)
HXDLIN( 563)		return (this->self->_22 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__22,return )

float Mat4_obj::get__23(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_564_get__23)
HXDLIN( 564)		return this->self->_23;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__23,return )

float Mat4_obj::set__23(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_564_set__23)
HXDLIN( 564)		return (this->self->_23 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__23,return )

float Mat4_obj::get__30(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_565_get__30)
HXDLIN( 565)		return this->self->_30;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__30,return )

float Mat4_obj::set__30(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_565_set__30)
HXDLIN( 565)		return (this->self->_30 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__30,return )

float Mat4_obj::get__31(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_566_get__31)
HXDLIN( 566)		return this->self->_31;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__31,return )

float Mat4_obj::set__31(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_566_set__31)
HXDLIN( 566)		return (this->self->_31 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__31,return )

float Mat4_obj::get__32(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_567_get__32)
HXDLIN( 567)		return this->self->_32;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__32,return )

float Mat4_obj::set__32(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_567_set__32)
HXDLIN( 567)		return (this->self->_32 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__32,return )

float Mat4_obj::get__33(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_568_get__33)
HXDLIN( 568)		return this->self->_33;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,get__33,return )

float Mat4_obj::set__33(float f){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_568_set__33)
HXDLIN( 568)		return (this->self->_33 = f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Mat4_obj,set__33,return )

::String Mat4_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_571_toString)
HXDLIN( 571)		::String _hx_tmp = ((HX_("[[",a0,4f,00,00) + ::Std_obj::string(this->self->_00)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp1 = ((_hx_tmp + ::Std_obj::string(this->self->_10)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp2 = ((_hx_tmp1 + ::Std_obj::string(this->self->_20)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp3 = ((_hx_tmp2 + ::Std_obj::string(this->self->_30)) + HX_("], [",2a,57,9a,3d));
HXDLIN( 571)		::String _hx_tmp4 = ((_hx_tmp3 + ::Std_obj::string(this->self->_01)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp5 = ((_hx_tmp4 + ::Std_obj::string(this->self->_11)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp6 = ((_hx_tmp5 + ::Std_obj::string(this->self->_21)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp7 = ((_hx_tmp6 + ::Std_obj::string(this->self->_31)) + HX_("], [",2a,57,9a,3d));
HXDLIN( 571)		::String _hx_tmp8 = ((_hx_tmp7 + ::Std_obj::string(this->self->_02)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp9 = ((_hx_tmp8 + ::Std_obj::string(this->self->_12)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp10 = ((_hx_tmp9 + ::Std_obj::string(this->self->_22)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp11 = ((_hx_tmp10 + ::Std_obj::string(this->self->_32)) + HX_("], [",2a,57,9a,3d));
HXDLIN( 571)		::String _hx_tmp12 = ((_hx_tmp11 + ::Std_obj::string(this->self->_03)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp13 = ((_hx_tmp12 + ::Std_obj::string(this->self->_13)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		::String _hx_tmp14 = ((_hx_tmp13 + ::Std_obj::string(this->self->_23)) + HX_(", ",74,26,00,00));
HXDLIN( 571)		return ((_hx_tmp14 + ::Std_obj::string(this->self->_33)) + HX_("]]",60,51,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,toString,return )

 ::iron::math::Vec4 Mat4_obj::helpVec;

 ::iron::math::Mat4 Mat4_obj::helpMat;

 ::iron::math::Mat4 Mat4_obj::identity(){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_98_identity)
HXDLIN(  98)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,((Float)1.0),((Float)0.0),((Float)0.0),((Float)0.0),((Float)0.0),((Float)1.0),((Float)0.0),((Float)0.0),((Float)0.0),((Float)0.0),((Float)1.0),((Float)0.0),((Float)0.0),((Float)0.0),((Float)0.0),((Float)1.0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Mat4_obj,identity,return )

 ::iron::math::Mat4 Mat4_obj::fromArray(::Array< float > a,hx::Null< int >  __o_offset){
int offset = __o_offset.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_107_fromArray)
HXDLIN( 107)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,a->__get(offset),a->__get(((int)1 + offset)),a->__get(((int)2 + offset)),a->__get(((int)3 + offset)),a->__get(((int)4 + offset)),a->__get(((int)5 + offset)),a->__get(((int)6 + offset)),a->__get(((int)7 + offset)),a->__get(((int)8 + offset)),a->__get(((int)9 + offset)),a->__get(((int)10 + offset)),a->__get(((int)11 + offset)),a->__get(((int)12 + offset)),a->__get(((int)13 + offset)),a->__get(((int)14 + offset)),a->__get(((int)15 + offset)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,fromArray,return )

 ::iron::math::Mat4 Mat4_obj::fromFloat32Array( ::kha::arrays::Float32ArrayPrivate a,hx::Null< int >  __o_offset){
int offset = __o_offset.Default(0);
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_116_fromFloat32Array)
HXLINE( 117)		float _hx_tmp = a->self.get(offset);
HXDLIN( 117)		 float32array a1 = a->self;
HXDLIN( 117)		float _hx_tmp1 = a1.get(((int)1 + offset));
HXDLIN( 117)		 float32array a2 = a->self;
HXDLIN( 117)		float _hx_tmp2 = a2.get(((int)2 + offset));
HXDLIN( 117)		 float32array a3 = a->self;
HXDLIN( 117)		float _hx_tmp3 = a3.get(((int)3 + offset));
HXLINE( 118)		 float32array a4 = a->self;
HXDLIN( 118)		float _hx_tmp4 = a4.get(((int)4 + offset));
HXDLIN( 118)		 float32array a5 = a->self;
HXDLIN( 118)		float _hx_tmp5 = a5.get(((int)5 + offset));
HXDLIN( 118)		 float32array a6 = a->self;
HXDLIN( 118)		float _hx_tmp6 = a6.get(((int)6 + offset));
HXDLIN( 118)		 float32array a7 = a->self;
HXDLIN( 118)		float _hx_tmp7 = a7.get(((int)7 + offset));
HXLINE( 119)		 float32array a8 = a->self;
HXDLIN( 119)		float _hx_tmp8 = a8.get(((int)8 + offset));
HXDLIN( 119)		 float32array a9 = a->self;
HXDLIN( 119)		float _hx_tmp9 = a9.get(((int)9 + offset));
HXDLIN( 119)		 float32array a10 = a->self;
HXDLIN( 119)		float _hx_tmp10 = a10.get(((int)10 + offset));
HXDLIN( 119)		 float32array a11 = a->self;
HXDLIN( 119)		float _hx_tmp11 = a11.get(((int)11 + offset));
HXLINE( 120)		 float32array a12 = a->self;
HXDLIN( 120)		float _hx_tmp12 = a12.get(((int)12 + offset));
HXDLIN( 120)		 float32array a13 = a->self;
HXDLIN( 120)		float _hx_tmp13 = a13.get(((int)13 + offset));
HXDLIN( 120)		 float32array a14 = a->self;
HXDLIN( 120)		float _hx_tmp14 = a14.get(((int)14 + offset));
HXDLIN( 120)		 float32array a15 = a->self;
HXLINE( 116)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,_hx_tmp,_hx_tmp1,_hx_tmp2,_hx_tmp3,_hx_tmp4,_hx_tmp5,_hx_tmp6,_hx_tmp7,_hx_tmp8,_hx_tmp9,_hx_tmp10,_hx_tmp11,_hx_tmp12,_hx_tmp13,_hx_tmp14,a15.get(((int)15 + offset)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Mat4_obj,fromFloat32Array,return )

 ::iron::math::Mat4 Mat4_obj::persp(float fovY,float aspect,float zn,float zf){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_448_persp)
HXLINE( 449)		Float uh = ((Float)((Float)1.0) / (Float)::Math_obj::tan(((Float)fovY / (Float)(int)2)));
HXLINE( 450)		Float uw = ((Float)uh / (Float)aspect);
HXLINE( 451)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,uw,(int)0,(int)0,(int)0,(int)0,uh,(int)0,(int)0,(int)0,(int)0,((Float)(zf + zn) / (Float)(zn - zf)),((Float)(((int)2 * zf) * zn) / (Float)(zn - zf)),(int)0,(int)0,(int)-1,(int)0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Mat4_obj,persp,return )

 ::iron::math::Mat4 Mat4_obj::ortho(float left,float right,float bottom,float top,float _hx_near,float _hx_far){
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_459_ortho)
HXLINE( 460)		float rl = (right - left);
HXLINE( 461)		float tb = (top - bottom);
HXLINE( 462)		float fn = (_hx_far - _hx_near);
HXLINE( 463)		Float tx = ((Float)-((right + left)) / (Float)rl);
HXLINE( 464)		Float ty = ((Float)-((top + bottom)) / (Float)tb);
HXLINE( 465)		Float tz = ((Float)-((_hx_far + _hx_near)) / (Float)fn);
HXLINE( 466)		return  ::iron::math::Mat4_obj::__alloc( HX_CTX ,((Float)(int)2 / (Float)rl),(int)0,(int)0,tx,(int)0,((Float)(int)2 / (Float)tb),(int)0,ty,(int)0,(int)0,((Float)(int)-2 / (Float)fn),tz,(int)0,(int)0,(int)0,(int)1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(Mat4_obj,ortho,return )

 ::iron::math::Mat4 Mat4_obj::lookAt( ::iron::math::Vec4 eye, ::iron::math::Vec4 center, ::iron::math::Vec4 up){
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_542_lookAt)
HXDLIN( 542)		return ::iron::math::Mat4_obj::identity()->setLookAt(eye,center,up);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Mat4_obj,lookAt,return )


hx::ObjectPtr< Mat4_obj > Mat4_obj::__new(float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33) {
	hx::ObjectPtr< Mat4_obj > __this = new Mat4_obj();
	__this->__construct(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
	return __this;
}

hx::ObjectPtr< Mat4_obj > Mat4_obj::__alloc(hx::Ctx *_hx_ctx,float _00,float _10,float _20,float _30,float _01,float _11,float _21,float _31,float _02,float _12,float _22,float _32,float _03,float _13,float _23,float _33) {
	Mat4_obj *__this = (Mat4_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Mat4_obj), true, "iron.math.Mat4"));
	*(void **)__this = Mat4_obj::_hx_vtable;
	__this->__construct(_00,_10,_20,_30,_01,_11,_21,_31,_02,_12,_22,_32,_03,_13,_23,_33);
	return __this;
}

Mat4_obj::Mat4_obj()
{
}

void Mat4_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Mat4);
	HX_MARK_MEMBER_NAME(self,"self");
	HX_MARK_END_CLASS();
}

void Mat4_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(self,"self");
}

hx::Val Mat4_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"up") ) { return hx::Val( up_dyn() ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		if (HX_FIELD_EQ(inName,"_00") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__00() ); }
		if (HX_FIELD_EQ(inName,"_01") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__01() ); }
		if (HX_FIELD_EQ(inName,"_02") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__02() ); }
		if (HX_FIELD_EQ(inName,"_03") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__03() ); }
		if (HX_FIELD_EQ(inName,"_10") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__10() ); }
		if (HX_FIELD_EQ(inName,"_11") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__11() ); }
		if (HX_FIELD_EQ(inName,"_12") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__12() ); }
		if (HX_FIELD_EQ(inName,"_13") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__13() ); }
		if (HX_FIELD_EQ(inName,"_20") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__20() ); }
		if (HX_FIELD_EQ(inName,"_21") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__21() ); }
		if (HX_FIELD_EQ(inName,"_22") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__22() ); }
		if (HX_FIELD_EQ(inName,"_23") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__23() ); }
		if (HX_FIELD_EQ(inName,"_30") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__30() ); }
		if (HX_FIELD_EQ(inName,"_31") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__31() ); }
		if (HX_FIELD_EQ(inName,"_32") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__32() ); }
		if (HX_FIELD_EQ(inName,"_33") ) { if (inCallProp == hx::paccAlways) return hx::Val( get__33() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"self") ) { return hx::Val( self ); }
		if (HX_FIELD_EQ(inName,"init") ) { return hx::Val( init_dyn() ); }
		if (HX_FIELD_EQ(inName,"mult") ) { return hx::Val( mult_dyn() ); }
		if (HX_FIELD_EQ(inName,"look") ) { return hx::Val( look_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"scale") ) { return hx::Val( scale_dyn() ); }
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn() ); }
		if (HX_FIELD_EQ(inName,"write") ) { return hx::Val( write_dyn() ); }
		if (HX_FIELD_EQ(inName,"right") ) { return hx::Val( right_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"setF32") ) { return hx::Val( setF32_dyn() ); }
		if (HX_FIELD_EQ(inName,"getLoc") ) { return hx::Val( getLoc_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"compose") ) { return hx::Val( compose_dyn() ); }
		if (HX_FIELD_EQ(inName,"toArray") ) { return hx::Val( toArray_dyn() ); }
		if (HX_FIELD_EQ(inName,"multmat") ) { return hx::Val( multmat_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFrom") ) { return hx::Val( setFrom_dyn() ); }
		if (HX_FIELD_EQ(inName,"getQuat") ) { return hx::Val( getQuat_dyn() ); }
		if (HX_FIELD_EQ(inName,"multvec") ) { return hx::Val( multvec_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__00") ) { return hx::Val( get__00_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__00") ) { return hx::Val( set__00_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__01") ) { return hx::Val( get__01_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__01") ) { return hx::Val( set__01_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__02") ) { return hx::Val( get__02_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__02") ) { return hx::Val( set__02_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__03") ) { return hx::Val( get__03_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__03") ) { return hx::Val( set__03_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__10") ) { return hx::Val( get__10_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__10") ) { return hx::Val( set__10_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__11") ) { return hx::Val( get__11_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__11") ) { return hx::Val( set__11_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__12") ) { return hx::Val( get__12_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__12") ) { return hx::Val( set__12_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__13") ) { return hx::Val( get__13_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__13") ) { return hx::Val( set__13_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__20") ) { return hx::Val( get__20_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__20") ) { return hx::Val( set__20_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__21") ) { return hx::Val( get__21_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__21") ) { return hx::Val( set__21_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__22") ) { return hx::Val( get__22_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__22") ) { return hx::Val( set__22_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__23") ) { return hx::Val( get__23_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__23") ) { return hx::Val( set__23_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__30") ) { return hx::Val( get__30_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__30") ) { return hx::Val( set__30_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__31") ) { return hx::Val( get__31_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__31") ) { return hx::Val( set__31_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__32") ) { return hx::Val( get__32_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__32") ) { return hx::Val( set__32_dyn() ); }
		if (HX_FIELD_EQ(inName,"get__33") ) { return hx::Val( get__33_dyn() ); }
		if (HX_FIELD_EQ(inName,"set__33") ) { return hx::Val( set__33_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"multmat2") ) { return hx::Val( multmat2_dyn() ); }
		if (HX_FIELD_EQ(inName,"multmats") ) { return hx::Val( multmats_dyn() ); }
		if (HX_FIELD_EQ(inName,"getScale") ) { return hx::Val( getScale_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"decompose") ) { return hx::Val( decompose_dyn() ); }
		if (HX_FIELD_EQ(inName,"translate") ) { return hx::Val( translate_dyn() ); }
		if (HX_FIELD_EQ(inName,"transpose") ) { return hx::Val( transpose_dyn() ); }
		if (HX_FIELD_EQ(inName,"setLookAt") ) { return hx::Val( setLookAt_dyn() ); }
		if (HX_FIELD_EQ(inName,"applyQuat") ) { return hx::Val( applyQuat_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"multmat3x4") ) { return hx::Val( multmat3x4_dyn() ); }
		if (HX_FIELD_EQ(inName,"getInverse") ) { return hx::Val( getInverse_dyn() ); }
		if (HX_FIELD_EQ(inName,"toRotation") ) { return hx::Val( toRotation_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"setLocation") ) { return hx::Val( setLocation_dyn() ); }
		if (HX_FIELD_EQ(inName,"setIdentity") ) { return hx::Val( setIdentity_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"transpose3x3") ) { return hx::Val( transpose3x3_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"initTranslate") ) { return hx::Val( initTranslate_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"fromQuaternion") ) { return hx::Val( fromQuaternion_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Mat4_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"persp") ) { outValue = persp_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"ortho") ) { outValue = ortho_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"lookAt") ) { outValue = lookAt_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"helpVec") ) { outValue = ( helpVec ); return true; }
		if (HX_FIELD_EQ(inName,"helpMat") ) { outValue = ( helpMat ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"identity") ) { outValue = identity_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"fromArray") ) { outValue = fromArray_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"fromFloat32Array") ) { outValue = fromFloat32Array_dyn(); return true; }
	}
	return false;
}

hx::Val Mat4_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"_00") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__00(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_01") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__01(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_02") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__02(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_03") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__03(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_10") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__10(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_11") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__11(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_12") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__12(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_13") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__13(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_20") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__20(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_21") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__21(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_22") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__22(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_23") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__23(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_30") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__30(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_31") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__31(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_32") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__32(inValue.Cast< float >()) ); }
		if (HX_FIELD_EQ(inName,"_33") ) { if (inCallProp == hx::paccAlways) return hx::Val( set__33(inValue.Cast< float >()) ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"self") ) { self=inValue.Cast<  ::kha::math::FastMatrix4 >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Mat4_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"helpVec") ) { helpVec=ioValue.Cast<  ::iron::math::Vec4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpMat") ) { helpMat=ioValue.Cast<  ::iron::math::Mat4 >(); return true; }
	}
	return false;
}

void Mat4_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("self","\x8c","\x8b","\x50","\x4c"));
	outFields->push(HX_HCSTRING("_00","\x1f","\x40","\x48","\x00"));
	outFields->push(HX_HCSTRING("_01","\x20","\x40","\x48","\x00"));
	outFields->push(HX_HCSTRING("_02","\x21","\x40","\x48","\x00"));
	outFields->push(HX_HCSTRING("_03","\x22","\x40","\x48","\x00"));
	outFields->push(HX_HCSTRING("_10","\xfe","\x40","\x48","\x00"));
	outFields->push(HX_HCSTRING("_11","\xff","\x40","\x48","\x00"));
	outFields->push(HX_HCSTRING("_12","\x00","\x41","\x48","\x00"));
	outFields->push(HX_HCSTRING("_13","\x01","\x41","\x48","\x00"));
	outFields->push(HX_HCSTRING("_20","\xdd","\x41","\x48","\x00"));
	outFields->push(HX_HCSTRING("_21","\xde","\x41","\x48","\x00"));
	outFields->push(HX_HCSTRING("_22","\xdf","\x41","\x48","\x00"));
	outFields->push(HX_HCSTRING("_23","\xe0","\x41","\x48","\x00"));
	outFields->push(HX_HCSTRING("_30","\xbc","\x42","\x48","\x00"));
	outFields->push(HX_HCSTRING("_31","\xbd","\x42","\x48","\x00"));
	outFields->push(HX_HCSTRING("_32","\xbe","\x42","\x48","\x00"));
	outFields->push(HX_HCSTRING("_33","\xbf","\x42","\x48","\x00"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Mat4_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::kha::math::FastMatrix4*/ ,(int)offsetof(Mat4_obj,self),HX_HCSTRING("self","\x8c","\x8b","\x50","\x4c")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Mat4_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::iron::math::Vec4*/ ,(void *) &Mat4_obj::helpVec,HX_HCSTRING("helpVec","\x13","\xd6","\x53","\xc0")},
	{hx::fsObject /*::iron::math::Mat4*/ ,(void *) &Mat4_obj::helpMat,HX_HCSTRING("helpMat","\x5f","\xfe","\x4c","\xc0")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Mat4_obj_sMemberFields[] = {
	HX_HCSTRING("self","\x8c","\x8b","\x50","\x4c"),
	HX_HCSTRING("compose","\x12","\xb9","\x73","\x83"),
	HX_HCSTRING("decompose","\xb1","\xc3","\xa7","\x7a"),
	HX_HCSTRING("setLocation","\xf7","\x37","\xa7","\x15"),
	HX_HCSTRING("fromQuaternion","\x28","\x5f","\xf6","\x13"),
	HX_HCSTRING("toArray","\x1e","\xba","\x13","\xf2"),
	HX_HCSTRING("setIdentity","\x00","\x0f","\x90","\xe9"),
	HX_HCSTRING("initTranslate","\x1e","\x9a","\x7f","\xc4"),
	HX_HCSTRING("translate","\x4e","\xd7","\x7f","\x49"),
	HX_HCSTRING("scale","\x8a","\xce","\xce","\x78"),
	HX_HCSTRING("multmat3x4","\xff","\x70","\xa4","\xfc"),
	HX_HCSTRING("multmat","\xb0","\x38","\xab","\xf8"),
	HX_HCSTRING("multmat2","\x82","\x61","\x26","\x9d"),
	HX_HCSTRING("multmats","\xc3","\x61","\x26","\x9d"),
	HX_HCSTRING("getInverse","\xba","\xd1","\x52","\x8d"),
	HX_HCSTRING("transpose","\x79","\x50","\x2f","\x4c"),
	HX_HCSTRING("transpose3x3","\xd5","\x9c","\x64","\x6c"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	HX_HCSTRING("init","\x10","\x3b","\xbb","\x45"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("setF32","\x03","\x20","\x65","\x6f"),
	HX_HCSTRING("setFrom","\x2c","\xe6","\x46","\x09"),
	HX_HCSTRING("getLoc","\x8a","\x8d","\x21","\xa3"),
	HX_HCSTRING("getScale","\x14","\xde","\xa5","\xd8"),
	HX_HCSTRING("mult","\xf0","\x67","\x65","\x48"),
	HX_HCSTRING("toRotation","\xd9","\xd1","\xa2","\x7a"),
	HX_HCSTRING("getQuat","\x8d","\xe8","\x8c","\x1d"),
	HX_HCSTRING("setLookAt","\x74","\xea","\x5c","\xc1"),
	HX_HCSTRING("applyQuat","\x65","\x39","\xd9","\x34"),
	HX_HCSTRING("write","\xdf","\x6c","\x59","\xd0"),
	HX_HCSTRING("multvec","\x64","\x10","\xb2","\xf8"),
	HX_HCSTRING("right","\xdc","\x0b","\x64","\xe9"),
	HX_HCSTRING("up","\x5b","\x66","\x00","\x00"),
	HX_HCSTRING("look","\x5f","\xa6","\xb7","\x47"),
	HX_HCSTRING("get__00","\xb6","\x08","\xbd","\x26"),
	HX_HCSTRING("set__00","\xc2","\x99","\xbe","\x19"),
	HX_HCSTRING("get__01","\xb7","\x08","\xbd","\x26"),
	HX_HCSTRING("set__01","\xc3","\x99","\xbe","\x19"),
	HX_HCSTRING("get__02","\xb8","\x08","\xbd","\x26"),
	HX_HCSTRING("set__02","\xc4","\x99","\xbe","\x19"),
	HX_HCSTRING("get__03","\xb9","\x08","\xbd","\x26"),
	HX_HCSTRING("set__03","\xc5","\x99","\xbe","\x19"),
	HX_HCSTRING("get__10","\x95","\x09","\xbd","\x26"),
	HX_HCSTRING("set__10","\xa1","\x9a","\xbe","\x19"),
	HX_HCSTRING("get__11","\x96","\x09","\xbd","\x26"),
	HX_HCSTRING("set__11","\xa2","\x9a","\xbe","\x19"),
	HX_HCSTRING("get__12","\x97","\x09","\xbd","\x26"),
	HX_HCSTRING("set__12","\xa3","\x9a","\xbe","\x19"),
	HX_HCSTRING("get__13","\x98","\x09","\xbd","\x26"),
	HX_HCSTRING("set__13","\xa4","\x9a","\xbe","\x19"),
	HX_HCSTRING("get__20","\x74","\x0a","\xbd","\x26"),
	HX_HCSTRING("set__20","\x80","\x9b","\xbe","\x19"),
	HX_HCSTRING("get__21","\x75","\x0a","\xbd","\x26"),
	HX_HCSTRING("set__21","\x81","\x9b","\xbe","\x19"),
	HX_HCSTRING("get__22","\x76","\x0a","\xbd","\x26"),
	HX_HCSTRING("set__22","\x82","\x9b","\xbe","\x19"),
	HX_HCSTRING("get__23","\x77","\x0a","\xbd","\x26"),
	HX_HCSTRING("set__23","\x83","\x9b","\xbe","\x19"),
	HX_HCSTRING("get__30","\x53","\x0b","\xbd","\x26"),
	HX_HCSTRING("set__30","\x5f","\x9c","\xbe","\x19"),
	HX_HCSTRING("get__31","\x54","\x0b","\xbd","\x26"),
	HX_HCSTRING("set__31","\x60","\x9c","\xbe","\x19"),
	HX_HCSTRING("get__32","\x55","\x0b","\xbd","\x26"),
	HX_HCSTRING("set__32","\x61","\x9c","\xbe","\x19"),
	HX_HCSTRING("get__33","\x56","\x0b","\xbd","\x26"),
	HX_HCSTRING("set__33","\x62","\x9c","\xbe","\x19"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Mat4_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Mat4_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Mat4_obj::helpVec,"helpVec");
	HX_MARK_MEMBER_NAME(Mat4_obj::helpMat,"helpMat");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Mat4_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Mat4_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Mat4_obj::helpVec,"helpVec");
	HX_VISIT_MEMBER_NAME(Mat4_obj::helpMat,"helpMat");
};

#endif

hx::Class Mat4_obj::__mClass;

static ::String Mat4_obj_sStaticFields[] = {
	HX_HCSTRING("helpVec","\x13","\xd6","\x53","\xc0"),
	HX_HCSTRING("helpMat","\x5f","\xfe","\x4c","\xc0"),
	HX_HCSTRING("identity","\x3e","\x45","\x2f","\xb9"),
	HX_HCSTRING("fromArray","\xcf","\x57","\x18","\xda"),
	HX_HCSTRING("fromFloat32Array","\xe8","\x5e","\x81","\x61"),
	HX_HCSTRING("persp","\xba","\x6a","\xfa","\xbf"),
	HX_HCSTRING("ortho","\x38","\x17","\x2d","\x35"),
	HX_HCSTRING("lookAt","\x32","\x75","\xb5","\x61"),
	::String(null())
};

void Mat4_obj::__register()
{
	hx::Object *dummy = new Mat4_obj;
	Mat4_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("iron.math.Mat4","\x74","\xa3","\x1f","\xf1");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Mat4_obj::__GetStatic;
	__mClass->mSetStaticField = &Mat4_obj::__SetStatic;
	__mClass->mMarkFunc = Mat4_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Mat4_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Mat4_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Mat4_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Mat4_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Mat4_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Mat4_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Mat4_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_04012593dfa58962_10_boot)
HXDLIN(  10)		helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            	}
{
            	HX_STACKFRAME(&_hx_pos_04012593dfa58962_11_boot)
HXDLIN(  11)		helpMat = ::iron::math::Mat4_obj::identity();
            	}
}

} // end namespace iron
} // end namespace math
