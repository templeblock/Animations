// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_iron_math_Mat4
#include <iron/math/Mat4.h>
#endif
#ifndef INCLUDED_iron_math_Quat
#include <iron/math/Quat.h>
#endif
#ifndef INCLUDED_iron_math_Vec4
#include <iron/math/Vec4.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix4
#include <kha/math/FastMatrix4.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_5_new,"iron.math.Vec4","new",0x836eca32,"iron.math.Vec4.new","iron/math/Vec4.hx",5,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_19_cross,"iron.math.Vec4","cross",0x0784f1d2,"iron.math.Vec4.cross","iron/math/Vec4.hx",19,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_29_crossvecs,"iron.math.Vec4","crossvecs",0xe3c36a71,"iron.math.Vec4.crossvecs","iron/math/Vec4.hx",29,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_39_set,"iron.math.Vec4","set",0x83729574,"iron.math.Vec4.set","iron/math/Vec4.hx",39,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_47_add,"iron.math.Vec4","add",0x8364ebf3,"iron.math.Vec4.add","iron/math/Vec4.hx",47,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_54_addf,"iron.math.Vec4","addf",0x74e98913,"iron.math.Vec4.addf","iron/math/Vec4.hx",54,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_61_addvecs,"iron.math.Vec4","addvecs",0x68618912,"iron.math.Vec4.addvecs","iron/math/Vec4.hx",61,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_68_subvecs,"iron.math.Vec4","subvecs",0xfa27dbf1,"iron.math.Vec4.subvecs","iron/math/Vec4.hx",68,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_75_normalize,"iron.math.Vec4","normalize",0xfb585adf,"iron.math.Vec4.normalize","iron/math/Vec4.hx",75,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_84_normalizeTo,"iron.math.Vec4","normalizeTo",0xc64c5a3a,"iron.math.Vec4.normalizeTo","iron/math/Vec4.hx",84,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_90_mult,"iron.math.Vec4","mult",0x7ce505de,"iron.math.Vec4.mult","iron/math/Vec4.hx",90,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_96_dot,"iron.math.Vec4","dot",0x83673c5b,"iron.math.Vec4.dot","iron/math/Vec4.hx",96,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_99_setFrom,"iron.math.Vec4","setFrom",0xd1f830fe,"iron.math.Vec4.setFrom","iron/math/Vec4.hx",99,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_105_clone,"iron.math.Vec4","clone",0x038da5af,"iron.math.Vec4.clone","iron/math/Vec4.hx",105,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_116_applyproj,"iron.math.Vec4","applyproj",0x990bbf5d,"iron.math.Vec4.applyproj","iron/math/Vec4.hx",116,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_129_applymat,"iron.math.Vec4","applymat",0xf77e4ae0,"iron.math.Vec4.applymat","iron/math/Vec4.hx",129,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_139_applymat4,"iron.math.Vec4","applymat4",0x97033954,"iron.math.Vec4.applymat4","iron/math/Vec4.hx",139,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_151_applyAxisAngle,"iron.math.Vec4","applyAxisAngle",0x0ad1ff92,"iron.math.Vec4.applyAxisAngle","iron/math/Vec4.hx",151,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_156_applyQuat,"iron.math.Vec4","applyQuat",0x84905cb7,"iron.math.Vec4.applyQuat","iron/math/Vec4.hx",156,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_168_equals,"iron.math.Vec4","equals",0xca0863ad,"iron.math.Vec4.equals","iron/math/Vec4.hx",168,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_172_length,"iron.math.Vec4","length",0xa91d0a54,"iron.math.Vec4.length","iron/math/Vec4.hx",172,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_175_sub,"iron.math.Vec4","sub",0x8372a352,"iron.math.Vec4.sub","iron/math/Vec4.hx",175,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_192_distanceTo,"iron.math.Vec4","distanceTo",0xfc74987e,"iron.math.Vec4.distanceTo","iron/math/Vec4.hx",192,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_195_reflect,"iron.math.Vec4","reflect",0xb1dacf0f,"iron.math.Vec4.reflect","iron/math/Vec4.hx",195,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_203_clamp,"iron.math.Vec4","clamp",0x0383054d,"iron.math.Vec4.clamp","iron/math/Vec4.hx",203,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_232_toString,"iron.math.Vec4","toString",0x0adefd9a,"iron.math.Vec4.toString","iron/math/Vec4.hx",232,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_108_lerp,"iron.math.Vec4","lerp",0x7c2fb065,"iron.math.Vec4.lerp","iron/math/Vec4.hx",108,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_181_distance,"iron.math.Vec4","distance",0x3e69c023,"iron.math.Vec4.distance","iron/math/Vec4.hx",181,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_184_distancef,"iron.math.Vec4","distancef",0x5e1e5ee3,"iron.math.Vec4.distancef","iron/math/Vec4.hx",184,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_217_xAxis,"iron.math.Vec4","xAxis",0xfe92778b,"iron.math.Vec4.xAxis","iron/math/Vec4.hx",217,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_218_yAxis,"iron.math.Vec4","yAxis",0x91f90c0c,"iron.math.Vec4.yAxis","iron/math/Vec4.hx",218,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_219_zAxis,"iron.math.Vec4","zAxis",0x255fa08d,"iron.math.Vec4.zAxis","iron/math/Vec4.hx",219,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_220_one,"iron.math.Vec4","one",0x836f9438,"iron.math.Vec4.one","iron/math/Vec4.hx",220,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_221_zero,"iron.math.Vec4","zero",0x8570ad16,"iron.math.Vec4.zero","iron/math/Vec4.hx",221,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_222_back,"iron.math.Vec4","back",0x75907815,"iron.math.Vec4.back","iron/math/Vec4.hx",222,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_223_forward,"iron.math.Vec4","forward",0xae7c2c97,"iron.math.Vec4.forward","iron/math/Vec4.hx",223,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_224_down,"iron.math.Vec4","down",0x76ed9650,"iron.math.Vec4.down","iron/math/Vec4.hx",224,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_225_up,"iron.math.Vec4","up",0x9cb70cc9,"iron.math.Vec4.up","iron/math/Vec4.hx",225,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_226_left,"iron.math.Vec4","left",0x7c2fa5f5,"iron.math.Vec4.left","iron/math/Vec4.hx",226,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_227_right,"iron.math.Vec4","right",0xa48e9e2e,"iron.math.Vec4.right","iron/math/Vec4.hx",227,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_228_negativeInfinity,"iron.math.Vec4","negativeInfinity",0xb233c16b,"iron.math.Vec4.negativeInfinity","iron/math/Vec4.hx",228,0x1ba9f11e)
HX_LOCAL_STACK_FRAME(_hx_pos_a4ebb82b51b50c55_229_positiveInfinity,"iron.math.Vec4","positiveInfinity",0x608c25af,"iron.math.Vec4.positiveInfinity","iron/math/Vec4.hx",229,0x1ba9f11e)
namespace iron{
namespace math{

void Vec4_obj::__construct(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< Float >  __o_z,hx::Null< Float >  __o_w){
Float x = __o_x.Default(((Float)0.0));
Float y = __o_y.Default(((Float)0.0));
Float z = __o_z.Default(((Float)0.0));
Float w = __o_w.Default(((Float)1.0));
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_5_new)
HXLINE( 150)		this->quat =  ::iron::math::Quat_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE(  13)		this->x = x;
HXLINE(  14)		this->y = y;
HXLINE(  15)		this->z = z;
HXLINE(  16)		this->w = w;
            	}

Dynamic Vec4_obj::__CreateEmpty() { return new Vec4_obj; }

void *Vec4_obj::_hx_vtable = 0;

Dynamic Vec4_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Vec4_obj > _hx_result = new Vec4_obj();
	_hx_result->__construct(inArgs[0],inArgs[1],inArgs[2],inArgs[3]);
	return _hx_result;
}

bool Vec4_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1783ee74;
}

 ::iron::math::Vec4 Vec4_obj::cross( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_19_cross)
HXLINE(  20)		float x2 = (this->y * v->z);
HXDLIN(  20)		float x21 = (x2 - (this->z * v->y));
HXLINE(  21)		float y2 = (this->z * v->x);
HXDLIN(  21)		float y21 = (y2 - (this->x * v->z));
HXLINE(  22)		float z2 = (this->x * v->y);
HXDLIN(  22)		float z21 = (z2 - (this->y * v->x));
HXLINE(  23)		this->x = x21;
HXLINE(  24)		this->y = y21;
HXLINE(  25)		this->z = z21;
HXLINE(  26)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,cross,return )

 ::iron::math::Vec4 Vec4_obj::crossvecs( ::iron::math::Vec4 a, ::iron::math::Vec4 b){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_29_crossvecs)
HXLINE(  30)		float x2 = (a->y * b->z);
HXDLIN(  30)		float x21 = (x2 - (a->z * b->y));
HXLINE(  31)		float y2 = (a->z * b->x);
HXDLIN(  31)		float y21 = (y2 - (a->x * b->z));
HXLINE(  32)		float z2 = (a->x * b->y);
HXDLIN(  32)		float z21 = (z2 - (a->y * b->x));
HXLINE(  33)		this->x = x21;
HXLINE(  34)		this->y = y21;
HXLINE(  35)		this->z = z21;
HXLINE(  36)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec4_obj,crossvecs,return )

 ::iron::math::Vec4 Vec4_obj::set(float x,float y,float z,hx::Null< Float >  __o_w){
Float w = __o_w.Default(((Float)1.0));
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_39_set)
HXLINE(  40)		this->x = x;
HXLINE(  41)		this->y = y;
HXLINE(  42)		this->z = z;
HXLINE(  43)		this->w = w;
HXLINE(  44)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Vec4_obj,set,return )

 ::iron::math::Vec4 Vec4_obj::add( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_47_add)
HXLINE(  48)		 ::iron::math::Vec4 _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  48)		_hx_tmp->x = (_hx_tmp->x + v->x);
HXLINE(  49)		 ::iron::math::Vec4 _hx_tmp1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  49)		_hx_tmp1->y = (_hx_tmp1->y + v->y);
HXLINE(  50)		 ::iron::math::Vec4 _hx_tmp2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  50)		_hx_tmp2->z = (_hx_tmp2->z + v->z);
HXLINE(  51)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,add,return )

 ::iron::math::Vec4 Vec4_obj::addf(float x,float y,float z){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_54_addf)
HXLINE(  55)		 ::iron::math::Vec4 _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  55)		_hx_tmp->x = (_hx_tmp->x + x);
HXLINE(  56)		 ::iron::math::Vec4 _hx_tmp1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  56)		_hx_tmp1->y = (_hx_tmp1->y + y);
HXLINE(  57)		 ::iron::math::Vec4 _hx_tmp2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  57)		_hx_tmp2->z = (_hx_tmp2->z + z);
HXLINE(  58)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC3(Vec4_obj,addf,return )

 ::iron::math::Vec4 Vec4_obj::addvecs( ::iron::math::Vec4 a, ::iron::math::Vec4 b){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_61_addvecs)
HXLINE(  62)		this->x = (a->x + b->x);
HXLINE(  63)		this->y = (a->y + b->y);
HXLINE(  64)		this->z = (a->z + b->z);
HXLINE(  65)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec4_obj,addvecs,return )

 ::iron::math::Vec4 Vec4_obj::subvecs( ::iron::math::Vec4 a, ::iron::math::Vec4 b){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_68_subvecs)
HXLINE(  69)		this->x = (a->x - b->x);
HXLINE(  70)		this->y = (a->y - b->y);
HXLINE(  71)		this->z = (a->z - b->z);
HXLINE(  72)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec4_obj,subvecs,return )

 ::iron::math::Vec4 Vec4_obj::normalize(){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_75_normalize)
HXLINE(  76)		float v = (this->x * this->x);
HXDLIN(  76)		float v1 = (v + (this->y * this->y));
HXDLIN(  76)		float n = ::Math_obj::sqrt((v1 + (this->z * this->z)));
HXLINE(  77)		if ((n > ((Float)0.0))) {
HXLINE(  78)			Float invN = ((Float)((Float)1.0) / (Float)n);
HXLINE(  79)			 ::iron::math::Vec4 _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  79)			_hx_tmp->x = (_hx_tmp->x * invN);
HXDLIN(  79)			 ::iron::math::Vec4 _hx_tmp1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  79)			_hx_tmp1->y = (_hx_tmp1->y * invN);
HXDLIN(  79)			 ::iron::math::Vec4 _hx_tmp2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  79)			_hx_tmp2->z = (_hx_tmp2->z * invN);
            		}
HXLINE(  81)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,normalize,return )

 ::iron::math::Vec4 Vec4_obj::normalizeTo(float newLength){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_84_normalizeTo)
HXLINE(  85)		 ::iron::math::Vec4 v = this->normalize();
HXLINE(  86)		v = this->mult(newLength);
HXLINE(  87)		return v;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,normalizeTo,return )

 ::iron::math::Vec4 Vec4_obj::mult(float f){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_90_mult)
HXLINE(  91)		 ::iron::math::Vec4 _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  91)		_hx_tmp->x = (_hx_tmp->x * f);
HXDLIN(  91)		 ::iron::math::Vec4 _hx_tmp1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  91)		_hx_tmp1->y = (_hx_tmp1->y * f);
HXDLIN(  91)		 ::iron::math::Vec4 _hx_tmp2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN(  91)		_hx_tmp2->z = (_hx_tmp2->z * f);
HXLINE(  92)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,mult,return )

float Vec4_obj::dot( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_96_dot)
HXDLIN(  96)		float _hx_tmp = (this->x * v->x);
HXDLIN(  96)		float _hx_tmp1 = (_hx_tmp + (this->y * v->y));
HXDLIN(  96)		return (_hx_tmp1 + (this->z * v->z));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,dot,return )

 ::iron::math::Vec4 Vec4_obj::setFrom( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_99_setFrom)
HXLINE( 100)		this->x = v->x;
HXDLIN( 100)		this->y = v->y;
HXDLIN( 100)		this->z = v->z;
HXLINE( 101)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,setFrom,return )

 ::iron::math::Vec4 Vec4_obj::clone(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_105_clone)
HXDLIN( 105)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,this->x,this->y,this->z,this->w);
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,clone,return )

 ::iron::math::Vec4 Vec4_obj::applyproj( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_116_applyproj)
HXLINE( 117)		float x = this->x;
HXDLIN( 117)		float y = this->y;
HXDLIN( 117)		float z = this->z;
HXLINE( 120)		float d = (m->self->_03 * x);
HXDLIN( 120)		float d1 = (d + (m->self->_13 * y));
HXDLIN( 120)		Float d2 = ((Float)((Float)1.0) / (Float)((d1 + (m->self->_23 * z)) + m->self->_33));
HXLINE( 122)		float _hx_tmp = (m->self->_00 * x);
HXDLIN( 122)		float _hx_tmp1 = (_hx_tmp + (m->self->_10 * y));
HXDLIN( 122)		this->x = (((_hx_tmp1 + (m->self->_20 * z)) + m->self->_30) * d2);
HXLINE( 123)		float _hx_tmp2 = (m->self->_01 * x);
HXDLIN( 123)		float _hx_tmp3 = (_hx_tmp2 + (m->self->_11 * y));
HXDLIN( 123)		this->y = (((_hx_tmp3 + (m->self->_21 * z)) + m->self->_31) * d2);
HXLINE( 124)		float _hx_tmp4 = (m->self->_02 * x);
HXDLIN( 124)		float _hx_tmp5 = (_hx_tmp4 + (m->self->_12 * y));
HXDLIN( 124)		this->z = (((_hx_tmp5 + (m->self->_22 * z)) + m->self->_32) * d2);
HXLINE( 126)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,applyproj,return )

 ::iron::math::Vec4 Vec4_obj::applymat( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_129_applymat)
HXLINE( 130)		float x = this->x;
HXDLIN( 130)		float y = this->y;
HXDLIN( 130)		float z = this->z;
HXLINE( 132)		float _hx_tmp = (m->self->_00 * x);
HXDLIN( 132)		float _hx_tmp1 = (_hx_tmp + (m->self->_10 * y));
HXDLIN( 132)		this->x = ((_hx_tmp1 + (m->self->_20 * z)) + m->self->_30);
HXLINE( 133)		float _hx_tmp2 = (m->self->_01 * x);
HXDLIN( 133)		float _hx_tmp3 = (_hx_tmp2 + (m->self->_11 * y));
HXDLIN( 133)		this->y = ((_hx_tmp3 + (m->self->_21 * z)) + m->self->_31);
HXLINE( 134)		float _hx_tmp4 = (m->self->_02 * x);
HXDLIN( 134)		float _hx_tmp5 = (_hx_tmp4 + (m->self->_12 * y));
HXDLIN( 134)		this->z = ((_hx_tmp5 + (m->self->_22 * z)) + m->self->_32);
HXLINE( 136)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,applymat,return )

 ::iron::math::Vec4 Vec4_obj::applymat4( ::iron::math::Mat4 m){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_139_applymat4)
HXLINE( 140)		float x = this->x;
HXDLIN( 140)		float y = this->y;
HXDLIN( 140)		float z = this->z;
HXDLIN( 140)		float w = this->w;
HXLINE( 142)		float _hx_tmp = (m->self->_00 * x);
HXDLIN( 142)		float _hx_tmp1 = (_hx_tmp + (m->self->_10 * y));
HXDLIN( 142)		float _hx_tmp2 = (_hx_tmp1 + (m->self->_20 * z));
HXDLIN( 142)		this->x = (_hx_tmp2 + (m->self->_30 * w));
HXLINE( 143)		float _hx_tmp3 = (m->self->_01 * x);
HXDLIN( 143)		float _hx_tmp4 = (_hx_tmp3 + (m->self->_11 * y));
HXDLIN( 143)		float _hx_tmp5 = (_hx_tmp4 + (m->self->_21 * z));
HXDLIN( 143)		this->y = (_hx_tmp5 + (m->self->_31 * w));
HXLINE( 144)		float _hx_tmp6 = (m->self->_02 * x);
HXDLIN( 144)		float _hx_tmp7 = (_hx_tmp6 + (m->self->_12 * y));
HXDLIN( 144)		float _hx_tmp8 = (_hx_tmp7 + (m->self->_22 * z));
HXDLIN( 144)		this->z = (_hx_tmp8 + (m->self->_32 * w));
HXLINE( 145)		float _hx_tmp9 = (m->self->_03 * x);
HXDLIN( 145)		float _hx_tmp10 = (_hx_tmp9 + (m->self->_13 * y));
HXDLIN( 145)		float _hx_tmp11 = (_hx_tmp10 + (m->self->_23 * z));
HXDLIN( 145)		this->w = (_hx_tmp11 + (m->self->_33 * w));
HXLINE( 147)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,applymat4,return )

 ::iron::math::Vec4 Vec4_obj::applyAxisAngle( ::iron::math::Vec4 axis,float angle){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_151_applyAxisAngle)
HXLINE( 152)		this->quat->fromAxisAngle(axis,angle);
HXLINE( 153)		return this->applyQuat(this->quat);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec4_obj,applyAxisAngle,return )

 ::iron::math::Vec4 Vec4_obj::applyQuat( ::iron::math::Quat q){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_156_applyQuat)
HXLINE( 157)		float ix = (q->w * this->x);
HXDLIN( 157)		float ix1 = (ix + (q->y * this->z));
HXDLIN( 157)		float ix2 = (ix1 - (q->z * this->y));
HXLINE( 158)		float iy = (q->w * this->y);
HXDLIN( 158)		float iy1 = (iy + (q->z * this->x));
HXDLIN( 158)		float iy2 = (iy1 - (q->x * this->z));
HXLINE( 159)		float iz = (q->w * this->z);
HXDLIN( 159)		float iz1 = (iz + (q->x * this->y));
HXDLIN( 159)		float iz2 = (iz1 - (q->y * this->x));
HXLINE( 160)		float iw = (-(q->x) * this->x);
HXDLIN( 160)		float iw1 = (iw - (q->y * this->y));
HXDLIN( 160)		float iw2 = (iw1 - (q->z * this->z));
HXLINE( 161)		float _hx_tmp = (ix2 * q->w);
HXDLIN( 161)		float _hx_tmp1 = (_hx_tmp + (iw2 * -(q->x)));
HXDLIN( 161)		float _hx_tmp2 = (_hx_tmp1 + (iy2 * -(q->z)));
HXDLIN( 161)		this->x = (_hx_tmp2 - (iz2 * -(q->y)));
HXLINE( 162)		float _hx_tmp3 = (iy2 * q->w);
HXDLIN( 162)		float _hx_tmp4 = (_hx_tmp3 + (iw2 * -(q->y)));
HXDLIN( 162)		float _hx_tmp5 = (_hx_tmp4 + (iz2 * -(q->x)));
HXDLIN( 162)		this->y = (_hx_tmp5 - (ix2 * -(q->z)));
HXLINE( 163)		float _hx_tmp6 = (iz2 * q->w);
HXDLIN( 163)		float _hx_tmp7 = (_hx_tmp6 + (iw2 * -(q->z)));
HXDLIN( 163)		float _hx_tmp8 = (_hx_tmp7 + (ix2 * -(q->y)));
HXDLIN( 163)		this->z = (_hx_tmp8 - (iy2 * -(q->x)));
HXLINE( 164)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,applyQuat,return )

bool Vec4_obj::equals( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_168_equals)
HXDLIN( 168)		bool _hx_tmp;
HXDLIN( 168)		if ((this->x == v->x)) {
HXDLIN( 168)			_hx_tmp = (this->y == v->y);
            		}
            		else {
HXDLIN( 168)			_hx_tmp = false;
            		}
HXDLIN( 168)		if (_hx_tmp) {
HXDLIN( 168)			return (this->z == v->z);
            		}
            		else {
HXDLIN( 168)			return false;
            		}
HXDLIN( 168)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,equals,return )

float Vec4_obj::length(){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_172_length)
HXDLIN( 172)		float v = (this->x * this->x);
HXDLIN( 172)		float v1 = (v + (this->y * this->y));
HXDLIN( 172)		return ::Math_obj::sqrt((v1 + (this->z * this->z)));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,length,return )

 ::iron::math::Vec4 Vec4_obj::sub( ::iron::math::Vec4 v){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_175_sub)
HXLINE( 176)		 ::iron::math::Vec4 _hx_tmp = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 176)		_hx_tmp->x = (_hx_tmp->x - v->x);
HXDLIN( 176)		 ::iron::math::Vec4 _hx_tmp1 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 176)		_hx_tmp1->y = (_hx_tmp1->y - v->y);
HXDLIN( 176)		 ::iron::math::Vec4 _hx_tmp2 = hx::ObjectPtr<OBJ_>(this);
HXDLIN( 176)		_hx_tmp2->z = (_hx_tmp2->z - v->z);
HXLINE( 177)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,sub,return )

float Vec4_obj::distanceTo( ::iron::math::Vec4 p){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_192_distanceTo)
HXDLIN( 192)		float v = (p->x - this->x);
HXDLIN( 192)		float v1 = (v * (p->x - this->x));
HXDLIN( 192)		float v2 = (p->y - this->y);
HXDLIN( 192)		float v3 = (v1 + (v2 * (p->y - this->y)));
HXDLIN( 192)		float v4 = (p->z - this->z);
HXDLIN( 192)		return ::Math_obj::sqrt((v3 + (v4 * (p->z - this->z))));
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,distanceTo,return )

 ::iron::math::Vec4 Vec4_obj::reflect( ::iron::math::Vec4 n){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_195_reflect)
HXLINE( 196)		float d = this->dot(n);
HXLINE( 197)		float _hx_tmp = this->x;
HXDLIN( 197)		this->x = (_hx_tmp - ((((Float)2.0) * d) * n->x));
HXLINE( 198)		float _hx_tmp1 = this->y;
HXDLIN( 198)		this->y = (_hx_tmp1 - ((((Float)2.0) * d) * n->y));
HXLINE( 199)		float _hx_tmp2 = this->z;
HXDLIN( 199)		this->z = (_hx_tmp2 - ((((Float)2.0) * d) * n->z));
HXLINE( 200)		return hx::ObjectPtr<OBJ_>(this);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Vec4_obj,reflect,return )

 ::iron::math::Vec4 Vec4_obj::clamp(float fmin,float fmax){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_203_clamp)
HXLINE( 204)		float v = (this->x * this->x);
HXDLIN( 204)		float v1 = (v + (this->y * this->y));
HXDLIN( 204)		float n = ::Math_obj::sqrt((v1 + (this->z * this->z)));
HXLINE( 205)		 ::iron::math::Vec4 v2 = hx::ObjectPtr<OBJ_>(this);
HXLINE( 207)		if ((n < fmin)) {
HXLINE( 208)			 ::iron::math::Vec4 v3 = this->normalize();
HXDLIN( 208)			v3 = this->mult(fmin);
HXDLIN( 208)			v2 = v3;
            		}
            		else {
HXLINE( 210)			if ((n > fmax)) {
HXLINE( 211)				 ::iron::math::Vec4 v4 = this->normalize();
HXDLIN( 211)				v4 = this->mult(fmax);
HXDLIN( 211)				v2 = v4;
            			}
            		}
HXLINE( 213)		return v2;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Vec4_obj,clamp,return )

::String Vec4_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_232_toString)
HXDLIN( 232)		::String _hx_tmp = ((HX_("(",28,00,00,00) + ::Std_obj::string(this->x)) + HX_(", ",74,26,00,00));
HXDLIN( 232)		::String _hx_tmp1 = ((_hx_tmp + ::Std_obj::string(this->y)) + HX_(", ",74,26,00,00));
HXDLIN( 232)		::String _hx_tmp2 = ((_hx_tmp1 + ::Std_obj::string(this->z)) + HX_(", ",74,26,00,00));
HXDLIN( 232)		return ((_hx_tmp2 + ::Std_obj::string(this->w)) + HX_(")",29,00,00,00));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,toString,return )

 ::iron::math::Vec4 Vec4_obj::lerp( ::iron::math::Vec4 v1, ::iron::math::Vec4 v2,float t){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_108_lerp)
HXLINE( 109)		 ::iron::math::Vec4 target =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
HXLINE( 110)		float v21 = v2->x;
HXDLIN( 110)		target->x = (v21 + ((v1->x - v2->x) * t));
HXLINE( 111)		float v22 = v2->y;
HXDLIN( 111)		target->y = (v22 + ((v1->y - v2->y) * t));
HXLINE( 112)		float v23 = v2->z;
HXDLIN( 112)		target->z = (v23 + ((v1->z - v2->z) * t));
HXLINE( 113)		return target;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Vec4_obj,lerp,return )

float Vec4_obj::distance( ::iron::math::Vec4 v1, ::iron::math::Vec4 v2){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_181_distance)
HXDLIN( 181)		float vx = (v1->x - v2->x);
HXDLIN( 181)		float vy = (v1->y - v2->y);
HXDLIN( 181)		float vz = (v1->z - v2->z);
HXDLIN( 181)		return ::Math_obj::sqrt((((vx * vx) + (vy * vy)) + (vz * vz)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Vec4_obj,distance,return )

float Vec4_obj::distancef(float v1x,float v1y,float v1z,float v2x,float v2y,float v2z){
            	HX_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_184_distancef)
HXLINE( 185)		float vx = (v1x - v2x);
HXLINE( 186)		float vy = (v1y - v2y);
HXLINE( 187)		float vz = (v1z - v2z);
HXLINE( 188)		return ::Math_obj::sqrt((((vx * vx) + (vy * vy)) + (vz * vz)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(Vec4_obj,distancef,return )

 ::iron::math::Vec4 Vec4_obj::xAxis(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_217_xAxis)
HXDLIN( 217)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)1.0),((Float)0.0),((Float)0.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,xAxis,return )

 ::iron::math::Vec4 Vec4_obj::yAxis(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_218_yAxis)
HXDLIN( 218)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)0.0),((Float)1.0),((Float)0.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,yAxis,return )

 ::iron::math::Vec4 Vec4_obj::zAxis(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_219_zAxis)
HXDLIN( 219)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)0.0),((Float)0.0),((Float)1.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,zAxis,return )

 ::iron::math::Vec4 Vec4_obj::one(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_220_one)
HXDLIN( 220)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)1.0),((Float)1.0),((Float)1.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,one,return )

 ::iron::math::Vec4 Vec4_obj::zero(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_221_zero)
HXDLIN( 221)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)0.0),((Float)0.0),((Float)0.0),((Float)0.0));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,zero,return )

 ::iron::math::Vec4 Vec4_obj::back(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_222_back)
HXDLIN( 222)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)0.0),((Float)-1.0),((Float)0.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,back,return )

 ::iron::math::Vec4 Vec4_obj::forward(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_223_forward)
HXDLIN( 223)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)0.0),((Float)1.0),((Float)0.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,forward,return )

 ::iron::math::Vec4 Vec4_obj::down(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_224_down)
HXDLIN( 224)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)0.0),((Float)0.0),((Float)-1.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,down,return )

 ::iron::math::Vec4 Vec4_obj::up(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_225_up)
HXDLIN( 225)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)0.0),((Float)0.0),((Float)1.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,up,return )

 ::iron::math::Vec4 Vec4_obj::left(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_226_left)
HXDLIN( 226)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)-1.0),((Float)0.0),((Float)0.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,left,return )

 ::iron::math::Vec4 Vec4_obj::right(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_227_right)
HXDLIN( 227)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,((Float)1.0),((Float)0.0),((Float)0.0),null());
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,right,return )

 ::iron::math::Vec4 Vec4_obj::negativeInfinity(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_228_negativeInfinity)
HXDLIN( 228)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,::Math_obj::NEGATIVE_INFINITY,::Math_obj::NEGATIVE_INFINITY,::Math_obj::NEGATIVE_INFINITY,::Math_obj::NEGATIVE_INFINITY);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,negativeInfinity,return )

 ::iron::math::Vec4 Vec4_obj::positiveInfinity(){
            	HX_GC_STACKFRAME(&_hx_pos_a4ebb82b51b50c55_229_positiveInfinity)
HXDLIN( 229)		return  ::iron::math::Vec4_obj::__alloc( HX_CTX ,::Math_obj::POSITIVE_INFINITY,::Math_obj::POSITIVE_INFINITY,::Math_obj::POSITIVE_INFINITY,::Math_obj::POSITIVE_INFINITY);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Vec4_obj,positiveInfinity,return )


hx::ObjectPtr< Vec4_obj > Vec4_obj::__new(hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< Float >  __o_z,hx::Null< Float >  __o_w) {
	hx::ObjectPtr< Vec4_obj > __this = new Vec4_obj();
	__this->__construct(__o_x,__o_y,__o_z,__o_w);
	return __this;
}

hx::ObjectPtr< Vec4_obj > Vec4_obj::__alloc(hx::Ctx *_hx_ctx,hx::Null< Float >  __o_x,hx::Null< Float >  __o_y,hx::Null< Float >  __o_z,hx::Null< Float >  __o_w) {
	Vec4_obj *__this = (Vec4_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Vec4_obj), true, "iron.math.Vec4"));
	*(void **)__this = Vec4_obj::_hx_vtable;
	__this->__construct(__o_x,__o_y,__o_z,__o_w);
	return __this;
}

Vec4_obj::Vec4_obj()
{
}

void Vec4_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Vec4);
	HX_MARK_MEMBER_NAME(x,"x");
	HX_MARK_MEMBER_NAME(y,"y");
	HX_MARK_MEMBER_NAME(z,"z");
	HX_MARK_MEMBER_NAME(w,"w");
	HX_MARK_MEMBER_NAME(quat,"quat");
	HX_MARK_END_CLASS();
}

void Vec4_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(x,"x");
	HX_VISIT_MEMBER_NAME(y,"y");
	HX_VISIT_MEMBER_NAME(z,"z");
	HX_VISIT_MEMBER_NAME(w,"w");
	HX_VISIT_MEMBER_NAME(quat,"quat");
}

hx::Val Vec4_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { return hx::Val( x ); }
		if (HX_FIELD_EQ(inName,"y") ) { return hx::Val( y ); }
		if (HX_FIELD_EQ(inName,"z") ) { return hx::Val( z ); }
		if (HX_FIELD_EQ(inName,"w") ) { return hx::Val( w ); }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"set") ) { return hx::Val( set_dyn() ); }
		if (HX_FIELD_EQ(inName,"add") ) { return hx::Val( add_dyn() ); }
		if (HX_FIELD_EQ(inName,"dot") ) { return hx::Val( dot_dyn() ); }
		if (HX_FIELD_EQ(inName,"sub") ) { return hx::Val( sub_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"addf") ) { return hx::Val( addf_dyn() ); }
		if (HX_FIELD_EQ(inName,"mult") ) { return hx::Val( mult_dyn() ); }
		if (HX_FIELD_EQ(inName,"quat") ) { return hx::Val( quat ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"cross") ) { return hx::Val( cross_dyn() ); }
		if (HX_FIELD_EQ(inName,"clone") ) { return hx::Val( clone_dyn() ); }
		if (HX_FIELD_EQ(inName,"clamp") ) { return hx::Val( clamp_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"equals") ) { return hx::Val( equals_dyn() ); }
		if (HX_FIELD_EQ(inName,"length") ) { return hx::Val( length_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"addvecs") ) { return hx::Val( addvecs_dyn() ); }
		if (HX_FIELD_EQ(inName,"subvecs") ) { return hx::Val( subvecs_dyn() ); }
		if (HX_FIELD_EQ(inName,"setFrom") ) { return hx::Val( setFrom_dyn() ); }
		if (HX_FIELD_EQ(inName,"reflect") ) { return hx::Val( reflect_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"applymat") ) { return hx::Val( applymat_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"crossvecs") ) { return hx::Val( crossvecs_dyn() ); }
		if (HX_FIELD_EQ(inName,"normalize") ) { return hx::Val( normalize_dyn() ); }
		if (HX_FIELD_EQ(inName,"applyproj") ) { return hx::Val( applyproj_dyn() ); }
		if (HX_FIELD_EQ(inName,"applymat4") ) { return hx::Val( applymat4_dyn() ); }
		if (HX_FIELD_EQ(inName,"applyQuat") ) { return hx::Val( applyQuat_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"distanceTo") ) { return hx::Val( distanceTo_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"normalizeTo") ) { return hx::Val( normalizeTo_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"applyAxisAngle") ) { return hx::Val( applyAxisAngle_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Vec4_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"up") ) { outValue = up_dyn(); return true; }
		break;
	case 3:
		if (HX_FIELD_EQ(inName,"one") ) { outValue = one_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"lerp") ) { outValue = lerp_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zero") ) { outValue = zero_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"back") ) { outValue = back_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"down") ) { outValue = down_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"left") ) { outValue = left_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"xAxis") ) { outValue = xAxis_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"yAxis") ) { outValue = yAxis_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"zAxis") ) { outValue = zAxis_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"right") ) { outValue = right_dyn(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"forward") ) { outValue = forward_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"distance") ) { outValue = distance_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"distancef") ) { outValue = distancef_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"negativeInfinity") ) { outValue = negativeInfinity_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"positiveInfinity") ) { outValue = positiveInfinity_dyn(); return true; }
	}
	return false;
}

hx::Val Vec4_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 1:
		if (HX_FIELD_EQ(inName,"x") ) { x=inValue.Cast< float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"y") ) { y=inValue.Cast< float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"z") ) { z=inValue.Cast< float >(); return inValue; }
		if (HX_FIELD_EQ(inName,"w") ) { w=inValue.Cast< float >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"quat") ) { quat=inValue.Cast<  ::iron::math::Quat >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void Vec4_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("x","\x78","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("y","\x79","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("z","\x7a","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("w","\x77","\x00","\x00","\x00"));
	outFields->push(HX_HCSTRING("quat","\xd7","\x38","\x0a","\x4b"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Vec4_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::cpp::Float32*/ ,(int)offsetof(Vec4_obj,x),HX_HCSTRING("x","\x78","\x00","\x00","\x00")},
	{hx::fsObject /*::cpp::Float32*/ ,(int)offsetof(Vec4_obj,y),HX_HCSTRING("y","\x79","\x00","\x00","\x00")},
	{hx::fsObject /*::cpp::Float32*/ ,(int)offsetof(Vec4_obj,z),HX_HCSTRING("z","\x7a","\x00","\x00","\x00")},
	{hx::fsObject /*::cpp::Float32*/ ,(int)offsetof(Vec4_obj,w),HX_HCSTRING("w","\x77","\x00","\x00","\x00")},
	{hx::fsObject /*::iron::math::Quat*/ ,(int)offsetof(Vec4_obj,quat),HX_HCSTRING("quat","\xd7","\x38","\x0a","\x4b")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *Vec4_obj_sStaticStorageInfo = 0;
#endif

static ::String Vec4_obj_sMemberFields[] = {
	HX_HCSTRING("x","\x78","\x00","\x00","\x00"),
	HX_HCSTRING("y","\x79","\x00","\x00","\x00"),
	HX_HCSTRING("z","\x7a","\x00","\x00","\x00"),
	HX_HCSTRING("w","\x77","\x00","\x00","\x00"),
	HX_HCSTRING("cross","\x80","\x5f","\x5a","\x4c"),
	HX_HCSTRING("crossvecs","\x1f","\x47","\x0c","\x94"),
	HX_HCSTRING("set","\xa2","\x9b","\x57","\x00"),
	HX_HCSTRING("add","\x21","\xf2","\x49","\x00"),
	HX_HCSTRING("addf","\x25","\xeb","\x69","\x40"),
	HX_HCSTRING("addvecs","\x40","\x3e","\xb0","\x9f"),
	HX_HCSTRING("subvecs","\x1f","\x91","\x76","\x31"),
	HX_HCSTRING("normalize","\x8d","\x37","\xa1","\xab"),
	HX_HCSTRING("normalizeTo","\x68","\x3e","\x08","\xc0"),
	HX_HCSTRING("mult","\xf0","\x67","\x65","\x48"),
	HX_HCSTRING("dot","\x89","\x42","\x4c","\x00"),
	HX_HCSTRING("setFrom","\x2c","\xe6","\x46","\x09"),
	HX_HCSTRING("clone","\x5d","\x13","\x63","\x48"),
	HX_HCSTRING("applyproj","\x0b","\x9c","\x54","\x49"),
	HX_HCSTRING("applymat","\xf2","\x1d","\x0e","\x25"),
	HX_HCSTRING("applymat4","\x02","\x16","\x4c","\x47"),
	HX_HCSTRING("quat","\xd7","\x38","\x0a","\x4b"),
	HX_HCSTRING("applyAxisAngle","\x24","\x6c","\x04","\x6b"),
	HX_HCSTRING("applyQuat","\x65","\x39","\xd9","\x34"),
	HX_HCSTRING("equals","\x3f","\xee","\xf2","\xbf"),
	HX_HCSTRING("length","\xe6","\x94","\x07","\x9f"),
	HX_HCSTRING("sub","\x80","\xa9","\x57","\x00"),
	HX_HCSTRING("distanceTo","\x10","\xd4","\xec","\x8b"),
	HX_HCSTRING("reflect","\x3d","\x84","\x29","\xe9"),
	HX_HCSTRING("clamp","\xfb","\x72","\x58","\x48"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Vec4_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Vec4_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Vec4_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Vec4_obj::__mClass,"__mClass");
};

#endif

hx::Class Vec4_obj::__mClass;

static ::String Vec4_obj_sStaticFields[] = {
	HX_HCSTRING("lerp","\x77","\x12","\xb0","\x47"),
	HX_HCSTRING("distance","\x35","\x93","\xf9","\x6b"),
	HX_HCSTRING("distancef","\x91","\x3b","\x67","\x0e"),
	HX_HCSTRING("xAxis","\x39","\xe5","\x67","\x43"),
	HX_HCSTRING("yAxis","\xba","\x79","\xce","\xd6"),
	HX_HCSTRING("zAxis","\x3b","\x0e","\x35","\x6a"),
	HX_HCSTRING("one","\x66","\x9a","\x54","\x00"),
	HX_HCSTRING("zero","\x28","\x0f","\xf1","\x50"),
	HX_HCSTRING("back","\x27","\xda","\x10","\x41"),
	HX_HCSTRING("forward","\xc5","\xe1","\xca","\xe5"),
	HX_HCSTRING("down","\x62","\xf8","\x6d","\x42"),
	HX_HCSTRING("up","\x5b","\x66","\x00","\x00"),
	HX_HCSTRING("left","\x07","\x08","\xb0","\x47"),
	HX_HCSTRING("right","\xdc","\x0b","\x64","\xe9"),
	HX_HCSTRING("negativeInfinity","\x7d","\xf6","\x47","\x55"),
	HX_HCSTRING("positiveInfinity","\xc1","\x5a","\xa0","\x03"),
	::String(null())
};

void Vec4_obj::__register()
{
	hx::Object *dummy = new Vec4_obj;
	Vec4_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("iron.math.Vec4","\x40","\x89","\x15","\xf7");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Vec4_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Vec4_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Vec4_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Vec4_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Vec4_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Vec4_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Vec4_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Vec4_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace iron
} // end namespace math
