// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_c5728fd05c542abe
#define INCLUDED_c5728fd05c542abe
#include "cpp_float32array.h"
#endif
#ifndef INCLUDED_7d028c26efabce49
#define INCLUDED_7d028c26efabce49
#include "cpp_uint32array.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_iron_data_ConstData
#include <iron/data/ConstData.h>
#endif
#ifndef INCLUDED_kha_arrays_Float32ArrayPrivate
#include <kha/arrays/Float32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_arrays_Uint32ArrayPrivate
#include <kha/arrays/Uint32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_graphics4_IndexBuffer
#include <kha/graphics4/IndexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics4_Usage
#include <kha/graphics4/Usage.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexBuffer
#include <kha/graphics4/VertexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexData
#include <kha/graphics4/VertexData.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexStructure
#include <kha/graphics4/VertexStructure.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_28_createScreenAlignedData,"iron.data.ConstData","createScreenAlignedData",0x4631e0c7,"iron.data.ConstData.createScreenAlignedData","iron/data/ConstData.hx",28,0x0a76184f)
static const Float _hx_array_data_df915e2f_3[] = {
	-1.0,-1.0,3.0,-1.0,-1.0,3.0,
};
static const int _hx_array_data_df915e2f_4[] = {
	(int)0,(int)1,(int)2,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_50_createRectData,"iron.data.ConstData","createRectData",0x116c53e9,"iron.data.ConstData.createRectData","iron/data/ConstData.hx",50,0x0a76184f)
static const Float _hx_array_data_df915e2f_8[] = {
	-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,
};
static const int _hx_array_data_df915e2f_9[] = {
	(int)0,(int)1,(int)2,(int)0,(int)2,(int)3,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_69_createBoxData,"iron.data.ConstData","createBoxData",0xcfbaa7ba,"iron.data.ConstData.createBoxData","iron/data/ConstData.hx",69,0x0a76184f)
static const Float _hx_array_data_df915e2f_13[] = {
	-1.0,1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,1.0,1.0,1.0,1.0,1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,-1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,-1.0,1.0,-1.0,-1.0,1.0,-1.0,1.0,1.0,1.0,1.0,-1.0,1.0,1.0,-1.0,-1.0,1.0,
};
static const int _hx_array_data_df915e2f_14[] = {
	(int)0,(int)1,(int)2,(int)0,(int)2,(int)3,(int)4,(int)5,(int)6,(int)4,(int)6,(int)7,(int)8,(int)9,(int)10,(int)8,(int)10,(int)11,(int)12,(int)13,(int)14,(int)12,(int)14,(int)15,(int)16,(int)17,(int)18,(int)16,(int)18,(int)19,(int)20,(int)21,(int)22,(int)20,(int)22,(int)23,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_95_createSkydomeData,"iron.data.ConstData","createSkydomeData",0xb380c5b3,"iron.data.ConstData.createSkydomeData","iron/data/ConstData.hx",95,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_149_createSphereData,"iron.data.ConstData","createSphereData",0x95473312,"iron.data.ConstData.createSphereData","iron/data/ConstData.hx",149,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_165_createConeData,"iron.data.ConstData","createConeData",0x1a388c28,"iron.data.ConstData.createConeData","iron/data/ConstData.hx",165,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_11_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",11,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_12_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",12,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_13_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",13,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_14_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",14,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_15_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",15,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_16_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",16,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_20_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",20,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_22_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",22,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_23_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",23,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_24_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",24,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_25_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",25,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_26_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",26,0x0a76184f)
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_181_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",181,0x0a76184f)
static const int _hx_array_data_df915e2f_37[] = {
	(int)0,(int)1,(int)2,(int)0,(int)3,(int)4,(int)3,(int)5,(int)6,(int)5,(int)7,(int)8,(int)7,(int)9,(int)10,(int)9,(int)11,(int)12,(int)13,(int)14,(int)15,(int)11,(int)16,(int)17,(int)13,(int)18,(int)2,(int)14,(int)2,(int)19,(int)2,(int)1,(int)20,(int)1,(int)4,(int)21,(int)4,(int)6,(int)22,(int)6,(int)8,(int)23,(int)8,(int)10,(int)24,(int)10,(int)12,(int)25,(int)14,(int)26,(int)15,(int)17,(int)27,(int)25,(int)22,(int)23,(int)28,(int)24,(int)29,(int)28,(int)24,(int)25,(int)30,(int)26,(int)31,(int)15,(int)25,(int)27,(int)32,(int)26,(int)19,(int)33,(int)19,(int)20,(int)34,(int)20,(int)21,(int)35,(int)21,(int)22,(int)36,(int)33,(int)34,(int)37,(int)34,(int)35,(int)38,(int)35,(int)36,(int)39,(int)36,(int)28,(int)40,(int)28,(int)29,(int)41,(int)30,(int)42,(int)41,(int)31,(int)43,(int)15,(int)30,(int)32,(int)44,(int)31,(int)33,(int)45,(int)40,(int)41,(int)46,(int)42,(int)47,(int)46,(int)43,(int)48,(int)15,(int)42,(int)44,(int)49,(int)43,(int)45,(int)50,(int)45,(int)37,(int)51,(int)37,(int)38,(int)52,(int)39,(int)53,(int)52,(int)39,(int)40,(int)54,(int)50,(int)51,(int)55,(int)51,(int)52,(int)56,(int)53,(int)57,(int)56,(int)53,(int)54,(int)58,(int)46,(int)59,(int)58,(int)46,(int)47,(int)60,(int)48,(int)61,(int)15,(int)47,(int)49,(int)62,(int)48,(int)50,(int)63,(int)59,(int)64,(int)65,(int)59,(int)60,(int)66,(int)61,(int)67,(int)15,(int)60,(int)62,(int)68,(int)61,(int)63,(int)69,(int)63,(int)55,(int)70,(int)56,(int)71,(int)70,(int)56,(int)57,(int)72,(int)57,(int)58,(int)65,(int)70,(int)71,(int)73,(int)71,(int)72,(int)74,(int)72,(int)65,(int)75,(int)64,(int)76,(int)75,(int)64,(int)66,(int)77,(int)67,(int)78,(int)15,(int)68,(int)79,(int)77,(int)67,(int)69,(int)80,(int)69,(int)70,(int)81,(int)76,(int)77,(int)82,(int)78,(int)83,(int)15,(int)77,(int)79,(int)84,(int)80,(int)85,(int)83,(int)80,(int)81,(int)86,(int)81,(int)73,(int)87,(int)74,(int)88,(int)87,(int)74,(int)75,(int)89,(int)76,(int)90,(int)89,(int)87,(int)88,(int)91,(int)88,(int)89,(int)92,(int)90,(int)93,(int)92,(int)90,(int)82,(int)94,(int)83,(int)95,(int)15,(int)82,(int)84,(int)96,(int)83,(int)85,(int)97,(int)86,(int)98,(int)97,(int)86,(int)87,(int)99,(int)95,(int)100,(int)15,(int)96,(int)101,(int)102,(int)95,(int)97,(int)103,(int)97,(int)98,(int)104,(int)98,(int)99,(int)105,(int)91,(int)106,(int)105,(int)91,(int)92,(int)107,(int)93,(int)108,(int)107,(int)93,(int)94,(int)102,(int)105,(int)106,(int)109,(int)106,(int)107,(int)110,(int)108,(int)111,(int)110,(int)108,(int)102,(int)112,(int)100,(int)113,(int)15,(int)102,(int)101,(int)114,(int)100,(int)103,(int)115,(int)103,(int)104,(int)116,(int)104,(int)105,(int)117,(int)114,(int)118,(int)119,(int)113,(int)115,(int)120,(int)115,(int)116,(int)121,(int)117,(int)122,(int)121,(int)109,(int)123,(int)122,(int)109,(int)110,(int)124,(int)111,(int)125,(int)124,(int)111,(int)112,(int)119,(int)113,(int)126,(int)15,(int)123,(int)124,(int)127,(int)125,(int)128,(int)127,(int)125,(int)119,(int)129,(int)126,(int)130,(int)15,(int)119,(int)118,(int)131,(int)126,(int)120,(int)132,(int)121,(int)133,(int)132,(int)121,(int)122,(int)134,(int)122,(int)123,(int)135,(int)130,(int)132,(int)136,(int)132,(int)133,(int)137,(int)133,(int)134,(int)138,(int)134,(int)135,(int)139,(int)135,(int)127,(int)140,(int)128,(int)141,(int)140,(int)128,(int)129,(int)142,(int)130,(int)143,(int)15,(int)129,(int)131,(int)144,(int)139,(int)140,(int)145,(int)141,(int)146,(int)145,(int)141,(int)142,(int)147,(int)143,(int)148,(int)15,(int)142,(int)144,(int)149,(int)143,(int)136,(int)150,(int)137,(int)151,(int)150,(int)138,(int)152,(int)151,(int)138,(int)139,(int)153,(int)150,(int)151,(int)154,(int)152,(int)155,(int)154,(int)153,(int)156,(int)155,(int)153,(int)145,(int)157,(int)146,(int)158,(int)157,(int)146,(int)147,(int)159,(int)148,(int)160,(int)15,(int)147,(int)149,(int)161,(int)148,(int)150,(int)162,(int)158,(int)163,(int)164,(int)158,(int)159,(int)165,(int)160,(int)166,(int)15,(int)161,(int)167,(int)165,(int)160,(int)162,(int)168,(int)162,(int)154,(int)169,(int)155,(int)170,(int)169,(int)156,(int)171,(int)170,(int)156,(int)157,(int)164,(int)169,(int)170,(int)172,(int)171,(int)173,(int)172,(int)171,(int)164,(int)174,(int)163,(int)175,(int)174,(int)163,(int)165,(int)176,(int)166,(int)177,(int)15,(int)165,(int)167,(int)178,(int)166,(int)168,(int)179,(int)168,(int)169,(int)180,(int)176,(int)181,(int)182,(int)177,(int)183,(int)15,(int)176,(int)178,(int)184,(int)177,(int)179,(int)185,(int)179,(int)180,(int)186,(int)172,(int)187,(int)186,(int)173,(int)188,(int)187,(int)173,(int)174,(int)189,(int)175,(int)182,(int)189,(int)187,(int)190,(int)191,(int)188,(int)192,(int)190,(int)188,(int)189,(int)193,(int)182,(int)194,(int)193,(int)182,(int)181,(int)195,(int)183,(int)196,(int)15,(int)181,(int)184,(int)197,(int)183,(int)185,(int)198,(int)185,(int)186,(int)191,(int)194,(int)195,(int)199,(int)196,(int)200,(int)15,(int)195,(int)197,(int)201,(int)196,(int)198,(int)202,(int)198,(int)191,(int)203,(int)190,(int)204,(int)203,(int)192,(int)205,(int)204,(int)192,(int)193,(int)206,(int)194,(int)207,(int)206,(int)205,(int)208,(int)209,(int)205,(int)206,(int)210,(int)207,(int)211,(int)210,(int)207,(int)199,(int)212,(int)200,(int)213,(int)15,(int)199,(int)201,(int)214,(int)202,(int)215,(int)213,(int)202,(int)203,(int)216,(int)204,(int)209,(int)216,(int)213,(int)217,(int)15,(int)214,(int)218,(int)219,(int)215,(int)220,(int)217,(int)215,(int)216,(int)221,(int)209,(int)222,(int)221,(int)209,(int)208,(int)223,(int)208,(int)210,(int)224,(int)211,(int)225,(int)224,(int)211,(int)212,(int)219,(int)223,(int)226,(int)227,(int)223,(int)224,(int)228,(int)225,(int)229,(int)228,(int)225,(int)219,(int)230,(int)217,(int)231,(int)15,(int)218,(int)232,(int)230,(int)220,(int)233,(int)231,(int)220,(int)221,(int)234,(int)222,(int)227,(int)234,(int)230,(int)232,(int)235,(int)231,(int)233,(int)236,(int)233,(int)234,(int)237,(int)227,(int)238,(int)237,(int)227,(int)226,(int)239,(int)226,(int)228,(int)240,(int)229,(int)241,(int)240,(int)229,(int)230,(int)242,(int)231,(int)243,(int)15,(int)239,(int)240,(int)244,(int)241,(int)245,(int)244,(int)241,(int)242,(int)246,(int)243,(int)247,(int)15,(int)235,(int)248,(int)246,(int)243,(int)236,(int)249,(int)237,(int)250,(int)249,(int)238,(int)251,(int)250,(int)239,(int)252,(int)251,(int)249,(int)250,(int)253,(int)250,(int)251,(int)254,(int)252,(int)255,(int)254,(int)252,(int)244,(int)256,(int)245,(int)257,(int)256,(int)245,(int)246,(int)258,(int)247,(int)259,(int)15,(int)248,(int)260,(int)258,(int)247,(int)249,(int)261,(int)257,(int)262,(int)263,(int)258,(int)264,(int)262,(int)259,(int)265,(int)15,(int)258,(int)260,(int)266,(int)259,(int)261,(int)267,(int)261,(int)253,(int)268,(int)253,(int)254,(int)269,(int)255,(int)270,(int)269,(int)255,(int)256,(int)263,(int)268,(int)271,(int)272,(int)269,(int)273,(int)271,(int)270,(int)274,(int)273,(int)270,(int)263,(int)275,(int)262,(int)276,(int)275,(int)262,(int)264,(int)277,(int)265,(int)278,(int)15,(int)264,(int)266,(int)279,(int)267,(int)272,(int)278,(int)276,(int)280,(int)281,(int)276,(int)277,(int)282,(int)278,(int)283,(int)15,(int)277,(int)279,(int)284,(int)278,(int)272,(int)285,(int)272,(int)271,(int)286,(int)271,(int)273,(int)287,(int)274,(int)288,(int)287,(int)274,(int)275,(int)281,(int)287,(int)3,(int)0,(int)288,(int)5,(int)3,(int)281,(int)7,(int)5,(int)280,(int)9,(int)7,(int)282,(int)11,(int)9,(int)283,(int)13,(int)15,(int)282,(int)284,(int)16,(int)285,(int)18,(int)13,(int)286,(int)0,(int)18,(int)0,(int)2,(int)18,(int)0,(int)4,(int)1,(int)3,(int)6,(int)4,(int)5,(int)8,(int)6,(int)7,(int)10,(int)8,(int)9,(int)12,(int)10,(int)11,(int)17,(int)12,(int)13,(int)2,(int)14,(int)14,(int)19,(int)26,(int)2,(int)20,(int)19,(int)1,(int)21,(int)20,(int)4,(int)22,(int)21,(int)6,(int)23,(int)22,(int)8,(int)24,(int)23,(int)10,(int)25,(int)24,(int)17,(int)25,(int)12,(int)22,(int)28,(int)36,(int)24,(int)28,(int)23,(int)24,(int)30,(int)29,(int)25,(int)32,(int)30,(int)26,(int)33,(int)31,(int)19,(int)34,(int)33,(int)20,(int)35,(int)34,(int)21,(int)36,(int)35,(int)33,(int)37,(int)45,(int)34,(int)38,(int)37,(int)35,(int)39,(int)38,(int)36,(int)40,(int)39,(int)28,(int)41,(int)40,(int)30,(int)41,(int)29,(int)30,(int)44,(int)42,(int)31,(int)45,(int)43,(int)40,(int)46,(int)54,(int)42,(int)46,(int)41,(int)42,(int)49,(int)47,(int)43,(int)50,(int)48,(int)45,(int)51,(int)50,(int)37,(int)52,(int)51,(int)39,(int)52,(int)38,(int)39,(int)54,(int)53,(int)50,(int)55,(int)63,(int)51,(int)56,(int)55,(int)53,(int)56,(int)52,(int)53,(int)58,(int)57,(int)46,(int)58,(int)54,(int)46,(int)60,(int)59,(int)47,(int)62,(int)60,(int)48,(int)63,(int)61,(int)59,(int)65,(int)58,(int)59,(int)66,(int)64,(int)60,(int)68,(int)66,(int)61,(int)69,(int)67,(int)63,(int)70,(int)69,(int)56,(int)70,(int)55,(int)56,(int)72,(int)71,(int)57,(int)65,(int)72,(int)70,(int)73,(int)81,(int)71,(int)74,(int)73,(int)72,(int)75,(int)74,(int)64,(int)75,(int)65,(int)64,(int)77,(int)76,(int)68,(int)77,(int)66,(int)67,(int)80,(int)78,(int)69,(int)81,(int)80,(int)76,(int)82,(int)90,(int)77,(int)84,(int)82,(int)80,(int)83,(int)78,(int)80,(int)86,(int)85,(int)81,(int)87,(int)86,(int)74,(int)87,(int)73,(int)74,(int)89,(int)88,(int)76,(int)89,(int)75,(int)87,(int)91,(int)99,(int)88,(int)92,(int)91,(int)90,(int)92,(int)89,(int)90,(int)94,(int)93,(int)82,(int)96,(int)94,(int)83,(int)97,(int)95,(int)86,(int)97,(int)85,(int)86,(int)99,(int)98,(int)96,(int)102,(int)94,(int)95,(int)103,(int)100,(int)97,(int)104,(int)103,(int)98,(int)105,(int)104,(int)91,(int)105,(int)99,(int)91,(int)107,(int)106,(int)93,(int)107,(int)92,(int)93,(int)102,(int)108,(int)105,(int)109,(int)117,(int)106,(int)110,(int)109,(int)108,(int)110,(int)107,(int)108,(int)112,(int)111,(int)102,(int)114,(int)112,(int)100,(int)115,(int)113,(int)103,(int)116,(int)115,(int)104,(int)117,(int)116,(int)114,(int)119,(int)112,(int)113,(int)120,(int)126,(int)115,(int)121,(int)120,(int)117,(int)121,(int)116,(int)109,(int)122,(int)117,(int)109,(int)124,(int)123,(int)111,(int)124,(int)110,(int)111,(int)119,(int)125,(int)123,(int)127,(int)135,(int)125,(int)127,(int)124,(int)125,(int)129,(int)128,(int)119,(int)131,(int)129,(int)126,(int)132,(int)130,(int)121,(int)132,(int)120,(int)121,(int)134,(int)133,(int)122,(int)135,(int)134,(int)130,(int)136,(int)143,(int)132,(int)137,(int)136,(int)133,(int)138,(int)137,(int)134,(int)139,(int)138,(int)135,(int)140,(int)139,(int)128,(int)140,(int)127,(int)128,(int)142,(int)141,(int)129,(int)144,(int)142,(int)139,(int)145,(int)153,(int)141,(int)145,(int)140,(int)141,(int)147,(int)146,(int)142,(int)149,(int)147,(int)143,(int)150,(int)148,(int)137,(int)150,(int)136,(int)138,(int)151,(int)137,(int)138,(int)153,(int)152,(int)150,(int)154,(int)162,(int)152,(int)154,(int)151,(int)153,(int)155,(int)152,(int)153,(int)157,(int)156,(int)146,(int)157,(int)145,(int)146,(int)159,(int)158,(int)147,(int)161,(int)159,(int)148,(int)162,(int)160,(int)158,(int)164,(int)157,(int)158,(int)165,(int)163,(int)161,(int)165,(int)159,(int)160,(int)168,(int)166,(int)162,(int)169,(int)168,(int)155,(int)169,(int)154,(int)156,(int)170,(int)155,(int)156,(int)164,(int)171,(int)169,(int)172,(int)180,(int)171,(int)172,(int)170,(int)171,(int)174,(int)173,(int)163,(int)174,(int)164,(int)163,(int)176,(int)175,(int)165,(int)178,(int)176,(int)166,(int)179,(int)177,(int)168,(int)180,(int)179,(int)176,(int)182,(int)175,(int)176,(int)184,(int)181,(int)177,(int)185,(int)183,(int)179,(int)186,(int)185,(int)172,(int)186,(int)180,(int)173,(int)187,(int)172,(int)173,(int)189,(int)188,(int)175,(int)189,(int)174,(int)187,(int)191,(int)186,(int)188,(int)190,(int)187,(int)188,(int)193,(int)192,(int)182,(int)193,(int)189,(int)182,(int)195,(int)194,(int)181,(int)197,(int)195,(int)183,(int)198,(int)196,(int)185,(int)191,(int)198,(int)194,(int)199,(int)207,(int)195,(int)201,(int)199,(int)196,(int)202,(int)200,(int)198,(int)203,(int)202,(int)190,(int)203,(int)191,(int)192,(int)204,(int)190,(int)192,(int)206,(int)205,(int)194,(int)206,(int)193,(int)205,(int)209,(int)204,(int)205,(int)210,(int)208,(int)207,(int)210,(int)206,(int)207,(int)212,(int)211,(int)199,(int)214,(int)212,(int)202,(int)213,(int)200,(int)202,(int)216,(int)215,(int)204,(int)216,(int)203,(int)214,(int)219,(int)212,(int)215,(int)217,(int)213,(int)215,(int)221,(int)220,(int)209,(int)221,(int)216,(int)209,(int)223,(int)222,(int)208,(int)224,(int)223,(int)211,(int)224,(int)210,(int)211,(int)219,(int)225,(int)223,(int)227,(int)222,(int)223,(int)228,(int)226,(int)225,(int)228,(int)224,(int)225,(int)230,(int)229,(int)218,(int)230,(int)219,(int)220,(int)231,(int)217,(int)220,(int)234,(int)233,(int)222,(int)234,(int)221,(int)230,(int)235,(int)242,(int)231,(int)236,(int)243,(int)233,(int)237,(int)236,(int)227,(int)237,(int)234,(int)227,(int)239,(int)238,(int)226,(int)240,(int)239,(int)229,(int)240,(int)228,(int)229,(int)242,(int)241,(int)239,(int)244,(int)252,(int)241,(int)244,(int)240,(int)241,(int)246,(int)245,(int)235,(int)246,(int)242,(int)243,(int)249,(int)247,(int)237,(int)249,(int)236,(int)238,(int)250,(int)237,(int)239,(int)251,(int)238,(int)249,(int)253,(int)261,(int)250,(int)254,(int)253,(int)252,(int)254,(int)251,(int)252,(int)256,(int)255,(int)245,(int)256,(int)244,(int)245,(int)258,(int)257,(int)248,(int)258,(int)246,(int)247,(int)261,(int)259,(int)257,(int)263,(int)256,(int)258,(int)262,(int)257,(int)258,(int)266,(int)264,(int)259,(int)267,(int)265,(int)261,(int)268,(int)267,(int)253,(int)269,(int)268,(int)255,(int)269,(int)254,(int)255,(int)263,(int)270,(int)268,(int)272,(int)267,(int)269,(int)271,(int)268,(int)270,(int)273,(int)269,(int)270,(int)275,(int)274,(int)262,(int)275,(int)263,(int)262,(int)277,(int)276,(int)264,(int)279,(int)277,(int)267,(int)278,(int)265,(int)276,(int)281,(int)275,(int)276,(int)282,(int)280,(int)277,(int)284,(int)282,(int)278,(int)285,(int)283,(int)272,(int)286,(int)285,(int)271,(int)287,(int)286,(int)274,(int)287,(int)273,(int)274,(int)281,(int)288,(int)287,(int)0,(int)286,(int)288,(int)3,(int)287,(int)281,(int)5,(int)288,(int)280,(int)7,(int)281,(int)282,(int)9,(int)280,(int)282,(int)16,(int)11,(int)285,(int)13,(int)283,(int)286,(int)18,(int)285,(int)84,(int)289,(int)96,(int)96,(int)289,(int)101,(int)101,(int)289,(int)114,(int)114,(int)289,(int)118,(int)118,(int)289,(int)131,(int)144,(int)131,(int)289,(int)149,(int)144,(int)289,(int)149,(int)289,(int)161,(int)161,(int)289,(int)167,(int)167,(int)289,(int)178,(int)178,(int)289,(int)184,(int)184,(int)289,(int)197,(int)197,(int)289,(int)201,(int)201,(int)289,(int)214,(int)214,(int)289,(int)218,(int)218,(int)289,(int)232,(int)232,(int)289,(int)235,(int)235,(int)289,(int)248,(int)260,(int)248,(int)289,(int)260,(int)289,(int)266,(int)266,(int)289,(int)279,(int)279,(int)289,(int)284,(int)284,(int)289,(int)16,(int)16,(int)289,(int)17,(int)27,(int)17,(int)289,(int)27,(int)289,(int)32,(int)44,(int)32,(int)289,(int)44,(int)289,(int)49,(int)49,(int)289,(int)62,(int)62,(int)289,(int)68,(int)68,(int)289,(int)79,(int)79,(int)289,(int)84,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_182_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",182,0x0a76184f)
static const Float _hx_array_data_df915e2f_39[] = {
	-0.55557,0.0,0.83147,-0.544895,0.108386,0.83147,-0.37533,0.074658,0.92388,-0.707107,0.0,0.707107,-0.69352,0.13795,0.707107,-0.83147,0.0,0.55557,-0.815493,0.162212,0.55557,-0.92388,0.0,0.382683,-0.906127,0.18024,0.382683,-0.980785,0.0,0.19509,-0.96194,0.191342,0.19509,-1.0,0.0,0.0,-0.980785,0.19509,0.0,-0.19509,0.0,0.980785,-0.191342,0.03806,0.980785,0.0,0.0,1.,-0.980785,0.0,-0.28234,-0.96194,0.191342,-0.28234,-0.382683,0.0,0.92388,-0.353553,0.146447,0.92388,-0.51328,0.212608,0.83147,-0.653281,0.270598,0.707107,-0.768178,0.31819,0.55557,-0.853553,0.353553,0.382683,-0.906127,0.37533,0.19509,-0.923879,0.382684,0.0,-0.18024,0.074658,0.980785,-0.906127,0.37533,-0.28234,-0.768178,0.51328,0.382683,-0.815493,0.544895,0.19509,-0.831469,0.55557,0.0,-0.162212,0.108387,0.980785,-0.815493,0.544895,-0.28234,-0.31819,0.212608,0.92388,-0.46194,0.308658,0.83147,-0.587938,0.392848,0.707107,-0.691342,0.46194,0.55557,-0.392847,0.392848,0.83147,-0.5,0.5,0.707107,-0.587938,0.587938,0.55557,-0.653281,0.653282,0.382683,-0.69352,0.69352,0.19509,-0.707107,0.707107,0.0,-0.13795,0.13795,0.980785,-0.69352,0.69352,-0.28234,-0.270598,0.270598,0.92388,-0.544895,0.815493,0.19509,-0.55557,0.83147,0.0,-0.108386,0.162212,0.980785,-0.544895,0.815493,-0.28234,-0.212607,0.31819,0.92388,-0.308658,0.46194,0.83147,-0.392847,0.587938,0.707107,-0.46194,0.691342,0.55557,-0.51328,0.768178,0.382683,-0.212607,0.51328,0.83147,-0.270598,0.653282,0.707107,-0.318189,0.768178,0.55557,-0.353553,0.853554,0.382683,-0.37533,0.906128,0.19509,-0.382683,0.92388,0.0,-0.074658,0.18024,0.980785,-0.37533,0.906128,-0.28234,-0.146446,0.353554,0.92388,-0.191341,0.96194,0.19509,-0.18024,0.906128,0.382683,-0.19509,0.980785,0.0,-0.03806,0.191342,0.980785,-0.191341,0.96194,-0.28234,-0.074658,0.375331,0.92388,-0.108386,0.544895,0.83147,-0.137949,0.69352,0.707107,-0.162211,0.815493,0.55557,0.0,0.707107,0.707107,0.0,0.83147,0.55557,0.0,0.92388,0.382683,0.0,0.980785,0.19509,0.0,1.,0.0,0.0,0.195091,0.980785,0.0,0.980785,-0.28234,0.0,0.382684,0.92388,0.0,0.55557,0.83147,0.195091,0.980785,0.0,0.038061,0.191342,0.980785,0.191342,0.96194,-0.28234,0.074658,0.375331,0.92388,0.108387,0.544895,0.83147,0.13795,0.69352,0.707107,0.162212,0.815493,0.55557,0.18024,0.906128,0.382683,0.191342,0.96194,0.19509,0.31819,0.768178,0.55557,0.353554,0.853554,0.382683,0.375331,0.906127,0.19509,0.382684,0.92388,0.0,0.074658,0.18024,0.980785,0.375331,0.906127,-0.28234,0.146447,0.353554,0.92388,0.212608,0.51328,0.83147,0.270598,0.653282,0.707107,0.108387,0.162212,0.980785,0.544895,0.815493,-0.28234,0.555571,0.83147,0.0,0.212608,0.31819,0.92388,0.308659,0.46194,0.83147,0.392848,0.587938,0.707107,0.46194,0.691342,0.55557,0.51328,0.768178,0.382683,0.544895,0.815493,0.19509,0.587938,0.587938,0.55557,0.653282,0.653282,0.382683,0.69352,0.69352,0.19509,0.707107,0.707107,0.0,0.13795,0.13795,0.980785,0.69352,0.69352,-0.28234,0.270599,0.270598,0.92388,0.392848,0.392848,0.83147,0.5,0.5,0.707107,0.815493,0.544895,-0.28234,0.83147,0.55557,0.0,0.31819,0.212608,0.92388,0.46194,0.308658,0.83147,0.587938,0.392848,0.707107,0.691342,0.46194,0.55557,0.768178,0.51328,0.382683,0.815493,0.544895,0.19509,0.162212,0.108386,0.980785,0.853554,0.353553,0.382683,0.906128,0.37533,0.19509,0.92388,0.382683,0.0,0.18024,0.074658,0.980785,0.906128,0.37533,-0.28234,0.353554,0.146447,0.92388,0.51328,0.212608,0.83147,0.653282,0.270598,0.707107,0.768178,0.31819,0.55557,0.375331,0.074658,0.92388,0.544896,0.108386,0.83147,0.69352,0.13795,0.707107,0.815493,0.162212,0.55557,0.906128,0.18024,0.382683,0.96194,0.191342,0.19509,0.980786,0.19509,0.0,0.191342,0.03806,0.980785,0.96194,0.191342,-0.28234,0.92388,0.0,0.382683,0.980785,0.0,0.19509,1.,0.0,0.0,0.195091,0.0,0.980785,0.980785,0.0,-0.28234,0.382684,0.0,0.92388,0.555571,0.0,0.83147,0.707107,0.0,0.707107,0.83147,0.0,0.55557,0.544896,-0.108386,0.83147,0.69352,-0.13795,0.707107,0.815493,-0.162212,0.55557,0.906128,-0.18024,0.382683,0.96194,-0.191342,0.19509,0.980786,-0.19509,0.0,0.191342,-0.03806,0.980785,0.96194,-0.191342,-0.28234,0.375331,-0.074658,0.92388,0.906127,-0.37533,0.19509,0.853554,-0.353553,0.382683,0.92388,-0.382684,0.0,0.18024,-0.074658,0.980785,0.906127,-0.37533,-0.28234,0.353554,-0.146447,0.92388,0.51328,-0.212608,0.83147,0.653282,-0.270598,0.707107,0.768178,-0.31819,0.55557,0.587938,-0.392847,0.707107,0.691342,-0.46194,0.55557,0.768178,-0.51328,0.382683,0.815493,-0.544895,0.19509,0.83147,-0.55557,0.0,0.162212,-0.108386,0.980785,0.815493,-0.544895,-0.28234,0.31819,-0.212608,0.92388,0.46194,-0.308658,0.83147,0.707107,-0.707107,0.0,0.69352,-0.69352,0.19509,0.13795,-0.13795,0.980785,0.69352,-0.69352,-0.28234,0.270598,-0.270598,0.92388,0.392848,-0.392848,0.83147,0.5,-0.5,0.707107,0.587938,-0.587938,0.55557,0.653282,-0.653281,0.382683,0.392848,-0.587938,0.707107,0.308659,-0.46194,0.83147,0.46194,-0.691342,0.55557,0.51328,-0.768178,0.382683,0.544895,-0.815493,0.19509,0.55557,-0.83147,0.0,0.108387,-0.162212,0.980785,0.544895,-0.815493,-0.28234,0.212608,-0.31819,0.92388,0.382684,-0.92388,0.0,0.074658,-0.18024,0.980785,0.37533,-0.906127,-0.28234,0.146447,-0.353553,0.92388,0.212608,-0.51328,0.83147,0.270598,-0.653281,0.707107,0.31819,-0.768177,0.55557,0.353554,-0.853553,0.382683,0.37533,-0.906127,0.19509,0.162212,-0.815493,0.55557,0.13795,-0.69352,0.707107,0.18024,-0.906127,0.382683,0.191342,-0.961939,0.19509,0.19509,-0.980785,0.0,0.038061,-0.191342,0.980785,0.191342,-0.961939,-0.28234,0.074658,-0.37533,0.92388,0.108387,-0.544895,0.83147,0.0,-0.19509,0.980785,0.0,-0.980785,-0.28234,0.0,-1.0,0.0,0.0,-0.382683,0.92388,0.0,-0.55557,0.83147,0.0,-0.707107,0.707107,0.0,-0.831469,0.55557,0.0,-0.923879,0.382683,0.0,-0.980785,0.19509,-0.162211,-0.815493,0.55557,-0.137949,-0.69352,0.707107,-0.18024,-0.906127,0.382683,-0.191342,-0.961939,0.19509,-0.19509,-0.980785,0.0,-0.03806,-0.191342,0.980785,-0.191342,-0.961939,-0.28234,-0.074658,-0.37533,0.92388,-0.108386,-0.544895,0.83147,-0.37533,-0.906127,-0.28234,-0.146446,-0.353553,0.92388,-0.212607,-0.51328,0.83147,-0.270598,-0.653281,0.707107,-0.318189,-0.768177,0.55557,-0.353553,-0.853553,0.382683,-0.37533,-0.906127,0.19509,-0.382683,-0.923879,0.0,-0.074658,-0.18024,0.980785,-0.51328,-0.768178,0.382683,-0.544895,-0.815493,0.19509,-0.55557,-0.831469,0.0,-0.108386,-0.162212,0.980785,-0.544895,-0.815493,-0.28234,-0.212607,-0.31819,0.92388,-0.308658,-0.46194,0.83147,-0.392847,-0.587938,0.707107,-0.461939,-0.691341,0.55557,-0.392847,-0.392847,0.83147,-0.5,-0.5,0.707107,-0.587937,-0.587937,0.55557,-0.653281,-0.653281,0.382683,-0.693519,-0.693519,0.19509,-0.707106,-0.707106,0.0,-0.137949,-0.13795,0.980785,-0.693519,-0.693519,-0.28234,-0.270598,-0.270598,0.92388,-0.815492,-0.544895,0.19509,-0.768177,-0.51328,0.382683,-0.831469,-0.55557,0.0,-0.162211,-0.108386,0.980785,-0.815492,-0.544895,-0.28234,-0.318189,-0.212607,0.92388,-0.461939,-0.308658,0.83147,-0.587937,-0.392847,0.707107,-0.691341,-0.461939,0.55557,-0.51328,-0.212607,0.83147,-0.353553,-0.146447,0.92388,-0.653281,-0.270598,0.707107,-0.768177,-0.318189,0.55557,-0.853553,-0.353553,0.382683,-0.906127,-0.37533,0.19509,-0.923879,-0.382683,0.0,-0.18024,-0.074658,0.980785,-0.906127,-0.37533,-0.28234,-0.961939,-0.191341,0.19509,-0.906127,-0.18024,0.382683,-0.980785,-0.19509,0.0,-0.191342,-0.03806,0.980785,-0.961939,-0.191341,-0.28234,-0.37533,-0.074658,0.92388,-0.544895,-0.108386,0.83147,-0.69352,-0.13795,0.707107,-0.815492,-0.162211,0.55557,0.0,0.0,-0.860043,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_183_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",183,0x0a76184f)
static const Float _hx_array_data_df915e2f_41[] = {
	0.559771,0.0,-0.828639,0.548997,-0.109195,-0.828639,0.380413,-0.075655,-0.92169,0.710135,0.0,-0.704031,0.696493,-0.138524,-0.704031,0.833338,0.0,-0.552751,0.817316,-0.162572,-0.552751,0.924741,0.0,-0.380535,0.90698,-0.180395,-0.380535,0.980987,0.0,-0.193915,0.962157,-0.191382,-0.193915,0.999878,0.0,-0.015015,0.980651,-0.195044,-0.015015,0.200964,0.0,-0.979583,0.197089,-0.039186,-0.979583,0.0,0.0,-1.0,0.858486,0.0,0.512803,0.841975,-0.167455,0.512803,0.38786,0.0,-0.92169,0.358348,-0.148412,-0.92169,0.517136,-0.214209,-0.828639,0.656056,-0.271737,-0.704031,0.76989,-0.318888,-0.552751,0.854366,-0.353862,-0.380535,0.906339,-0.375408,-0.193915,0.923765,-0.382611,-0.015015,0.185644,-0.076907,-0.979583,0.793146,-0.328532,0.512803,0.768914,-0.513749,-0.380535,0.815668,-0.545,-0.193915,0.831355,-0.555498,-0.015015,0.167089,-0.111637,-0.979583,0.713797,-0.476943,0.512803,0.322489,-0.215491,-0.92169,0.465407,-0.310984,-0.828639,0.590442,-0.394513,-0.704031,0.692892,-0.462966,-0.552751,0.395795,-0.395795,-0.828639,0.502121,-0.502121,-0.704031,0.589251,-0.589251,-0.552751,0.65389,-0.65389,-0.380535,0.693655,-0.693655,-0.193915,0.707022,-0.707022,-0.015015,0.142094,-0.142094,-0.979583,0.607044,-0.607044,0.512803,0.27427,-0.27427,-0.92169,0.545,-0.815668,-0.193915,0.555498,-0.831355,-0.015015,0.111637,-0.167089,-0.979583,0.476943,-0.713797,0.512803,0.215491,-0.322489,-0.92169,0.310984,-0.465407,-0.828639,0.394513,-0.590442,-0.704031,0.462966,-0.692892,-0.552751,0.513749,-0.768914,-0.380535,0.214209,-0.517136,-0.828639,0.271737,-0.656056,-0.704031,0.318888,-0.76989,-0.552751,0.353862,-0.854366,-0.380535,0.375408,-0.906339,-0.193915,0.382611,-0.923765,-0.015015,0.076907,-0.185644,-0.979583,0.328532,-0.793146,0.512803,0.148412,-0.358348,-0.92169,0.191382,-0.962157,-0.193915,0.180395,-0.90698,-0.380535,0.195044,-0.980651,-0.015015,0.039186,-0.197089,-0.979583,0.167455,-0.841975,0.512803,0.075655,-0.380413,-0.92169,0.109195,-0.548997,-0.828639,0.138524,-0.696493,-0.704031,0.162572,-0.817316,-0.552751,0.0,-0.710135,-0.704031,0.0,-0.833338,-0.552751,0.0,-0.924741,-0.380535,0.0,-0.980987,-0.193915,0.0,-0.999878,-0.015015,0.0,-0.200964,-0.979583,0.0,-0.858486,0.512803,0.0,-0.38786,-0.92169,0.0,-0.559771,-0.828639,-0.195044,-0.980651,-0.015015,-0.039186,-0.197089,-0.979583,-0.167455,-0.841975,0.512803,-0.075655,-0.380413,-0.92169,-0.109195,-0.548997,-0.828639,-0.138524,-0.696493,-0.704031,-0.162572,-0.817316,-0.552751,-0.180395,-0.90698,-0.380535,-0.191382,-0.962157,-0.193915,-0.318888,-0.76989,-0.552751,-0.353862,-0.854366,-0.380535,-0.375408,-0.906339,-0.193915,-0.382611,-0.923765,-0.015015,-0.076907,-0.185644,-0.979583,-0.328532,-0.793146,0.512803,-0.148412,-0.358348,-0.92169,-0.214209,-0.517136,-0.828639,-0.271737,-0.656056,-0.704031,-0.111637,-0.167089,-0.979583,-0.476943,-0.713797,0.512803,-0.555498,-0.831355,-0.015015,-0.215491,-0.322489,-0.92169,-0.310984,-0.465407,-0.828639,-0.394513,-0.590442,-0.704031,-0.462966,-0.692892,-0.552751,-0.513749,-0.768914,-0.380535,-0.545,-0.815668,-0.193915,-0.589251,-0.589251,-0.552751,-0.65389,-0.65389,-0.380535,-0.693655,-0.693655,-0.193915,-0.707022,-0.707022,-0.015015,-0.142094,-0.142094,-0.979583,-0.607044,-0.607044,0.512803,-0.27427,-0.27427,-0.92169,-0.395795,-0.395795,-0.828639,-0.502121,-0.502121,-0.704031,-0.713797,-0.476943,0.512803,-0.831355,-0.555498,-0.015015,-0.322489,-0.215491,-0.92169,-0.465407,-0.310984,-0.828639,-0.590442,-0.394513,-0.704031,-0.692892,-0.462966,-0.552751,-0.768914,-0.513749,-0.380535,-0.815668,-0.545,-0.193915,-0.167089,-0.111637,-0.979583,-0.854366,-0.353862,-0.380535,-0.906339,-0.375408,-0.193915,-0.923765,-0.382611,-0.015015,-0.185644,-0.076907,-0.979583,-0.793146,-0.328532,0.512803,-0.358348,-0.148412,-0.92169,-0.517136,-0.214209,-0.828639,-0.656056,-0.271737,-0.704031,-0.76989,-0.318888,-0.552751,-0.380413,-0.075655,-0.92169,-0.548997,-0.109195,-0.828639,-0.696493,-0.138524,-0.704031,-0.817316,-0.162572,-0.552751,-0.90698,-0.180395,-0.380535,-0.962157,-0.191382,-0.193915,-0.980651,-0.195044,-0.015015,-0.197089,-0.039186,-0.979583,-0.841975,-0.167455,0.512803,-0.924741,0.0,-0.380535,-0.980987,0.0,-0.193915,-0.999878,0.0,-0.015015,-0.200964,0.0,-0.979583,-0.858486,0.0,0.512803,-0.38786,0.0,-0.92169,-0.559771,0.0,-0.828639,-0.710135,0.0,-0.704031,-0.833338,0.0,-0.552751,-0.548997,0.109195,-0.828639,-0.696493,0.138524,-0.704031,-0.817316,0.162572,-0.552751,-0.90698,0.180395,-0.380535,-0.962157,0.191382,-0.193915,-0.980651,0.195044,-0.015015,-0.197089,0.039186,-0.979583,-0.841975,0.167455,0.512803,-0.380413,0.075655,-0.92169,-0.906339,0.375408,-0.193915,-0.854366,0.353862,-0.380535,-0.923765,0.382611,-0.015015,-0.185644,0.076907,-0.979583,-0.793146,0.328532,0.512803,-0.358348,0.148412,-0.92169,-0.517136,0.214209,-0.828639,-0.656056,0.271737,-0.704031,-0.76989,0.318888,-0.552751,-0.590442,0.394513,-0.704031,-0.692892,0.462966,-0.552751,-0.768914,0.513749,-0.380535,-0.815668,0.545,-0.193915,-0.831355,0.555498,-0.015015,-0.167089,0.111637,-0.979583,-0.713797,0.476943,0.512803,-0.322489,0.215491,-0.92169,-0.465407,0.310984,-0.828639,-0.707022,0.707022,-0.015015,-0.693655,0.693655,-0.193915,-0.142094,0.142094,-0.979583,-0.607044,0.607044,0.512803,-0.27427,0.27427,-0.92169,-0.395795,0.395795,-0.828639,-0.502121,0.502121,-0.704031,-0.589251,0.589251,-0.552751,-0.65389,0.65389,-0.380535,-0.394513,0.590442,-0.704031,-0.310984,0.465407,-0.828639,-0.462966,0.692892,-0.552751,-0.513749,0.768914,-0.380535,-0.545,0.815668,-0.193915,-0.555498,0.831355,-0.015015,-0.111637,0.167089,-0.979583,-0.476943,0.713797,0.512803,-0.215491,0.322489,-0.92169,-0.382611,0.923765,-0.015015,-0.076907,0.185644,-0.979583,-0.328532,0.793146,0.512803,-0.148412,0.358348,-0.92169,-0.214209,0.517136,-0.828639,-0.271737,0.656056,-0.704031,-0.318888,0.76989,-0.552751,-0.353862,0.854366,-0.380535,-0.375408,0.906339,-0.193915,-0.162572,0.817316,-0.552751,-0.138524,0.696493,-0.704031,-0.180395,0.90698,-0.380535,-0.191382,0.962157,-0.193915,-0.195044,0.980651,-0.015015,-0.039186,0.197089,-0.979583,-0.167455,0.841975,0.512803,-0.075655,0.380413,-0.92169,-0.109195,0.548997,-0.828639,0.0,0.200964,-0.979583,0.0,0.858486,0.512803,0.0,0.999878,-0.015015,0.0,0.38786,-0.92169,0.0,0.559771,-0.828639,0.0,0.710135,-0.704031,0.0,0.833338,-0.552751,0.0,0.924741,-0.380535,0.0,0.980987,-0.193915,0.162572,0.817316,-0.552751,0.138524,0.696493,-0.704031,0.180395,0.90698,-0.380535,0.191382,0.962157,-0.193915,0.195044,0.980651,-0.015015,0.039186,0.197089,-0.979583,0.167455,0.841975,0.512803,0.075655,0.380413,-0.92169,0.109195,0.548997,-0.828639,0.328532,0.793146,0.512803,0.148412,0.358348,-0.92169,0.214209,0.517136,-0.828639,0.271737,0.656056,-0.704031,0.318888,0.76989,-0.552751,0.353862,0.854366,-0.380535,0.375408,0.906339,-0.193915,0.382611,0.923765,-0.015015,0.076907,0.185644,-0.979583,0.513749,0.768914,-0.380535,0.545,0.815668,-0.193915,0.555498,0.831355,-0.015015,0.111637,0.167089,-0.979583,0.476943,0.713797,0.512803,0.215491,0.322489,-0.92169,0.310984,0.465407,-0.828639,0.394513,0.590442,-0.704031,0.462966,0.692892,-0.552751,0.395795,0.395795,-0.828639,0.502121,0.502121,-0.704031,0.589251,0.589251,-0.552751,0.65389,0.65389,-0.380535,0.693655,0.693655,-0.193915,0.707022,0.707022,-0.015015,0.142094,0.142094,-0.979583,0.607044,0.607044,0.512803,0.27427,0.27427,-0.92169,0.815668,0.545,-0.193915,0.768914,0.513749,-0.380535,0.831355,0.555498,-0.015015,0.167089,0.111637,-0.979583,0.713797,0.476943,0.512803,0.322489,0.215491,-0.92169,0.465407,0.310984,-0.828639,0.590442,0.394513,-0.704031,0.692892,0.462966,-0.552751,0.517136,0.214209,-0.828639,0.358348,0.148412,-0.92169,0.656056,0.271737,-0.704031,0.76989,0.318888,-0.552751,0.854366,0.353862,-0.380535,0.906339,0.375408,-0.193915,0.923765,0.382611,-0.015015,0.185644,0.076907,-0.979583,0.793146,0.328532,0.512803,0.962157,0.191382,-0.193915,0.90698,0.180395,-0.380535,0.980651,0.195044,-0.015015,0.197089,0.039186,-0.979583,0.841975,0.167486,0.512803,0.380413,0.075655,-0.92169,0.548997,0.109195,-0.828639,0.696493,0.138524,-0.704031,0.817316,0.162572,-0.552751,0.0,0.0,0.999969,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_185_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",185,0x0a76184f)
static const int _hx_array_data_df915e2f_43[] = {
	(int)0,(int)1,(int)2,(int)0,(int)2,(int)3,(int)4,(int)5,(int)6,(int)4,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,(int)15,(int)16,(int)14,(int)16,(int)17,(int)18,(int)19,(int)20,(int)18,(int)20,(int)21,(int)22,(int)23,(int)24,(int)22,(int)24,(int)25,(int)26,(int)27,(int)28,(int)26,(int)28,(int)29,(int)30,(int)31,(int)32,(int)33,(int)34,(int)35,(int)33,(int)35,(int)36,(int)37,(int)38,(int)39,(int)37,(int)39,(int)40,(int)41,(int)42,(int)43,(int)41,(int)43,(int)44,(int)45,(int)46,(int)47,(int)45,(int)47,(int)48,(int)49,(int)50,(int)51,(int)49,(int)51,(int)52,(int)53,(int)54,(int)55,(int)53,(int)55,(int)56,(int)57,(int)58,(int)59,(int)60,(int)61,(int)62,(int)60,(int)62,(int)63,(int)64,(int)65,(int)66,(int)64,(int)66,(int)67,(int)68,(int)69,(int)70,(int)68,(int)70,(int)71,(int)72,(int)73,(int)74,(int)72,(int)74,(int)75,(int)76,(int)77,(int)78,(int)79,(int)80,(int)81,(int)82,(int)83,(int)84,(int)82,(int)84,(int)85,(int)86,(int)87,(int)88,(int)86,(int)88,(int)89,(int)90,(int)91,(int)92,(int)90,(int)92,(int)93,(int)94,(int)95,(int)96,(int)94,(int)96,(int)97,(int)98,(int)99,(int)100,(int)98,(int)100,(int)101,(int)102,(int)103,(int)104,(int)105,(int)106,(int)107,(int)108,(int)109,(int)110,(int)108,(int)110,(int)111,(int)112,(int)113,(int)114,(int)112,(int)114,(int)115,(int)116,(int)117,(int)118,(int)116,(int)118,(int)119,(int)120,(int)121,(int)122,(int)123,(int)124,(int)125,(int)126,(int)127,(int)128,(int)126,(int)128,(int)129,(int)130,(int)131,(int)132,(int)130,(int)132,(int)133,(int)134,(int)135,(int)136,(int)134,(int)136,(int)137,(int)138,(int)139,(int)140,(int)138,(int)140,(int)141,(int)142,(int)143,(int)144,(int)142,(int)144,(int)145,(int)146,(int)147,(int)148,(int)146,(int)148,(int)149,(int)150,(int)151,(int)152,(int)150,(int)152,(int)153,(int)154,(int)155,(int)156,(int)154,(int)156,(int)157,(int)158,(int)159,(int)160,(int)158,(int)160,(int)161,(int)162,(int)163,(int)164,(int)162,(int)164,(int)165,(int)166,(int)167,(int)168,(int)166,(int)168,(int)169,(int)170,(int)171,(int)172,(int)170,(int)172,(int)173,(int)174,(int)175,(int)176,(int)177,(int)178,(int)179,(int)180,(int)181,(int)182,(int)180,(int)182,(int)183,(int)184,(int)185,(int)186,(int)184,(int)186,(int)187,(int)188,(int)189,(int)190,(int)188,(int)190,(int)191,(int)192,(int)193,(int)194,(int)195,(int)196,(int)197,(int)198,(int)199,(int)200,(int)198,(int)200,(int)201,(int)202,(int)203,(int)204,(int)202,(int)204,(int)205,(int)206,(int)207,(int)208,(int)206,(int)208,(int)209,(int)210,(int)211,(int)212,(int)210,(int)212,(int)213,(int)214,(int)215,(int)216,(int)214,(int)216,(int)217,(int)218,(int)219,(int)220,(int)221,(int)222,(int)223,(int)224,(int)225,(int)226,(int)224,(int)226,(int)227,(int)228,(int)229,(int)230,(int)228,(int)230,(int)231,(int)232,(int)233,(int)234,(int)232,(int)234,(int)235,(int)236,(int)237,(int)238,(int)236,(int)238,(int)239,(int)240,(int)241,(int)242,(int)243,(int)244,(int)245,(int)243,(int)245,(int)246,(int)247,(int)248,(int)249,(int)247,(int)249,(int)250,(int)251,(int)252,(int)253,(int)251,(int)253,(int)254,(int)255,(int)256,(int)257,(int)255,(int)257,(int)258,(int)259,(int)260,(int)261,(int)259,(int)261,(int)262,(int)263,(int)264,(int)265,(int)263,(int)265,(int)266,(int)267,(int)268,(int)269,(int)270,(int)271,(int)272,(int)270,(int)272,(int)273,(int)274,(int)275,(int)276,(int)274,(int)276,(int)277,(int)278,(int)279,(int)280,(int)278,(int)280,(int)281,(int)282,(int)283,(int)284,(int)282,(int)284,(int)285,(int)286,(int)287,(int)288,(int)286,(int)288,(int)289,(int)290,(int)291,(int)292,(int)293,(int)294,(int)295,(int)296,(int)297,(int)298,(int)296,(int)298,(int)299,(int)300,(int)301,(int)302,(int)300,(int)302,(int)303,(int)304,(int)305,(int)306,(int)304,(int)306,(int)307,(int)308,(int)309,(int)310,(int)308,(int)310,(int)311,(int)312,(int)313,(int)314,(int)315,(int)316,(int)317,(int)318,(int)319,(int)320,(int)318,(int)320,(int)321,(int)322,(int)323,(int)324,(int)322,(int)324,(int)325,(int)326,(int)327,(int)328,(int)326,(int)328,(int)329,(int)330,(int)331,(int)332,(int)330,(int)332,(int)333,(int)334,(int)335,(int)336,(int)337,(int)338,(int)339,(int)340,(int)341,(int)342,(int)340,(int)342,(int)343,(int)344,(int)345,(int)346,(int)344,(int)346,(int)347,(int)348,(int)349,(int)350,(int)348,(int)350,(int)351,(int)352,(int)353,(int)354,(int)352,(int)354,(int)355,(int)356,(int)357,(int)358,(int)356,(int)358,(int)359,(int)360,(int)361,(int)362,(int)363,(int)364,(int)365,(int)363,(int)365,(int)366,(int)367,(int)368,(int)369,(int)367,(int)369,(int)370,(int)371,(int)372,(int)373,(int)371,(int)373,(int)374,(int)375,(int)376,(int)377,(int)375,(int)377,(int)378,(int)379,(int)380,(int)381,(int)379,(int)381,(int)382,(int)383,(int)384,(int)385,(int)383,(int)385,(int)386,(int)387,(int)388,(int)389,(int)390,(int)391,(int)392,(int)390,(int)392,(int)393,(int)394,(int)395,(int)396,(int)394,(int)396,(int)397,(int)398,(int)399,(int)400,(int)398,(int)400,(int)401,(int)402,(int)403,(int)404,(int)402,(int)404,(int)405,(int)406,(int)407,(int)408,(int)409,(int)410,(int)411,(int)412,(int)413,(int)414,(int)412,(int)414,(int)415,(int)416,(int)417,(int)418,(int)416,(int)418,(int)419,(int)420,(int)421,(int)422,(int)420,(int)422,(int)423,(int)424,(int)425,(int)426,(int)424,(int)426,(int)427,(int)428,(int)429,(int)430,(int)428,(int)430,(int)431,(int)432,(int)433,(int)434,(int)435,(int)436,(int)437,(int)438,(int)439,(int)440,(int)438,(int)440,(int)441,(int)442,(int)443,(int)444,(int)442,(int)444,(int)445,(int)446,(int)447,(int)448,(int)446,(int)448,(int)449,(int)450,(int)451,(int)452,(int)453,(int)454,(int)455,(int)456,(int)457,(int)458,(int)456,(int)458,(int)459,(int)460,(int)461,(int)462,(int)460,(int)462,(int)463,(int)464,(int)465,(int)466,(int)464,(int)466,(int)467,(int)468,(int)469,(int)470,(int)468,(int)470,(int)471,(int)472,(int)473,(int)474,(int)472,(int)474,(int)475,(int)476,(int)477,(int)478,(int)476,(int)478,(int)479,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_186_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",186,0x0a76184f)
static const Float _hx_array_data_df915e2f_45[] = {
	0.0,0.46194,-0.191342,0.0,0.5,0.0,0.191342,0.46194,0.0,0.176777,0.426777,-0.191342,0.0,0.46194,0.191342,0.0,0.353553,0.353553,0.135299,0.326641,0.353553,0.176777,0.426777,0.191342,0.0,0.191342,0.46194,0.0,0.0,0.5,0.073223,0.176777,0.46194,0.0,0.0,-0.5,0.0,0.191342,-0.46194,0.073223,0.176777,-0.46194,0.0,0.353553,-0.353553,0.0,0.46194,-0.191342,0.176777,0.426777,-0.191342,0.135299,0.326641,-0.353553,0.0,0.5,0.0,0.0,0.46194,0.191342,0.176777,0.426777,0.191342,0.191342,0.46194,0.0,0.0,0.353553,0.353553,0.0,0.191342,0.46194,0.073223,0.176777,0.46194,0.135299,0.326641,0.353553,0.0,0.191342,-0.46194,0.0,0.353553,-0.353553,0.135299,0.326641,-0.353553,0.073223,0.176777,-0.46194,0.0,0.0,-0.5,0.073223,0.176777,-0.46194,0.135299,0.135299,-0.46194,0.135299,0.326641,-0.353553,0.176777,0.426777,-0.191342,0.326641,0.326641,-0.191342,0.25,0.25,-0.353553,0.191342,0.46194,0.0,0.176777,0.426777,0.191342,0.326641,0.326641,0.191342,0.353553,0.353553,0.0,0.135299,0.326641,0.353553,0.073223,0.176777,0.46194,0.135299,0.135299,0.46194,0.25,0.25,0.353553,0.073223,0.176777,-0.46194,0.135299,0.326641,-0.353553,0.25,0.25,-0.353553,0.135299,0.135299,-0.46194,0.176777,0.426777,-0.191342,0.191342,0.46194,0.0,0.353553,0.353553,0.0,0.326641,0.326641,-0.191342,0.176777,0.426777,0.191342,0.135299,0.326641,0.353553,0.25,0.25,0.353553,0.326641,0.326641,0.191342,0.073223,0.176777,0.46194,0.0,0.0,0.5,0.135299,0.135299,0.46194,0.25,0.25,0.353553,0.135299,0.135299,0.46194,0.176777,0.073223,0.46194,0.326641,0.135299,0.353553,0.135299,0.135299,-0.46194,0.25,0.25,-0.353553,0.326641,0.135299,-0.353553,0.176777,0.073223,-0.46194,0.326641,0.326641,-0.191342,0.353553,0.353553,0.0,0.46194,0.191342,0.0,0.426777,0.176777,-0.191342,0.326641,0.326641,0.191342,0.25,0.25,0.353553,0.326641,0.135299,0.353553,0.426777,0.176777,0.191342,0.135299,0.135299,0.46194,0.0,0.0,0.5,0.176777,0.073223,0.46194,0.0,0.0,-0.5,0.135299,0.135299,-0.46194,0.176777,0.073223,-0.46194,0.25,0.25,-0.353553,0.326641,0.326641,-0.191342,0.426777,0.176777,-0.191342,0.326641,0.135299,-0.353553,0.353553,0.353553,0.0,0.326641,0.326641,0.191342,0.426777,0.176777,0.191342,0.46194,0.191342,0.0,0.176777,0.073223,-0.46194,0.326641,0.135299,-0.353553,0.353553,0.0,-0.353553,0.191342,0.0,-0.46194,0.426777,0.176777,-0.191342,0.46194,0.191342,0.0,0.5,0.0,0.0,0.46194,0.0,-0.191342,0.426777,0.176777,0.191342,0.326641,0.135299,0.353553,0.353553,0.0,0.353553,0.46194,0.0,0.191342,0.176777,0.073223,0.46194,0.0,0.0,0.5,0.191342,0.0,0.46194,0.0,0.0,-0.5,0.176777,0.073223,-0.46194,0.191342,0.0,-0.46194,0.326641,0.135299,-0.353553,0.426777,0.176777,-0.191342,0.46194,0.0,-0.191342,0.353553,0.0,-0.353553,0.46194,0.191342,0.0,0.426777,0.176777,0.191342,0.46194,0.0,0.191342,0.5,0.0,0.0,0.326641,0.135299,0.353553,0.176777,0.073223,0.46194,0.191342,0.0,0.46194,0.353553,0.0,0.353553,0.191342,0.0,0.46194,0.0,0.0,0.5,0.176777,-0.073223,0.46194,0.0,0.0,-0.5,0.191342,0.0,-0.46194,0.176777,-0.073223,-0.46194,0.353553,0.0,-0.353553,0.46194,0.0,-0.191342,0.426777,-0.176777,-0.191342,0.326641,-0.135299,-0.353553,0.5,0.0,0.0,0.46194,0.0,0.191342,0.426777,-0.176777,0.191342,0.46194,-0.191342,0.0,0.353553,0.0,0.353553,0.191342,0.0,0.46194,0.176777,-0.073223,0.46194,0.326641,-0.135299,0.353553,0.191342,0.0,-0.46194,0.353553,0.0,-0.353553,0.326641,-0.135299,-0.353553,0.176777,-0.073223,-0.46194,0.46194,0.0,-0.191342,0.5,0.0,0.0,0.46194,-0.191342,0.0,0.426777,-0.176777,-0.191342,0.46194,0.0,0.191342,0.353553,0.0,0.353553,0.326641,-0.135299,0.353553,0.426777,-0.176777,0.191342,0.326641,-0.135299,-0.353553,0.426777,-0.176777,-0.191342,0.326641,-0.326641,-0.191342,0.25,-0.25,-0.353553,0.46194,-0.191342,0.0,0.426777,-0.176777,0.191342,0.326641,-0.326641,0.191342,0.353553,-0.353553,0.0,0.326641,-0.135299,0.353553,0.176777,-0.073223,0.46194,0.135299,-0.135299,0.46194,0.25,-0.25,0.353553,0.176777,-0.073223,-0.46194,0.326641,-0.135299,-0.353553,0.25,-0.25,-0.353553,0.135299,-0.135299,-0.46194,0.426777,-0.176777,-0.191342,0.46194,-0.191342,0.0,0.353553,-0.353553,0.0,0.326641,-0.326641,-0.191342,0.426777,-0.176777,0.191342,0.326641,-0.135299,0.353553,0.25,-0.25,0.353553,0.326641,-0.326641,0.191342,0.176777,-0.073223,0.46194,0.0,0.0,0.5,0.135299,-0.135299,0.46194,0.0,0.0,-0.5,0.176777,-0.073223,-0.46194,0.135299,-0.135299,-0.46194,0.135299,-0.135299,-0.46194,0.25,-0.25,-0.353553,0.135299,-0.326641,-0.353553,0.073223,-0.176777,-0.46194,0.326641,-0.326641,-0.191342,0.353553,-0.353553,0.0,0.191342,-0.46194,0.0,0.176777,-0.426777,-0.191342,0.326641,-0.326641,0.191342,0.25,-0.25,0.353553,0.135299,-0.326641,0.353553,0.176777,-0.426777,0.191342,0.135299,-0.135299,0.46194,0.0,0.0,0.5,0.073223,-0.176777,0.46194,0.0,0.0,-0.5,0.135299,-0.135299,-0.46194,0.073223,-0.176777,-0.46194,0.25,-0.25,-0.353553,0.326641,-0.326641,-0.191342,0.176777,-0.426777,-0.191342,0.135299,-0.326641,-0.353553,0.353553,-0.353553,0.0,0.326641,-0.326641,0.191342,0.176777,-0.426777,0.191342,0.191342,-0.46194,0.0,0.25,-0.25,0.353553,0.135299,-0.135299,0.46194,0.073223,-0.176777,0.46194,0.135299,-0.326641,0.353553,0.176777,-0.426777,-0.191342,0.191342,-0.46194,0.0,0.0,-0.5,0.0,0.0,-0.46194,-0.191342,0.176777,-0.426777,0.191342,0.135299,-0.326641,0.353553,0.0,-0.353553,0.353553,0.0,-0.46194,0.191342,0.073223,-0.176777,0.46194,0.0,0.0,0.5,0.0,-0.191342,0.46194,0.0,0.0,-0.5,0.073223,-0.176777,-0.46194,0.0,-0.191342,-0.46194,0.135299,-0.326641,-0.353553,0.176777,-0.426777,-0.191342,0.0,-0.46194,-0.191342,0.0,-0.353553,-0.353553,0.191342,-0.46194,0.0,0.176777,-0.426777,0.191342,0.0,-0.46194,0.191342,0.0,-0.5,0.0,0.135299,-0.326641,0.353553,0.073223,-0.176777,0.46194,0.0,-0.191342,0.46194,0.0,-0.353553,0.353553,0.073223,-0.176777,-0.46194,0.135299,-0.326641,-0.353553,0.0,-0.353553,-0.353553,0.0,-0.191342,-0.46194,0.0,0.0,-0.5,0.0,-0.191342,-0.46194,-0.073223,-0.176777,-0.46194,0.0,-0.353553,-0.353553,0.0,-0.46194,-0.191342,-0.176777,-0.426776,-0.191342,-0.135299,-0.32664,-0.353553,0.0,-0.5,0.0,0.0,-0.46194,0.191342,-0.176777,-0.426776,0.191342,-0.191342,-0.461939,0.0,0.0,-0.353553,0.353553,0.0,-0.191342,0.46194,-0.073223,-0.176777,0.46194,-0.135299,-0.32664,0.353553,0.0,-0.191342,-0.46194,0.0,-0.353553,-0.353553,-0.135299,-0.32664,-0.353553,-0.073223,-0.176777,-0.46194,0.0,-0.46194,-0.191342,0.0,-0.5,0.0,-0.191342,-0.461939,0.0,-0.176777,-0.426776,-0.191342,0.0,-0.46194,0.191342,0.0,-0.353553,0.353553,-0.135299,-0.32664,0.353553,-0.176777,-0.426776,0.191342,0.0,-0.191342,0.46194,0.0,0.0,0.5,-0.073223,-0.176777,0.46194,-0.191342,-0.461939,0.0,-0.176777,-0.426776,0.191342,-0.326641,-0.32664,0.191342,-0.353553,-0.353553,0.0,-0.135299,-0.32664,0.353553,-0.073223,-0.176777,0.46194,-0.135299,-0.135299,0.46194,-0.25,-0.25,0.353553,-0.073223,-0.176777,-0.46194,-0.135299,-0.32664,-0.353553,-0.25,-0.25,-0.353553,-0.135299,-0.135299,-0.46194,-0.176777,-0.426776,-0.191342,-0.191342,-0.461939,0.0,-0.353553,-0.353553,0.0,-0.326641,-0.32664,-0.191342,-0.176777,-0.426776,0.191342,-0.135299,-0.32664,0.353553,-0.25,-0.25,0.353553,-0.326641,-0.32664,0.191342,-0.073223,-0.176777,0.46194,0.0,0.0,0.5,-0.135299,-0.135299,0.46194,0.0,0.0,-0.5,-0.073223,-0.176777,-0.46194,-0.135299,-0.135299,-0.46194,-0.135299,-0.32664,-0.353553,-0.176777,-0.426776,-0.191342,-0.326641,-0.32664,-0.191342,-0.25,-0.25,-0.353553,-0.135299,-0.135299,-0.46194,-0.25,-0.25,-0.353553,-0.326641,-0.135299,-0.353553,-0.176777,-0.073223,-0.46194,-0.326641,-0.32664,-0.191342,-0.353553,-0.353553,0.0,-0.46194,-0.191341,0.0,-0.426777,-0.176776,-0.191342,-0.326641,-0.32664,0.191342,-0.25,-0.25,0.353553,-0.326641,-0.135299,0.353553,-0.426777,-0.176776,0.191342,-0.135299,-0.135299,0.46194,0.0,0.0,0.5,-0.176777,-0.073223,0.46194,0.0,0.0,-0.5,-0.135299,-0.135299,-0.46194,-0.176777,-0.073223,-0.46194,-0.25,-0.25,-0.353553,-0.326641,-0.32664,-0.191342,-0.426777,-0.176776,-0.191342,-0.326641,-0.135299,-0.353553,-0.353553,-0.353553,0.0,-0.326641,-0.32664,0.191342,-0.426777,-0.176776,0.191342,-0.46194,-0.191341,0.0,-0.25,-0.25,0.353553,-0.135299,-0.135299,0.46194,-0.176777,-0.073223,0.46194,-0.326641,-0.135299,0.353553,-0.426777,-0.176776,0.191342,-0.326641,-0.135299,0.353553,-0.353553,0.0,0.353553,-0.46194,0.0,0.191342,-0.176777,-0.073223,0.46194,0.0,0.0,0.5,-0.191342,0.0,0.46194,0.0,0.0,-0.5,-0.176777,-0.073223,-0.46194,-0.191342,0.0,-0.46194,-0.326641,-0.135299,-0.353553,-0.426777,-0.176776,-0.191342,-0.46194,0.0,-0.191342,-0.353553,0.0,-0.353553,-0.46194,-0.191341,0.0,-0.426777,-0.176776,0.191342,-0.46194,0.0,0.191342,-0.5,0.0,0.0,-0.326641,-0.135299,0.353553,-0.176777,-0.073223,0.46194,-0.191342,0.0,0.46194,-0.353553,0.0,0.353553,-0.176777,-0.073223,-0.46194,-0.326641,-0.135299,-0.353553,-0.353553,0.0,-0.353553,-0.191342,0.0,-0.46194,-0.426777,-0.176776,-0.191342,-0.46194,-0.191341,0.0,-0.5,0.0,0.0,-0.46194,0.0,-0.191342,0.0,0.0,-0.5,-0.191342,0.0,-0.46194,-0.176777,0.073223,-0.46194,-0.353553,0.0,-0.353553,-0.46194,0.0,-0.191342,-0.426776,0.176777,-0.191342,-0.326641,0.135299,-0.353553,-0.5,0.0,0.0,-0.46194,0.0,0.191342,-0.426776,0.176777,0.191342,-0.461939,0.191342,0.0,-0.353553,0.0,0.353553,-0.191342,0.0,0.46194,-0.176777,0.073223,0.46194,-0.326641,0.135299,0.353553,-0.191342,0.0,-0.46194,-0.353553,0.0,-0.353553,-0.326641,0.135299,-0.353553,-0.176777,0.073223,-0.46194,-0.46194,0.0,-0.191342,-0.5,0.0,0.0,-0.461939,0.191342,0.0,-0.426776,0.176777,-0.191342,-0.46194,0.0,0.191342,-0.353553,0.0,0.353553,-0.326641,0.135299,0.353553,-0.426776,0.176777,0.191342,-0.191342,0.0,0.46194,0.0,0.0,0.5,-0.176777,0.073223,0.46194,-0.326641,0.135299,0.353553,-0.176777,0.073223,0.46194,-0.135299,0.135299,0.46194,-0.25,0.25,0.353553,-0.176777,0.073223,-0.46194,-0.326641,0.135299,-0.353553,-0.25,0.25,-0.353553,-0.135299,0.135299,-0.46194,-0.426776,0.176777,-0.191342,-0.461939,0.191342,0.0,-0.353553,0.353554,0.0,-0.32664,0.326641,-0.191342,-0.426776,0.176777,0.191342,-0.326641,0.135299,0.353553,-0.25,0.25,0.353553,-0.32664,0.326641,0.191342,-0.176777,0.073223,0.46194,0.0,0.0,0.5,-0.135299,0.135299,0.46194,0.0,0.0,-0.5,-0.176777,0.073223,-0.46194,-0.135299,0.135299,-0.46194,-0.326641,0.135299,-0.353553,-0.426776,0.176777,-0.191342,-0.32664,0.326641,-0.191342,-0.25,0.25,-0.353553,-0.461939,0.191342,0.0,-0.426776,0.176777,0.191342,-0.32664,0.326641,0.191342,-0.353553,0.353554,0.0,-0.135299,0.135299,-0.46194,-0.25,0.25,-0.353553,-0.135299,0.326641,-0.353553,-0.073223,0.176777,-0.46194,-0.32664,0.326641,-0.191342,-0.353553,0.353554,0.0,-0.191341,0.46194,0.0,-0.176776,0.426777,-0.191342,-0.32664,0.326641,0.191342,-0.25,0.25,0.353553,-0.135299,0.326641,0.353553,-0.176776,0.426777,0.191342,-0.135299,0.135299,0.46194,0.0,0.0,0.5,-0.073223,0.176777,0.46194,0.0,0.0,-0.5,-0.135299,0.135299,-0.46194,-0.073223,0.176777,-0.46194,-0.25,0.25,-0.353553,-0.32664,0.326641,-0.191342,-0.176776,0.426777,-0.191342,-0.135299,0.326641,-0.353553,-0.353553,0.353554,0.0,-0.32664,0.326641,0.191342,-0.176776,0.426777,0.191342,-0.191341,0.46194,0.0,-0.25,0.25,0.353553,-0.135299,0.135299,0.46194,-0.073223,0.176777,0.46194,-0.135299,0.326641,0.353553,-0.073223,0.176777,0.46194,0.0,0.0,0.5,0.0,0.191342,0.46194,0.0,0.0,-0.5,-0.073223,0.176777,-0.46194,0.0,0.191342,-0.46194,-0.135299,0.326641,-0.353553,-0.176776,0.426777,-0.191342,0.0,0.46194,-0.191342,0.0,0.353553,-0.353553,-0.191341,0.46194,0.0,-0.176776,0.426777,0.191342,0.0,0.46194,0.191342,0.0,0.5,0.0,0.0,0.191342,0.46194,0.0,0.353553,0.353553,-0.135299,0.326641,0.353553,-0.073223,0.176777,0.46194,-0.073223,0.176777,-0.46194,-0.135299,0.326641,-0.353553,0.0,0.353553,-0.353553,0.0,0.191342,-0.46194,-0.176776,0.426777,-0.191342,-0.191341,0.46194,0.0,0.0,0.5,0.0,0.0,0.46194,-0.191342,-0.176776,0.426777,0.191342,-0.135299,0.326641,0.353553,0.0,0.353553,0.353553,0.0,0.46194,0.191342,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_188_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",188,0x0a76184f)
static const int _hx_array_data_df915e2f_47[] = {
	(int)0,(int)1,(int)2,(int)3,(int)4,(int)5,(int)6,(int)7,(int)8,(int)9,(int)10,(int)11,(int)12,(int)13,(int)14,(int)15,(int)16,(int)17,(int)18,(int)19,(int)20,(int)21,(int)22,(int)23,(int)24,(int)25,(int)26,(int)27,(int)28,(int)29,(int)30,(int)31,(int)32,(int)33,(int)34,(int)35,(int)36,(int)37,(int)38,(int)39,(int)40,(int)41,(int)42,(int)43,(int)44,(int)45,(int)46,(int)47,(int)48,(int)49,(int)50,(int)50,(int)51,(int)52,(int)52,(int)53,(int)54,(int)54,(int)55,(int)56,(int)57,(int)58,(int)59,(int)60,(int)61,(int)62,(int)62,(int)63,(int)64,(int)64,(int)65,(int)48,(int)48,(int)50,(int)52,(int)52,(int)54,(int)56,(int)56,(int)60,(int)62,(int)62,(int)64,(int)48,(int)48,(int)52,(int)56,(int)56,(int)62,(int)48,
};
HX_LOCAL_STACK_FRAME(_hx_pos_8b47882fee7bb01b_189_boot,"iron.data.ConstData","boot",0x270a0ad1,"iron.data.ConstData.boot","iron/data/ConstData.hx",189,0x0a76184f)
static const Float _hx_array_data_df915e2f_49[] = {
	0.0,0.5,-1.0,0.0,0.0,0.0,0.191342,0.46194,-1.0,0.191342,0.46194,-1.0,0.0,0.0,0.0,0.353553,0.353553,-1.0,0.353553,0.353553,-1.0,0.0,0.0,0.0,0.46194,0.191342,-1.0,0.46194,0.191342,-1.0,0.0,0.0,0.0,0.5,0.0,-1.0,0.5,0.0,-1.0,0.0,0.0,0.0,0.46194,-0.191342,-1.0,0.46194,-0.191342,-1.0,0.0,0.0,0.0,0.353553,-0.353553,-1.0,0.353553,-0.353553,-1.0,0.0,0.0,0.0,0.191342,-0.46194,-1.0,0.191342,-0.46194,-1.0,0.0,0.0,0.0,0.0,-0.5,-1.0,0.0,-0.5,-1.0,0.0,0.0,0.0,-0.191342,-0.46194,-1.0,-0.191342,-0.46194,-1.0,0.0,0.0,0.0,-0.353553,-0.353554,-1.0,-0.353553,-0.353554,-1.0,0.0,0.0,0.0,-0.46194,-0.191342,-1.0,-0.46194,-0.191342,-1.0,0.0,0.0,0.0,-0.5,0.0,-1.0,-0.5,0.0,-1.0,0.0,0.0,0.0,-0.46194,0.191342,-1.0,-0.46194,0.191342,-1.0,0.0,0.0,0.0,-0.353553,0.353554,-1.0,-0.353553,0.353554,-1.0,0.0,0.0,0.0,-0.191341,0.46194,-1.0,-0.191341,0.46194,-1.0,0.0,0.0,0.0,0.0,0.5,-1.0,-0.191341,0.46194,-1.0,0.0,0.5,-1.0,0.191342,0.46194,-1.0,0.353553,0.353553,-1.0,0.46194,0.191342,-1.0,0.5,0.0,-1.0,0.46194,-0.191342,-1.0,0.353553,-0.353553,-1.0,0.191342,-0.46194,-1.0,0.191342,-0.46194,-1.0,0.0,-0.5,-1.0,-0.191342,-0.46194,-1.0,-0.191342,-0.46194,-1.0,-0.353553,-0.353554,-1.0,-0.46194,-0.191342,-1.0,-0.5,0.0,-1.0,-0.46194,0.191342,-1.0,-0.353553,0.353554,-1.0,
};
namespace iron{
namespace data{

void ConstData_obj::__construct() { }

Dynamic ConstData_obj::__CreateEmpty() { return new ConstData_obj; }

void *ConstData_obj::_hx_vtable = 0;

Dynamic ConstData_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< ConstData_obj > _hx_result = new ConstData_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool ConstData_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x4a10e993;
}

 ::kha::graphics4::VertexBuffer ConstData_obj::screenAlignedVB;

 ::kha::graphics4::IndexBuffer ConstData_obj::screenAlignedIB;

 ::kha::graphics4::VertexBuffer ConstData_obj::rectVB;

 ::kha::graphics4::IndexBuffer ConstData_obj::rectIB;

 ::kha::graphics4::VertexBuffer ConstData_obj::boxVB;

 ::kha::graphics4::IndexBuffer ConstData_obj::boxIB;

 ::kha::graphics4::VertexBuffer ConstData_obj::skydomeVB;

 ::kha::graphics4::IndexBuffer ConstData_obj::skydomeIB;

 ::kha::graphics4::VertexBuffer ConstData_obj::sphereVB;

 ::kha::graphics4::IndexBuffer ConstData_obj::sphereIB;

 ::kha::graphics4::VertexBuffer ConstData_obj::coneVB;

 ::kha::graphics4::IndexBuffer ConstData_obj::coneIB;

void ConstData_obj::createScreenAlignedData(){
            	HX_GC_STACKFRAME(&_hx_pos_8b47882fee7bb01b_28_createScreenAlignedData)
HXLINE(  33)		::Array< Float > data = ::Array_obj< Float >::fromData( _hx_array_data_df915e2f_3,6);
HXLINE(  34)		::Array< int > indices = ::Array_obj< int >::fromData( _hx_array_data_df915e2f_4,3);
HXLINE(  37)		 ::kha::graphics4::VertexStructure structure =  ::kha::graphics4::VertexStructure_obj::__alloc( HX_CTX );
HXLINE(  38)		structure->add(HX_("pos",94,5d,55,00),::kha::graphics4::VertexData_obj::Float2_dyn());
HXLINE(  39)		int data1 = data->length;
HXDLIN(  39)		::iron::data::ConstData_obj::screenAlignedVB =  ::kha::graphics4::VertexBuffer_obj::__alloc( HX_CTX ,::Std_obj::_hx_int(((Float)data1 / (Float)::Std_obj::_hx_int(((Float)structure->byteSize() / (Float)(int)4)))),structure,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null(),null());
HXLINE(  40)		 ::kha::arrays::Float32ArrayPrivate vertices = ::iron::data::ConstData_obj::screenAlignedVB->lock(null(),null());
HXLINE(  41)		{
HXLINE(  41)			int _g1 = (int)0;
HXDLIN(  41)			int _g = vertices->self.length();
HXDLIN(  41)			while((_g1 < _g)){
HXLINE(  41)				_g1 = (_g1 + (int)1);
HXDLIN(  41)				int i = (_g1 - (int)1);
HXDLIN(  41)				 float32array vertices1 = vertices->self;
HXDLIN(  41)				vertices1.set(i,data->__get(i));
            			}
            		}
HXLINE(  42)		::iron::data::ConstData_obj::screenAlignedVB->unlock();
HXLINE(  44)		::iron::data::ConstData_obj::screenAlignedIB =  ::kha::graphics4::IndexBuffer_obj::__alloc( HX_CTX ,indices->length,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null());
HXLINE(  45)		 ::kha::arrays::Uint32ArrayPrivate id = ::iron::data::ConstData_obj::screenAlignedIB->lock(null(),null());
HXLINE(  46)		{
HXLINE(  46)			int _g11 = (int)0;
HXDLIN(  46)			int _g2 = id->self.length();
HXDLIN(  46)			while((_g11 < _g2)){
HXLINE(  46)				_g11 = (_g11 + (int)1);
HXDLIN(  46)				int i1 = (_g11 - (int)1);
HXDLIN(  46)				 uint32array id1 = id->self;
HXDLIN(  46)				id1.set(i1,indices->__get(i1));
            			}
            		}
HXLINE(  47)		::iron::data::ConstData_obj::screenAlignedIB->unlock();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ConstData_obj,createScreenAlignedData,(void))

void ConstData_obj::createRectData(){
            	HX_GC_STACKFRAME(&_hx_pos_8b47882fee7bb01b_50_createRectData)
HXLINE(  52)		::Array< Float > data = ::Array_obj< Float >::fromData( _hx_array_data_df915e2f_8,8);
HXLINE(  53)		::Array< int > indices = ::Array_obj< int >::fromData( _hx_array_data_df915e2f_9,6);
HXLINE(  56)		 ::kha::graphics4::VertexStructure structure =  ::kha::graphics4::VertexStructure_obj::__alloc( HX_CTX );
HXLINE(  57)		structure->add(HX_("pos",94,5d,55,00),::kha::graphics4::VertexData_obj::Float2_dyn());
HXLINE(  58)		int data1 = data->length;
HXDLIN(  58)		::iron::data::ConstData_obj::rectVB =  ::kha::graphics4::VertexBuffer_obj::__alloc( HX_CTX ,::Std_obj::_hx_int(((Float)data1 / (Float)::Std_obj::_hx_int(((Float)structure->byteSize() / (Float)(int)4)))),structure,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null(),null());
HXLINE(  59)		 ::kha::arrays::Float32ArrayPrivate vertices = ::iron::data::ConstData_obj::rectVB->lock(null(),null());
HXLINE(  60)		{
HXLINE(  60)			int _g1 = (int)0;
HXDLIN(  60)			int _g = vertices->self.length();
HXDLIN(  60)			while((_g1 < _g)){
HXLINE(  60)				_g1 = (_g1 + (int)1);
HXDLIN(  60)				int i = (_g1 - (int)1);
HXDLIN(  60)				 float32array vertices1 = vertices->self;
HXDLIN(  60)				vertices1.set(i,data->__get(i));
            			}
            		}
HXLINE(  61)		::iron::data::ConstData_obj::rectVB->unlock();
HXLINE(  63)		::iron::data::ConstData_obj::rectIB =  ::kha::graphics4::IndexBuffer_obj::__alloc( HX_CTX ,indices->length,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null());
HXLINE(  64)		 ::kha::arrays::Uint32ArrayPrivate id = ::iron::data::ConstData_obj::rectIB->lock(null(),null());
HXLINE(  65)		{
HXLINE(  65)			int _g11 = (int)0;
HXDLIN(  65)			int _g2 = id->self.length();
HXDLIN(  65)			while((_g11 < _g2)){
HXLINE(  65)				_g11 = (_g11 + (int)1);
HXDLIN(  65)				int i1 = (_g11 - (int)1);
HXDLIN(  65)				 uint32array id1 = id->self;
HXDLIN(  65)				id1.set(i1,indices->__get(i1));
            			}
            		}
HXLINE(  66)		::iron::data::ConstData_obj::rectIB->unlock();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ConstData_obj,createRectData,(void))

void ConstData_obj::createBoxData(){
            	HX_GC_STACKFRAME(&_hx_pos_8b47882fee7bb01b_69_createBoxData)
HXLINE(  70)		::Array< Float > data = ::Array_obj< Float >::fromData( _hx_array_data_df915e2f_13,72);
HXLINE(  77)		::Array< int > indices = ::Array_obj< int >::fromData( _hx_array_data_df915e2f_14,36);
HXLINE(  82)		 ::kha::graphics4::VertexStructure structure =  ::kha::graphics4::VertexStructure_obj::__alloc( HX_CTX );
HXLINE(  83)		structure->add(HX_("pos",94,5d,55,00),::kha::graphics4::VertexData_obj::Float3_dyn());
HXLINE(  84)		int data1 = data->length;
HXDLIN(  84)		::iron::data::ConstData_obj::boxVB =  ::kha::graphics4::VertexBuffer_obj::__alloc( HX_CTX ,::Std_obj::_hx_int(((Float)data1 / (Float)::Std_obj::_hx_int(((Float)structure->byteSize() / (Float)(int)4)))),structure,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null(),null());
HXLINE(  85)		 ::kha::arrays::Float32ArrayPrivate vertices = ::iron::data::ConstData_obj::boxVB->lock(null(),null());
HXLINE(  86)		{
HXLINE(  86)			int _g1 = (int)0;
HXDLIN(  86)			int _g = vertices->self.length();
HXDLIN(  86)			while((_g1 < _g)){
HXLINE(  86)				_g1 = (_g1 + (int)1);
HXDLIN(  86)				int i = (_g1 - (int)1);
HXDLIN(  86)				 float32array vertices1 = vertices->self;
HXDLIN(  86)				vertices1.set(i,data->__get(i));
            			}
            		}
HXLINE(  87)		::iron::data::ConstData_obj::boxVB->unlock();
HXLINE(  89)		::iron::data::ConstData_obj::boxIB =  ::kha::graphics4::IndexBuffer_obj::__alloc( HX_CTX ,indices->length,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null());
HXLINE(  90)		 ::kha::arrays::Uint32ArrayPrivate id = ::iron::data::ConstData_obj::boxIB->lock(null(),null());
HXLINE(  91)		{
HXLINE(  91)			int _g11 = (int)0;
HXDLIN(  91)			int _g2 = id->self.length();
HXDLIN(  91)			while((_g11 < _g2)){
HXLINE(  91)				_g11 = (_g11 + (int)1);
HXDLIN(  91)				int i1 = (_g11 - (int)1);
HXDLIN(  91)				 uint32array id1 = id->self;
HXDLIN(  91)				id1.set(i1,indices->__get(i1));
            			}
            		}
HXLINE(  92)		::iron::data::ConstData_obj::boxIB->unlock();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ConstData_obj,createBoxData,(void))

void ConstData_obj::createSkydomeData(){
            	HX_GC_STACKFRAME(&_hx_pos_8b47882fee7bb01b_95_createSkydomeData)
HXLINE( 123)		 ::kha::graphics4::VertexStructure structure =  ::kha::graphics4::VertexStructure_obj::__alloc( HX_CTX );
HXLINE( 124)		structure->add(HX_("pos",94,5d,55,00),::kha::graphics4::VertexData_obj::Float3_dyn());
HXLINE( 125)		structure->add(HX_("nor",11,d9,53,00),::kha::graphics4::VertexData_obj::Float3_dyn());
HXLINE( 126)		int structLength = ::Std_obj::_hx_int(((Float)structure->byteSize() / (Float)(int)4));
HXLINE( 127)		::Array< Float > pos = ::iron::data::ConstData_obj::skydomePos;
HXLINE( 128)		::Array< Float > nor = ::iron::data::ConstData_obj::skydomeNor;
HXLINE( 129)		::iron::data::ConstData_obj::skydomeVB =  ::kha::graphics4::VertexBuffer_obj::__alloc( HX_CTX ,::Std_obj::_hx_int(((Float)pos->length / (Float)(int)3)),structure,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null(),null());
HXLINE( 130)		 ::kha::arrays::Float32ArrayPrivate vertices = ::iron::data::ConstData_obj::skydomeVB->lock(null(),null());
HXLINE( 131)		{
HXLINE( 131)			int _g1 = (int)0;
HXDLIN( 131)			int _g = ::Std_obj::_hx_int(((Float)vertices->self.length() / (Float)structLength));
HXDLIN( 131)			while((_g1 < _g)){
HXLINE( 131)				_g1 = (_g1 + (int)1);
HXDLIN( 131)				int i = (_g1 - (int)1);
HXLINE( 132)				 float32array vertices1 = vertices->self;
HXDLIN( 132)				vertices1.set((i * structLength),pos->__get((i * (int)3)));
HXLINE( 133)				 float32array vertices2 = vertices->self;
HXDLIN( 133)				vertices2.set(((i * structLength) + (int)1),pos->__get(((i * (int)3) + (int)1)));
HXLINE( 134)				 float32array vertices3 = vertices->self;
HXDLIN( 134)				vertices3.set(((i * structLength) + (int)2),pos->__get(((i * (int)3) + (int)2)));
HXLINE( 135)				 float32array vertices4 = vertices->self;
HXDLIN( 135)				vertices4.set(((i * structLength) + (int)3),-(nor->__get((i * (int)3))));
HXLINE( 136)				 float32array vertices5 = vertices->self;
HXDLIN( 136)				vertices5.set(((i * structLength) + (int)4),-(nor->__get(((i * (int)3) + (int)1))));
HXLINE( 137)				 float32array vertices6 = vertices->self;
HXDLIN( 137)				vertices6.set(((i * structLength) + (int)5),-(nor->__get(((i * (int)3) + (int)2))));
            			}
            		}
HXLINE( 139)		::iron::data::ConstData_obj::skydomeVB->unlock();
HXLINE( 142)		::Array< int > indices = ::iron::data::ConstData_obj::skydomeIndices;
HXLINE( 143)		::iron::data::ConstData_obj::skydomeIB =  ::kha::graphics4::IndexBuffer_obj::__alloc( HX_CTX ,indices->length,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null());
HXLINE( 144)		 ::kha::arrays::Uint32ArrayPrivate id = ::iron::data::ConstData_obj::skydomeIB->lock(null(),null());
HXLINE( 145)		{
HXLINE( 145)			int _g11 = (int)0;
HXDLIN( 145)			int _g2 = id->self.length();
HXDLIN( 145)			while((_g11 < _g2)){
HXLINE( 145)				_g11 = (_g11 + (int)1);
HXDLIN( 145)				int i1 = (_g11 - (int)1);
HXDLIN( 145)				 uint32array id1 = id->self;
HXDLIN( 145)				id1.set(i1,indices->__get(i1));
            			}
            		}
HXLINE( 146)		::iron::data::ConstData_obj::skydomeIB->unlock();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ConstData_obj,createSkydomeData,(void))

void ConstData_obj::createSphereData(){
            	HX_GC_STACKFRAME(&_hx_pos_8b47882fee7bb01b_149_createSphereData)
HXLINE( 150)		 ::kha::graphics4::VertexStructure structure =  ::kha::graphics4::VertexStructure_obj::__alloc( HX_CTX );
HXLINE( 151)		structure->add(HX_("pos",94,5d,55,00),::kha::graphics4::VertexData_obj::Float3_dyn());
HXLINE( 152)		::Array< Float > data = ::iron::data::ConstData_obj::spherePos;
HXLINE( 153)		int data1 = data->length;
HXDLIN( 153)		::iron::data::ConstData_obj::sphereVB =  ::kha::graphics4::VertexBuffer_obj::__alloc( HX_CTX ,::Std_obj::_hx_int(((Float)data1 / (Float)::Std_obj::_hx_int(((Float)structure->byteSize() / (Float)(int)4)))),structure,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null(),null());
HXLINE( 154)		 ::kha::arrays::Float32ArrayPrivate vertices = ::iron::data::ConstData_obj::sphereVB->lock(null(),null());
HXLINE( 155)		{
HXLINE( 155)			int _g1 = (int)0;
HXDLIN( 155)			int _g = vertices->self.length();
HXDLIN( 155)			while((_g1 < _g)){
HXLINE( 155)				_g1 = (_g1 + (int)1);
HXDLIN( 155)				int i = (_g1 - (int)1);
HXDLIN( 155)				 float32array vertices1 = vertices->self;
HXDLIN( 155)				vertices1.set(i,data->__get(i));
            			}
            		}
HXLINE( 156)		::iron::data::ConstData_obj::sphereVB->unlock();
HXLINE( 158)		::Array< int > indices = ::iron::data::ConstData_obj::sphereIndices;
HXLINE( 159)		::iron::data::ConstData_obj::sphereIB =  ::kha::graphics4::IndexBuffer_obj::__alloc( HX_CTX ,indices->length,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null());
HXLINE( 160)		 ::kha::arrays::Uint32ArrayPrivate id = ::iron::data::ConstData_obj::sphereIB->lock(null(),null());
HXLINE( 161)		{
HXLINE( 161)			int _g11 = (int)0;
HXDLIN( 161)			int _g2 = id->self.length();
HXDLIN( 161)			while((_g11 < _g2)){
HXLINE( 161)				_g11 = (_g11 + (int)1);
HXDLIN( 161)				int i1 = (_g11 - (int)1);
HXDLIN( 161)				 uint32array id1 = id->self;
HXDLIN( 161)				id1.set(i1,indices->__get(i1));
            			}
            		}
HXLINE( 162)		::iron::data::ConstData_obj::sphereIB->unlock();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ConstData_obj,createSphereData,(void))

void ConstData_obj::createConeData(){
            	HX_GC_STACKFRAME(&_hx_pos_8b47882fee7bb01b_165_createConeData)
HXLINE( 166)		 ::kha::graphics4::VertexStructure structure =  ::kha::graphics4::VertexStructure_obj::__alloc( HX_CTX );
HXLINE( 167)		structure->add(HX_("pos",94,5d,55,00),::kha::graphics4::VertexData_obj::Float3_dyn());
HXLINE( 168)		::Array< Float > data = ::iron::data::ConstData_obj::conePos;
HXLINE( 169)		int data1 = data->length;
HXDLIN( 169)		::iron::data::ConstData_obj::coneVB =  ::kha::graphics4::VertexBuffer_obj::__alloc( HX_CTX ,::Std_obj::_hx_int(((Float)data1 / (Float)::Std_obj::_hx_int(((Float)structure->byteSize() / (Float)(int)4)))),structure,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null(),null());
HXLINE( 170)		 ::kha::arrays::Float32ArrayPrivate vertices = ::iron::data::ConstData_obj::coneVB->lock(null(),null());
HXLINE( 171)		{
HXLINE( 171)			int _g1 = (int)0;
HXDLIN( 171)			int _g = vertices->self.length();
HXDLIN( 171)			while((_g1 < _g)){
HXLINE( 171)				_g1 = (_g1 + (int)1);
HXDLIN( 171)				int i = (_g1 - (int)1);
HXDLIN( 171)				 float32array vertices1 = vertices->self;
HXDLIN( 171)				vertices1.set(i,data->__get(i));
            			}
            		}
HXLINE( 172)		::iron::data::ConstData_obj::coneVB->unlock();
HXLINE( 174)		::Array< int > indices = ::iron::data::ConstData_obj::coneIndices;
HXLINE( 175)		::iron::data::ConstData_obj::coneIB =  ::kha::graphics4::IndexBuffer_obj::__alloc( HX_CTX ,indices->length,::kha::graphics4::Usage_obj::StaticUsage_dyn(),null());
HXLINE( 176)		 ::kha::arrays::Uint32ArrayPrivate id = ::iron::data::ConstData_obj::coneIB->lock(null(),null());
HXLINE( 177)		{
HXLINE( 177)			int _g11 = (int)0;
HXDLIN( 177)			int _g2 = id->self.length();
HXDLIN( 177)			while((_g11 < _g2)){
HXLINE( 177)				_g11 = (_g11 + (int)1);
HXDLIN( 177)				int i1 = (_g11 - (int)1);
HXDLIN( 177)				 uint32array id1 = id->self;
HXDLIN( 177)				id1.set(i1,indices->__get(i1));
            			}
            		}
HXLINE( 178)		::iron::data::ConstData_obj::coneIB->unlock();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(ConstData_obj,createConeData,(void))

::Array< int > ConstData_obj::skydomeIndices;

::Array< Float > ConstData_obj::skydomePos;

::Array< Float > ConstData_obj::skydomeNor;

::Array< int > ConstData_obj::sphereIndices;

::Array< Float > ConstData_obj::spherePos;

::Array< int > ConstData_obj::coneIndices;

::Array< Float > ConstData_obj::conePos;


ConstData_obj::ConstData_obj()
{
}

bool ConstData_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"boxVB") ) { outValue = ( boxVB ); return true; }
		if (HX_FIELD_EQ(inName,"boxIB") ) { outValue = ( boxIB ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"rectVB") ) { outValue = ( rectVB ); return true; }
		if (HX_FIELD_EQ(inName,"rectIB") ) { outValue = ( rectIB ); return true; }
		if (HX_FIELD_EQ(inName,"coneVB") ) { outValue = ( coneVB ); return true; }
		if (HX_FIELD_EQ(inName,"coneIB") ) { outValue = ( coneIB ); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"conePos") ) { outValue = ( conePos ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"sphereVB") ) { outValue = ( sphereVB ); return true; }
		if (HX_FIELD_EQ(inName,"sphereIB") ) { outValue = ( sphereIB ); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"skydomeVB") ) { outValue = ( skydomeVB ); return true; }
		if (HX_FIELD_EQ(inName,"skydomeIB") ) { outValue = ( skydomeIB ); return true; }
		if (HX_FIELD_EQ(inName,"spherePos") ) { outValue = ( spherePos ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"skydomePos") ) { outValue = ( skydomePos ); return true; }
		if (HX_FIELD_EQ(inName,"skydomeNor") ) { outValue = ( skydomeNor ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"coneIndices") ) { outValue = ( coneIndices ); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"createBoxData") ) { outValue = createBoxData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"sphereIndices") ) { outValue = ( sphereIndices ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"createRectData") ) { outValue = createRectData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createConeData") ) { outValue = createConeData_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"skydomeIndices") ) { outValue = ( skydomeIndices ); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"screenAlignedVB") ) { outValue = ( screenAlignedVB ); return true; }
		if (HX_FIELD_EQ(inName,"screenAlignedIB") ) { outValue = ( screenAlignedIB ); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"createSphereData") ) { outValue = createSphereData_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"createSkydomeData") ) { outValue = createSkydomeData_dyn(); return true; }
		break;
	case 23:
		if (HX_FIELD_EQ(inName,"createScreenAlignedData") ) { outValue = createScreenAlignedData_dyn(); return true; }
	}
	return false;
}

bool ConstData_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"boxVB") ) { boxVB=ioValue.Cast<  ::kha::graphics4::VertexBuffer >(); return true; }
		if (HX_FIELD_EQ(inName,"boxIB") ) { boxIB=ioValue.Cast<  ::kha::graphics4::IndexBuffer >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"rectVB") ) { rectVB=ioValue.Cast<  ::kha::graphics4::VertexBuffer >(); return true; }
		if (HX_FIELD_EQ(inName,"rectIB") ) { rectIB=ioValue.Cast<  ::kha::graphics4::IndexBuffer >(); return true; }
		if (HX_FIELD_EQ(inName,"coneVB") ) { coneVB=ioValue.Cast<  ::kha::graphics4::VertexBuffer >(); return true; }
		if (HX_FIELD_EQ(inName,"coneIB") ) { coneIB=ioValue.Cast<  ::kha::graphics4::IndexBuffer >(); return true; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"conePos") ) { conePos=ioValue.Cast< ::Array< Float > >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"sphereVB") ) { sphereVB=ioValue.Cast<  ::kha::graphics4::VertexBuffer >(); return true; }
		if (HX_FIELD_EQ(inName,"sphereIB") ) { sphereIB=ioValue.Cast<  ::kha::graphics4::IndexBuffer >(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"skydomeVB") ) { skydomeVB=ioValue.Cast<  ::kha::graphics4::VertexBuffer >(); return true; }
		if (HX_FIELD_EQ(inName,"skydomeIB") ) { skydomeIB=ioValue.Cast<  ::kha::graphics4::IndexBuffer >(); return true; }
		if (HX_FIELD_EQ(inName,"spherePos") ) { spherePos=ioValue.Cast< ::Array< Float > >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"skydomePos") ) { skydomePos=ioValue.Cast< ::Array< Float > >(); return true; }
		if (HX_FIELD_EQ(inName,"skydomeNor") ) { skydomeNor=ioValue.Cast< ::Array< Float > >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"coneIndices") ) { coneIndices=ioValue.Cast< ::Array< int > >(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"sphereIndices") ) { sphereIndices=ioValue.Cast< ::Array< int > >(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"skydomeIndices") ) { skydomeIndices=ioValue.Cast< ::Array< int > >(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"screenAlignedVB") ) { screenAlignedVB=ioValue.Cast<  ::kha::graphics4::VertexBuffer >(); return true; }
		if (HX_FIELD_EQ(inName,"screenAlignedIB") ) { screenAlignedIB=ioValue.Cast<  ::kha::graphics4::IndexBuffer >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *ConstData_obj_sMemberStorageInfo = 0;
static hx::StaticInfo ConstData_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::kha::graphics4::VertexBuffer*/ ,(void *) &ConstData_obj::screenAlignedVB,HX_HCSTRING("screenAlignedVB","\x84","\x2d","\xd4","\x34")},
	{hx::fsObject /*::kha::graphics4::IndexBuffer*/ ,(void *) &ConstData_obj::screenAlignedIB,HX_HCSTRING("screenAlignedIB","\x31","\x22","\xd4","\x34")},
	{hx::fsObject /*::kha::graphics4::VertexBuffer*/ ,(void *) &ConstData_obj::rectVB,HX_HCSTRING("rectVB","\x50","\x29","\xf0","\xfd")},
	{hx::fsObject /*::kha::graphics4::IndexBuffer*/ ,(void *) &ConstData_obj::rectIB,HX_HCSTRING("rectIB","\xfd","\x1d","\xf0","\xfd")},
	{hx::fsObject /*::kha::graphics4::VertexBuffer*/ ,(void *) &ConstData_obj::boxVB,HX_HCSTRING("boxVB","\xf7","\xe1","\xfe","\xb6")},
	{hx::fsObject /*::kha::graphics4::IndexBuffer*/ ,(void *) &ConstData_obj::boxIB,HX_HCSTRING("boxIB","\xa4","\xd6","\xfe","\xb6")},
	{hx::fsObject /*::kha::graphics4::VertexBuffer*/ ,(void *) &ConstData_obj::skydomeVB,HX_HCSTRING("skydomeVB","\x30","\xa9","\xb0","\x7f")},
	{hx::fsObject /*::kha::graphics4::IndexBuffer*/ ,(void *) &ConstData_obj::skydomeIB,HX_HCSTRING("skydomeIB","\xdd","\x9d","\xb0","\x7f")},
	{hx::fsObject /*::kha::graphics4::VertexBuffer*/ ,(void *) &ConstData_obj::sphereVB,HX_HCSTRING("sphereVB","\x79","\x97","\x4a","\xeb")},
	{hx::fsObject /*::kha::graphics4::IndexBuffer*/ ,(void *) &ConstData_obj::sphereIB,HX_HCSTRING("sphereIB","\x26","\x8c","\x4a","\xeb")},
	{hx::fsObject /*::kha::graphics4::VertexBuffer*/ ,(void *) &ConstData_obj::coneVB,HX_HCSTRING("coneVB","\xcf","\x83","\xd1","\xc7")},
	{hx::fsObject /*::kha::graphics4::IndexBuffer*/ ,(void *) &ConstData_obj::coneIB,HX_HCSTRING("coneIB","\x7c","\x78","\xd1","\xc7")},
	{hx::fsObject /*Array< int >*/ ,(void *) &ConstData_obj::skydomeIndices,HX_HCSTRING("skydomeIndices","\x83","\xc2","\x4d","\x78")},
	{hx::fsObject /*Array< Float >*/ ,(void *) &ConstData_obj::skydomePos,HX_HCSTRING("skydomePos","\xf0","\xfa","\xde","\x3a")},
	{hx::fsObject /*Array< Float >*/ ,(void *) &ConstData_obj::skydomeNor,HX_HCSTRING("skydomeNor","\x6d","\x76","\xdd","\x3a")},
	{hx::fsObject /*Array< int >*/ ,(void *) &ConstData_obj::sphereIndices,HX_HCSTRING("sphereIndices","\x9a","\x6b","\x02","\x82")},
	{hx::fsObject /*Array< Float >*/ ,(void *) &ConstData_obj::spherePos,HX_HCSTRING("spherePos","\x87","\x8c","\xf5","\xf5")},
	{hx::fsObject /*Array< int >*/ ,(void *) &ConstData_obj::coneIndices,HX_HCSTRING("coneIndices","\x84","\x07","\x95","\x1b")},
	{hx::fsObject /*Array< Float >*/ ,(void *) &ConstData_obj::conePos,HX_HCSTRING("conePos","\x71","\x6b","\x7d","\x0f")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void ConstData_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(ConstData_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(ConstData_obj::screenAlignedVB,"screenAlignedVB");
	HX_MARK_MEMBER_NAME(ConstData_obj::screenAlignedIB,"screenAlignedIB");
	HX_MARK_MEMBER_NAME(ConstData_obj::rectVB,"rectVB");
	HX_MARK_MEMBER_NAME(ConstData_obj::rectIB,"rectIB");
	HX_MARK_MEMBER_NAME(ConstData_obj::boxVB,"boxVB");
	HX_MARK_MEMBER_NAME(ConstData_obj::boxIB,"boxIB");
	HX_MARK_MEMBER_NAME(ConstData_obj::skydomeVB,"skydomeVB");
	HX_MARK_MEMBER_NAME(ConstData_obj::skydomeIB,"skydomeIB");
	HX_MARK_MEMBER_NAME(ConstData_obj::sphereVB,"sphereVB");
	HX_MARK_MEMBER_NAME(ConstData_obj::sphereIB,"sphereIB");
	HX_MARK_MEMBER_NAME(ConstData_obj::coneVB,"coneVB");
	HX_MARK_MEMBER_NAME(ConstData_obj::coneIB,"coneIB");
	HX_MARK_MEMBER_NAME(ConstData_obj::skydomeIndices,"skydomeIndices");
	HX_MARK_MEMBER_NAME(ConstData_obj::skydomePos,"skydomePos");
	HX_MARK_MEMBER_NAME(ConstData_obj::skydomeNor,"skydomeNor");
	HX_MARK_MEMBER_NAME(ConstData_obj::sphereIndices,"sphereIndices");
	HX_MARK_MEMBER_NAME(ConstData_obj::spherePos,"spherePos");
	HX_MARK_MEMBER_NAME(ConstData_obj::coneIndices,"coneIndices");
	HX_MARK_MEMBER_NAME(ConstData_obj::conePos,"conePos");
};

#ifdef HXCPP_VISIT_ALLOCS
static void ConstData_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(ConstData_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(ConstData_obj::screenAlignedVB,"screenAlignedVB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::screenAlignedIB,"screenAlignedIB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::rectVB,"rectVB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::rectIB,"rectIB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::boxVB,"boxVB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::boxIB,"boxIB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::skydomeVB,"skydomeVB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::skydomeIB,"skydomeIB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::sphereVB,"sphereVB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::sphereIB,"sphereIB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::coneVB,"coneVB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::coneIB,"coneIB");
	HX_VISIT_MEMBER_NAME(ConstData_obj::skydomeIndices,"skydomeIndices");
	HX_VISIT_MEMBER_NAME(ConstData_obj::skydomePos,"skydomePos");
	HX_VISIT_MEMBER_NAME(ConstData_obj::skydomeNor,"skydomeNor");
	HX_VISIT_MEMBER_NAME(ConstData_obj::sphereIndices,"sphereIndices");
	HX_VISIT_MEMBER_NAME(ConstData_obj::spherePos,"spherePos");
	HX_VISIT_MEMBER_NAME(ConstData_obj::coneIndices,"coneIndices");
	HX_VISIT_MEMBER_NAME(ConstData_obj::conePos,"conePos");
};

#endif

hx::Class ConstData_obj::__mClass;

static ::String ConstData_obj_sStaticFields[] = {
	HX_HCSTRING("screenAlignedVB","\x84","\x2d","\xd4","\x34"),
	HX_HCSTRING("screenAlignedIB","\x31","\x22","\xd4","\x34"),
	HX_HCSTRING("rectVB","\x50","\x29","\xf0","\xfd"),
	HX_HCSTRING("rectIB","\xfd","\x1d","\xf0","\xfd"),
	HX_HCSTRING("boxVB","\xf7","\xe1","\xfe","\xb6"),
	HX_HCSTRING("boxIB","\xa4","\xd6","\xfe","\xb6"),
	HX_HCSTRING("skydomeVB","\x30","\xa9","\xb0","\x7f"),
	HX_HCSTRING("skydomeIB","\xdd","\x9d","\xb0","\x7f"),
	HX_HCSTRING("sphereVB","\x79","\x97","\x4a","\xeb"),
	HX_HCSTRING("sphereIB","\x26","\x8c","\x4a","\xeb"),
	HX_HCSTRING("coneVB","\xcf","\x83","\xd1","\xc7"),
	HX_HCSTRING("coneIB","\x7c","\x78","\xd1","\xc7"),
	HX_HCSTRING("createScreenAlignedData","\x06","\x68","\xb2","\xb8"),
	HX_HCSTRING("createRectData","\x8a","\xb0","\xb5","\xbf"),
	HX_HCSTRING("createBoxData","\x39","\x7a","\x69","\x7a"),
	HX_HCSTRING("createSkydomeData","\xb2","\x43","\xe4","\x92"),
	HX_HCSTRING("createSphereData","\xf3","\xb9","\x19","\x6e"),
	HX_HCSTRING("createConeData","\xc9","\xe8","\x81","\xc8"),
	HX_HCSTRING("skydomeIndices","\x83","\xc2","\x4d","\x78"),
	HX_HCSTRING("skydomePos","\xf0","\xfa","\xde","\x3a"),
	HX_HCSTRING("skydomeNor","\x6d","\x76","\xdd","\x3a"),
	HX_HCSTRING("sphereIndices","\x9a","\x6b","\x02","\x82"),
	HX_HCSTRING("spherePos","\x87","\x8c","\xf5","\xf5"),
	HX_HCSTRING("coneIndices","\x84","\x07","\x95","\x1b"),
	HX_HCSTRING("conePos","\x71","\x6b","\x7d","\x0f"),
	::String(null())
};

void ConstData_obj::__register()
{
	hx::Object *dummy = new ConstData_obj;
	ConstData_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("iron.data.ConstData","\x2f","\x5e","\x91","\xdf");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &ConstData_obj::__GetStatic;
	__mClass->mSetStaticField = &ConstData_obj::__SetStatic;
	__mClass->mMarkFunc = ConstData_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(ConstData_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< ConstData_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = ConstData_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = ConstData_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = ConstData_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void ConstData_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_11_boot)
HXDLIN(  11)		screenAlignedVB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_12_boot)
HXDLIN(  12)		screenAlignedIB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_13_boot)
HXDLIN(  13)		rectVB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_14_boot)
HXDLIN(  14)		rectIB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_15_boot)
HXDLIN(  15)		boxVB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_16_boot)
HXDLIN(  16)		boxIB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_20_boot)
HXDLIN(  20)		skydomeVB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_22_boot)
HXDLIN(  22)		skydomeIB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_23_boot)
HXDLIN(  23)		sphereVB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_24_boot)
HXDLIN(  24)		sphereIB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_25_boot)
HXDLIN(  25)		coneVB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_26_boot)
HXDLIN(  26)		coneIB = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_181_boot)
HXDLIN( 181)		skydomeIndices = ::Array_obj< int >::fromData( _hx_array_data_df915e2f_37,1728);
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_182_boot)
HXDLIN( 182)		skydomePos = ::Array_obj< Float >::fromData( _hx_array_data_df915e2f_39,870);
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_183_boot)
HXDLIN( 183)		skydomeNor = ::Array_obj< Float >::fromData( _hx_array_data_df915e2f_41,870);
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_185_boot)
HXDLIN( 185)		sphereIndices = ::Array_obj< int >::fromData( _hx_array_data_df915e2f_43,672);
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_186_boot)
HXDLIN( 186)		spherePos = ::Array_obj< Float >::fromData( _hx_array_data_df915e2f_45,1440);
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_188_boot)
HXDLIN( 188)		coneIndices = ::Array_obj< int >::fromData( _hx_array_data_df915e2f_47,90);
            	}
{
            	HX_STACKFRAME(&_hx_pos_8b47882fee7bb01b_189_boot)
HXDLIN( 189)		conePos = ::Array_obj< Float >::fromData( _hx_array_data_df915e2f_49,198);
            	}
}

} // end namespace iron
} // end namespace data
