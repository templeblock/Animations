// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_iron_system_VirtualButton
#include <iron/system/VirtualButton.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_0070f08c40120be8_69_new,"iron.system.VirtualButton","new",0x5ae42456,"iron.system.VirtualButton.new","iron/system/Input.hx",69,0x32439d6d)
namespace iron{
namespace _hx_system{

void VirtualButton_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_0070f08c40120be8_69_new)
HXLINE(  72)		this->down = false;
HXLINE(  71)		this->released = false;
HXLINE(  70)		this->started = false;
            	}

Dynamic VirtualButton_obj::__CreateEmpty() { return new VirtualButton_obj; }

void *VirtualButton_obj::_hx_vtable = 0;

Dynamic VirtualButton_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< VirtualButton_obj > _hx_result = new VirtualButton_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool VirtualButton_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x42e93666;
}


VirtualButton_obj::VirtualButton_obj()
{
}

hx::Val VirtualButton_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"down") ) { return hx::Val( down ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"started") ) { return hx::Val( started ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"released") ) { return hx::Val( released ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val VirtualButton_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"down") ) { down=inValue.Cast< bool >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"started") ) { started=inValue.Cast< bool >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"released") ) { released=inValue.Cast< bool >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void VirtualButton_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("started","\x41","\x29","\x1b","\x35"));
	outFields->push(HX_HCSTRING("released","\xbd","\x88","\xe7","\x76"));
	outFields->push(HX_HCSTRING("down","\x62","\xf8","\x6d","\x42"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo VirtualButton_obj_sMemberStorageInfo[] = {
	{hx::fsBool,(int)offsetof(VirtualButton_obj,started),HX_HCSTRING("started","\x41","\x29","\x1b","\x35")},
	{hx::fsBool,(int)offsetof(VirtualButton_obj,released),HX_HCSTRING("released","\xbd","\x88","\xe7","\x76")},
	{hx::fsBool,(int)offsetof(VirtualButton_obj,down),HX_HCSTRING("down","\x62","\xf8","\x6d","\x42")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *VirtualButton_obj_sStaticStorageInfo = 0;
#endif

static ::String VirtualButton_obj_sMemberFields[] = {
	HX_HCSTRING("started","\x41","\x29","\x1b","\x35"),
	HX_HCSTRING("released","\xbd","\x88","\xe7","\x76"),
	HX_HCSTRING("down","\x62","\xf8","\x6d","\x42"),
	::String(null()) };

static void VirtualButton_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(VirtualButton_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void VirtualButton_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(VirtualButton_obj::__mClass,"__mClass");
};

#endif

hx::Class VirtualButton_obj::__mClass;

void VirtualButton_obj::__register()
{
	hx::Object *dummy = new VirtualButton_obj;
	VirtualButton_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("iron.system.VirtualButton","\x64","\x01","\x82","\xd8");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = VirtualButton_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(VirtualButton_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< VirtualButton_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = VirtualButton_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = VirtualButton_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = VirtualButton_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace iron
} // end namespace system
