// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_iron_math_Quat
#include <iron/math/Quat.h>
#endif
#ifndef INCLUDED_iron_math_Vec4
#include <iron/math/Vec4.h>
#endif
#ifndef INCLUDED_iron_object_Transform
#include <iron/object/Transform.h>
#endif
#ifndef INCLUDED_iron_system_Time
#include <iron/system/Time.h>
#endif
#ifndef INCLUDED_iron_system_Tween
#include <iron/system/Tween.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_13_to,"iron.system.Tween","to",0xe340a1f7,"iron.system.Tween.to","iron/system/Tween.hx",13,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_47_timer,"iron.system.Tween","timer",0xafb978c9,"iron.system.Tween.timer","iron/system/Tween.hx",47,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_50_stop,"iron.system.Tween","stop",0xad81437e,"iron.system.Tween.stop","iron/system/Tween.hx",50,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_56_reset,"iron.system.Tween","reset",0x864c02d3,"iron.system.Tween.reset","iron/system/Tween.hx",56,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_59_update,"iron.system.Tween","update",0x7ac3b085,"iron.system.Tween.update","iron/system/Tween.hx",59,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_134_easeLinear,"iron.system.Tween","easeLinear",0xea7b10ef,"iron.system.Tween.easeLinear","iron/system/Tween.hx",134,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_135_easeSineIn,"iron.system.Tween","easeSineIn",0xb6fa829c,"iron.system.Tween.easeSineIn","iron/system/Tween.hx",135,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_136_easeSineOut,"iron.system.Tween","easeSineOut",0x643c59f7,"iron.system.Tween.easeSineOut","iron/system/Tween.hx",136,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_137_easeSineInOut,"iron.system.Tween","easeSineInOut",0xb65c5f52,"iron.system.Tween.easeSineInOut","iron/system/Tween.hx",137,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_138_easeQuadIn,"iron.system.Tween","easeQuadIn",0xca7a3796,"iron.system.Tween.easeQuadIn","iron/system/Tween.hx",138,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_139_easeQuadOut,"iron.system.Tween","easeQuadOut",0x607affbd,"iron.system.Tween.easeQuadOut","iron/system/Tween.hx",139,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_140_easeQuadInOut,"iron.system.Tween","easeQuadInOut",0x3be48298,"iron.system.Tween.easeQuadInOut","iron/system/Tween.hx",140,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_141_easeCubicIn,"iron.system.Tween","easeCubicIn",0xb1122d85,"iron.system.Tween.easeCubicIn","iron/system/Tween.hx",141,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_142_easeCubicOut,"iron.system.Tween","easeCubicOut",0x3eda3aee,"iron.system.Tween.easeCubicOut","iron/system/Tween.hx",142,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_143_easeCubicInOut,"iron.system.Tween","easeCubicInOut",0xdcedac09,"iron.system.Tween.easeCubicInOut","iron/system/Tween.hx",143,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_144_easeQuartIn,"iron.system.Tween","easeQuartIn",0x69d7e97a,"iron.system.Tween.easeQuartIn","iron/system/Tween.hx",144,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_145_easeQuartOut,"iron.system.Tween","easeQuartOut",0x3318f559,"iron.system.Tween.easeQuartOut","iron/system/Tween.hx",145,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_146_easeQuartInOut,"iron.system.Tween","easeQuartInOut",0x6a201734,"iron.system.Tween.easeQuartInOut","iron/system/Tween.hx",146,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_147_easeQuintIn,"iron.system.Tween","easeQuintIn",0x0267b306,"iron.system.Tween.easeQuintIn","iron/system/Tween.hx",147,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_148_easeQuintOut,"iron.system.Tween","easeQuintOut",0x1859864d,"iron.system.Tween.easeQuintOut","iron/system/Tween.hx",148,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_149_easeQuintInOut,"iron.system.Tween","easeQuintInOut",0x8d5dcd28,"iron.system.Tween.easeQuintInOut","iron/system/Tween.hx",149,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_150_easeExpoIn,"iron.system.Tween","easeExpoIn",0xc2582cc1,"iron.system.Tween.easeExpoIn","iron/system/Tween.hx",150,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_151_easeExpoOut,"iron.system.Tween","easeExpoOut",0x4ad39032,"iron.system.Tween.easeExpoOut","iron/system/Tween.hx",151,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_152_easeExpoInOut,"iron.system.Tween","easeExpoInOut",0xd9d9da4d,"iron.system.Tween.easeExpoInOut","iron/system/Tween.hx",152,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_153_easeCircIn,"iron.system.Tween","easeCircIn",0x53e812a6,"iron.system.Tween.easeCircIn","iron/system/Tween.hx",153,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_154_easeCircOut,"iron.system.Tween","easeCircOut",0x172cd2ad,"iron.system.Tween.easeCircOut","iron/system/Tween.hx",154,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_155_easeCircInOut,"iron.system.Tween","easeCircInOut",0x60e4f188,"iron.system.Tween.easeCircInOut","iron/system/Tween.hx",155,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_156_easeBackIn,"iron.system.Tween","easeBackIn",0x4873f0f6,"iron.system.Tween.easeBackIn","iron/system/Tween.hx",156,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_157_easeBackOut,"iron.system.Tween","easeBackOut",0x1d037a5d,"iron.system.Tween.easeBackOut","iron/system/Tween.hx",157,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_158_easeBackInOut,"iron.system.Tween","easeBackInOut",0x8778e538,"iron.system.Tween.easeBackInOut","iron/system/Tween.hx",158,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_4_boot,"iron.system.Tween","boot",0xa240d7ae,"iron.system.Tween.boot","iron/system/Tween.hx",4,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_6_boot,"iron.system.Tween","boot",0xa240d7ae,"iron.system.Tween.boot","iron/system/Tween.hx",6,0x7d6229ac)
HX_LOCAL_STACK_FRAME(_hx_pos_666b6212ace27b5d_11_boot,"iron.system.Tween","boot",0xa240d7ae,"iron.system.Tween.boot","iron/system/Tween.hx",11,0x7d6229ac)
namespace iron{
namespace _hx_system{

void Tween_obj::__construct() { }

Dynamic Tween_obj::__CreateEmpty() { return new Tween_obj; }

void *Tween_obj::_hx_vtable = 0;

Dynamic Tween_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Tween_obj > _hx_result = new Tween_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Tween_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7fa1c728;
}

Float Tween_obj::DEFAULT_OVERSHOOT;

::Array< ::Dynamic> Tween_obj::eases;

::Array< ::Dynamic> Tween_obj::anims;

 ::Dynamic Tween_obj::to( ::Dynamic anim){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_13_to)
HXLINE(  14)		anim->__SetField(HX_("_time",ec,e7,0d,00),(int)0,hx::paccDynamic);
HXLINE(  15)		 ::Dynamic _hx_tmp;
HXDLIN(  15)		bool _hx_tmp1;
HXDLIN(  15)		if (hx::IsNotNull( anim->__Field(HX_("delay",83,d7,26,d7),hx::paccDynamic) )) {
HXLINE(  15)			_hx_tmp1 = hx::IsGreater( anim->__Field(HX_("delay",83,d7,26,d7),hx::paccDynamic),((Float)0.0) );
            		}
            		else {
HXLINE(  15)			_hx_tmp1 = false;
            		}
HXDLIN(  15)		if (_hx_tmp1) {
HXLINE(  15)			_hx_tmp = false;
            		}
            		else {
HXLINE(  15)			_hx_tmp = true;
            		}
HXDLIN(  15)		anim->__SetField(HX_("isPlaying",a4,8c,16,8e),_hx_tmp,hx::paccDynamic);
HXLINE(  17)		if (hx::IsNull( anim->__Field(HX_("ease",ee,8b,0c,43),hx::paccDynamic) )) {
HXLINE(  17)			anim->__SetField(HX_("ease",ee,8b,0c,43),(int)0,hx::paccDynamic);
            		}
HXLINE(  19)		bool _hx_tmp2;
HXDLIN(  19)		if (hx::IsNotNull(  ::Dynamic(anim->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )) {
HXLINE(  19)			_hx_tmp2 = hx::IsNotNull(  ::Dynamic(anim->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic)) );
            		}
            		else {
HXLINE(  19)			_hx_tmp2 = false;
            		}
HXDLIN(  19)		if (_hx_tmp2) {
HXLINE(  21)			anim->__SetField(HX_("_comps",c5,7b,44,46),::Array_obj< int >::__new(0),hx::paccDynamic);
HXDLIN(  21)			anim->__SetField(HX_("_x",39,53,00,00),::Array_obj< Float >::__new(0),hx::paccDynamic);
HXDLIN(  21)			anim->__SetField(HX_("_y",3a,53,00,00),::Array_obj< Float >::__new(0),hx::paccDynamic);
HXDLIN(  21)			anim->__SetField(HX_("_z",3b,53,00,00),::Array_obj< Float >::__new(0),hx::paccDynamic);
HXDLIN(  21)			anim->__SetField(HX_("_w",38,53,00,00),::Array_obj< Float >::__new(0),hx::paccDynamic);
HXDLIN(  21)			anim->__SetField(HX_("_normalize",4e,b3,43,07),::Array_obj< bool >::__new(0),hx::paccDynamic);
HXLINE(  22)			{
HXLINE(  22)				int _g = (int)0;
HXDLIN(  22)				::Array< ::String > _g1 = ::Reflect_obj::fields( ::Dynamic(anim->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic)));
HXDLIN(  22)				while((_g < _g1->length)){
HXLINE(  22)					::String p = _g1->__get(_g);
HXDLIN(  22)					_g = (_g + (int)1);
HXLINE(  23)					 ::Dynamic val = ::Reflect_obj::getProperty( ::Dynamic(anim->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)),p);
HXLINE(  24)					bool _hx_tmp3;
HXDLIN(  24)					if (!(::Std_obj::is(val,hx::ClassOf< ::iron::math::Vec4 >()))) {
HXLINE(  24)						_hx_tmp3 = ::Std_obj::is(val,hx::ClassOf< ::iron::math::Quat >());
            					}
            					else {
HXLINE(  24)						_hx_tmp3 = true;
            					}
HXDLIN(  24)					if (_hx_tmp3) {
HXLINE(  25)						( (::Array< int >)(anim->__Field(HX_("_comps",c5,7b,44,46),hx::paccDynamic)) )->push((int)4);
HXLINE(  26)						( (::Array< Float >)(anim->__Field(HX_("_x",39,53,00,00),hx::paccDynamic)) )->push( ::Dynamic(val->__Field(HX_("x",78,00,00,00),hx::paccDynamic)));
HXLINE(  27)						( (::Array< Float >)(anim->__Field(HX_("_y",3a,53,00,00),hx::paccDynamic)) )->push( ::Dynamic(val->__Field(HX_("y",79,00,00,00),hx::paccDynamic)));
HXLINE(  28)						( (::Array< Float >)(anim->__Field(HX_("_z",3b,53,00,00),hx::paccDynamic)) )->push( ::Dynamic(val->__Field(HX_("z",7a,00,00,00),hx::paccDynamic)));
HXLINE(  29)						( (::Array< Float >)(anim->__Field(HX_("_w",38,53,00,00),hx::paccDynamic)) )->push( ::Dynamic(val->__Field(HX_("w",77,00,00,00),hx::paccDynamic)));
HXLINE(  30)						::Array< bool > anim1 = ( (::Array< bool >)(anim->__Field(HX_("_normalize",4e,b3,43,07),hx::paccDynamic)) );
HXDLIN(  30)						anim1->push(::Std_obj::is(val,hx::ClassOf< ::iron::math::Quat >()));
            					}
            					else {
HXLINE(  33)						( (::Array< int >)(anim->__Field(HX_("_comps",c5,7b,44,46),hx::paccDynamic)) )->push((int)1);
HXLINE(  34)						( (::Array< Float >)(anim->__Field(HX_("_x",39,53,00,00),hx::paccDynamic)) )->push(val);
HXLINE(  35)						( (::Array< Float >)(anim->__Field(HX_("_y",3a,53,00,00),hx::paccDynamic)) )->push((int)0);
HXLINE(  36)						( (::Array< Float >)(anim->__Field(HX_("_z",3b,53,00,00),hx::paccDynamic)) )->push((int)0);
HXLINE(  37)						( (::Array< Float >)(anim->__Field(HX_("_w",38,53,00,00),hx::paccDynamic)) )->push((int)0);
            					}
            				}
            			}
            		}
HXLINE(  42)		::iron::_hx_system::Tween_obj::anims->push(anim);
HXLINE(  43)		return anim;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,to,return )

 ::Dynamic Tween_obj::timer(Float delay, ::Dynamic done){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_47_timer)
HXDLIN(  47)		return ::iron::_hx_system::Tween_obj::to( ::Dynamic(hx::Anon_obj::Create(5)
            			->setFixed(0,HX_("target",51,f3,ec,86),null())
            			->setFixed(1,HX_("props",70,e7,8f,c8),null())
            			->setFixed(2,HX_("delay",83,d7,26,d7),delay)
            			->setFixed(3,HX_("duration",54,0f,8e,14),(int)0)
            			->setFixed(4,HX_("done",82,f0,6d,42),done)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Tween_obj,timer,return )

void Tween_obj::stop( ::Dynamic anim){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_50_stop)
HXLINE(  51)		anim->__SetField(HX_("isPlaying",a4,8c,16,8e),false,hx::paccDynamic);
HXLINE(  52)		::iron::_hx_system::Tween_obj::anims->remove(anim);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,stop,(void))

void Tween_obj::reset(){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_56_reset)
HXDLIN(  56)		::iron::_hx_system::Tween_obj::anims = ::Array_obj< ::Dynamic>::__new(0);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Tween_obj,reset,(void))

void Tween_obj::update(){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_59_update)
HXLINE(  60)		Float d = (((Float)0.0166666666666666664) * ::iron::_hx_system::Time_obj::scale);
HXLINE(  61)		int i = ::iron::_hx_system::Tween_obj::anims->length;
HXLINE(  62)		while(true){
HXLINE(  62)			bool _hx_tmp;
HXDLIN(  62)			i = (i - (int)1);
HXDLIN(  62)			if (((i + (int)1) > (int)0)) {
HXLINE(  62)				_hx_tmp = (::iron::_hx_system::Tween_obj::anims->length > (int)0);
            			}
            			else {
HXLINE(  62)				_hx_tmp = false;
            			}
HXDLIN(  62)			if (!(_hx_tmp)) {
HXLINE(  62)				goto _hx_goto_5;
            			}
HXLINE(  63)			 ::Dynamic a = ::iron::_hx_system::Tween_obj::anims->__get(i);
HXLINE(  65)			if (hx::IsGreater( a->__Field(HX_("delay",83,d7,26,d7),hx::paccDynamic),(int)0 )) {
HXLINE(  66)				 ::Dynamic a1 = a;
HXDLIN(  66)				a1->__SetField(HX_("delay",83,d7,26,d7),(a1->__Field(HX_("delay",83,d7,26,d7),hx::paccDynamic) - d),hx::paccDynamic);
HXLINE(  67)				if (hx::IsGreater( a->__Field(HX_("delay",83,d7,26,d7),hx::paccDynamic),(int)0 )) {
HXLINE(  67)					continue;
            				}
            			}
HXLINE(  70)			 ::Dynamic a2 = a;
HXDLIN(  70)			a2->__SetField(HX_("_time",ec,e7,0d,00),(a2->__Field(HX_("_time",ec,e7,0d,00),hx::paccDynamic) + d),hx::paccDynamic);
HXLINE(  71)			a->__SetField(HX_("isPlaying",a4,8c,16,8e),hx::IsLess( a->__Field(HX_("_time",ec,e7,0d,00),hx::paccDynamic),( (Float)(a->__Field(HX_("duration",54,0f,8e,14),hx::paccDynamic)) ) ),hx::paccDynamic);
HXLINE(  73)			if (hx::IsNotNull(  ::Dynamic(a->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)) )) {
HXLINE(  75)				if (::Std_obj::is( ::Dynamic(a->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)),hx::ClassOf< ::iron::object::Transform >())) {
HXLINE(  75)					 ::Dynamic(a->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic))->__SetField(HX_("dirty",12,50,d0,d9),true,hx::paccDynamic);
            				}
HXLINE(  78)				::Array< ::String > ps = ::Reflect_obj::fields( ::Dynamic(a->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic)));
HXLINE(  79)				{
HXLINE(  79)					int _g1 = (int)0;
HXDLIN(  79)					int _g = ps->length;
HXDLIN(  79)					while((_g1 < _g)){
HXLINE(  79)						_g1 = (_g1 + (int)1);
HXDLIN(  79)						int i1 = (_g1 - (int)1);
HXLINE(  80)						::String p = ps->__get(i1);
HXLINE(  81)						Float k = ((Float)a->__Field(HX_("_time",ec,e7,0d,00),hx::paccDynamic) / (Float)( (Float)(a->__Field(HX_("duration",54,0f,8e,14),hx::paccDynamic)) ));
HXLINE(  82)						if ((k > (int)1)) {
HXLINE(  82)							k = (int)1;
            						}
HXLINE(  84)						if ((( (int)( ::Dynamic(a->__Field(HX_("_comps",c5,7b,44,46),hx::paccDynamic))->__GetItem(i1)) ) == (int)1)) {
HXLINE(  85)							Float fromVal = ( (Float)( ::Dynamic(a->__Field(HX_("_x",39,53,00,00),hx::paccDynamic))->__GetItem(i1)) );
HXLINE(  86)							Float toVal = ( (Float)(::Reflect_obj::getProperty( ::Dynamic(a->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic)),p)) );
HXLINE(  87)							Float val = (fromVal + ((toVal - fromVal) * ( (Float)(::iron::_hx_system::Tween_obj::eases->__get(( (int)(a->__Field(HX_("ease",ee,8b,0c,43),hx::paccDynamic)) ))(k)) )));
HXLINE(  88)							::Reflect_obj::setProperty( ::Dynamic(a->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)),p,val);
            						}
            						else {
HXLINE(  91)							 ::Dynamic obj = ::Reflect_obj::getProperty( ::Dynamic(a->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic)),p);
HXLINE(  92)							Float toX = ( (Float)(::Reflect_obj::getProperty(obj,HX_("x",78,00,00,00))) );
HXLINE(  93)							Float toY = ( (Float)(::Reflect_obj::getProperty(obj,HX_("y",79,00,00,00))) );
HXLINE(  94)							Float toZ = ( (Float)(::Reflect_obj::getProperty(obj,HX_("z",7a,00,00,00))) );
HXLINE(  95)							Float toW = ( (Float)(::Reflect_obj::getProperty(obj,HX_("w",77,00,00,00))) );
HXLINE(  96)							if (( (bool)( ::Dynamic(a->__Field(HX_("_normalize",4e,b3,43,07),hx::paccDynamic))->__GetItem(i1)) )) {
HXLINE(  97)								Float qdot = (( (Float)( ::Dynamic(a->__Field(HX_("_x",39,53,00,00),hx::paccDynamic))->__GetItem(i1)) ) * toX);
HXDLIN(  97)								Float qdot1 = (qdot + (( (Float)( ::Dynamic(a->__Field(HX_("_y",3a,53,00,00),hx::paccDynamic))->__GetItem(i1)) ) * toY));
HXDLIN(  97)								Float qdot2 = (qdot1 + (( (Float)( ::Dynamic(a->__Field(HX_("_z",3b,53,00,00),hx::paccDynamic))->__GetItem(i1)) ) * toZ));
HXDLIN(  97)								Float qdot3 = (qdot2 + (( (Float)( ::Dynamic(a->__Field(HX_("_w",38,53,00,00),hx::paccDynamic))->__GetItem(i1)) ) * toW));
HXLINE(  98)								if ((qdot3 < ((Float)0.0))) {
HXLINE(  99)									toX = -(toX);
HXDLIN(  99)									toY = -(toY);
HXDLIN(  99)									toZ = -(toZ);
HXDLIN(  99)									toW = -(toW);
            								}
            							}
HXLINE( 102)							Float a3 = ( (Float)( ::Dynamic(a->__Field(HX_("_x",39,53,00,00),hx::paccDynamic))->__GetItem(i1)) );
HXDLIN( 102)							Float x = (toX - ( (Float)( ::Dynamic(a->__Field(HX_("_x",39,53,00,00),hx::paccDynamic))->__GetItem(i1)) ));
HXDLIN( 102)							Float x1 = (a3 + (x * ( (Float)(::iron::_hx_system::Tween_obj::eases->__get(( (int)(a->__Field(HX_("ease",ee,8b,0c,43),hx::paccDynamic)) ))(k)) )));
HXLINE( 103)							Float a4 = ( (Float)( ::Dynamic(a->__Field(HX_("_y",3a,53,00,00),hx::paccDynamic))->__GetItem(i1)) );
HXDLIN( 103)							Float y = (toY - ( (Float)( ::Dynamic(a->__Field(HX_("_y",3a,53,00,00),hx::paccDynamic))->__GetItem(i1)) ));
HXDLIN( 103)							Float y1 = (a4 + (y * ( (Float)(::iron::_hx_system::Tween_obj::eases->__get(( (int)(a->__Field(HX_("ease",ee,8b,0c,43),hx::paccDynamic)) ))(k)) )));
HXLINE( 104)							Float a5 = ( (Float)( ::Dynamic(a->__Field(HX_("_z",3b,53,00,00),hx::paccDynamic))->__GetItem(i1)) );
HXDLIN( 104)							Float z = (toZ - ( (Float)( ::Dynamic(a->__Field(HX_("_z",3b,53,00,00),hx::paccDynamic))->__GetItem(i1)) ));
HXDLIN( 104)							Float z1 = (a5 + (z * ( (Float)(::iron::_hx_system::Tween_obj::eases->__get(( (int)(a->__Field(HX_("ease",ee,8b,0c,43),hx::paccDynamic)) ))(k)) )));
HXLINE( 105)							Float a6 = ( (Float)( ::Dynamic(a->__Field(HX_("_w",38,53,00,00),hx::paccDynamic))->__GetItem(i1)) );
HXDLIN( 105)							Float w = (toW - ( (Float)( ::Dynamic(a->__Field(HX_("_w",38,53,00,00),hx::paccDynamic))->__GetItem(i1)) ));
HXDLIN( 105)							Float w1 = (a6 + (w * ( (Float)(::iron::_hx_system::Tween_obj::eases->__get(( (int)(a->__Field(HX_("ease",ee,8b,0c,43),hx::paccDynamic)) ))(k)) )));
HXLINE( 106)							if (( (bool)( ::Dynamic(a->__Field(HX_("_normalize",4e,b3,43,07),hx::paccDynamic))->__GetItem(i1)) )) {
HXLINE( 107)								Float l = ::Math_obj::sqrt(((((x1 * x1) + (y1 * y1)) + (z1 * z1)) + (w1 * w1)));
HXLINE( 108)								if ((l > ((Float)0.0))) {
HXLINE( 109)									l = ((Float)((Float)1.0) / (Float)l);
HXLINE( 110)									x1 = (x1 * l);
HXDLIN( 110)									y1 = (y1 * l);
HXDLIN( 110)									z1 = (z1 * l);
HXDLIN( 110)									w1 = (w1 * l);
            								}
            							}
HXLINE( 113)							 ::Dynamic t = ::Reflect_obj::getProperty( ::Dynamic(a->__Field(HX_("target",51,f3,ec,86),hx::paccDynamic)),p);
HXLINE( 114)							::Reflect_obj::setProperty(t,HX_("x",78,00,00,00),x1);
HXLINE( 115)							::Reflect_obj::setProperty(t,HX_("y",79,00,00,00),y1);
HXLINE( 116)							::Reflect_obj::setProperty(t,HX_("z",7a,00,00,00),z1);
HXLINE( 117)							::Reflect_obj::setProperty(t,HX_("w",77,00,00,00),w1);
            						}
            					}
            				}
            			}
HXLINE( 122)			if (( (bool)(a->__Field(HX_("isPlaying",a4,8c,16,8e),hx::paccDynamic)) )) {
HXLINE( 123)				if (hx::IsNotNull( a->__Field(HX_("tick",5d,c3,fc,4c),hx::paccDynamic) )) {
HXLINE( 123)					a->__Field(HX_("tick",5d,c3,fc,4c),hx::paccDynamic)();
            				}
            			}
            			else {
HXLINE( 126)				::iron::_hx_system::Tween_obj::anims->removeRange(i,(int)1);
HXLINE( 127)				i = (i - (int)1);
HXLINE( 128)				a->__SetField(HX_("isPlaying",a4,8c,16,8e),false,hx::paccDynamic);
HXLINE( 129)				if (hx::IsNotNull( a->__Field(HX_("done",82,f0,6d,42),hx::paccDynamic) )) {
HXLINE( 129)					a->__Field(HX_("done",82,f0,6d,42),hx::paccDynamic)();
            				}
            			}
            		}
            		_hx_goto_5:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Tween_obj,update,(void))

Float Tween_obj::easeLinear(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_134_easeLinear)
HXDLIN( 134)		return k;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeLinear,return )

Float Tween_obj::easeSineIn(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_135_easeSineIn)
HXDLIN( 135)		if ((k == (int)0)) {
HXDLIN( 135)			return (int)0;
            		}
            		else {
HXDLIN( 135)			if ((k == (int)1)) {
HXDLIN( 135)				return (int)1;
            			}
            			else {
HXDLIN( 135)				return ((int)1 - ::Math_obj::cos(((Float)(k * ::Math_obj::PI) / (Float)(int)2)));
            			}
            		}
HXDLIN( 135)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeSineIn,return )

Float Tween_obj::easeSineOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_136_easeSineOut)
HXDLIN( 136)		if ((k == (int)0)) {
HXDLIN( 136)			return (int)0;
            		}
            		else {
HXDLIN( 136)			if ((k == (int)1)) {
HXDLIN( 136)				return (int)1;
            			}
            			else {
HXDLIN( 136)				return ::Math_obj::sin((k * (::Math_obj::PI * ((Float)0.5))));
            			}
            		}
HXDLIN( 136)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeSineOut,return )

Float Tween_obj::easeSineInOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_137_easeSineInOut)
HXDLIN( 137)		if ((k == (int)0)) {
HXDLIN( 137)			return (int)0;
            		}
            		else {
HXDLIN( 137)			if ((k == (int)1)) {
HXDLIN( 137)				return (int)1;
            			}
            			else {
HXDLIN( 137)				return (((Float)-0.5) * (::Math_obj::cos((::Math_obj::PI * k)) - (int)1));
            			}
            		}
HXDLIN( 137)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeSineInOut,return )

Float Tween_obj::easeQuadIn(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_138_easeQuadIn)
HXDLIN( 138)		return (k * k);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeQuadIn,return )

Float Tween_obj::easeQuadOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_139_easeQuadOut)
HXDLIN( 139)		return (-(k) * (k - (int)2));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeQuadOut,return )

Float Tween_obj::easeQuadInOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_140_easeQuadInOut)
HXDLIN( 140)		if ((k < ((Float)0.5))) {
HXDLIN( 140)			return (((int)2 * k) * k);
            		}
            		else {
HXDLIN( 140)			k = (k - (int)1);
HXDLIN( 140)			return (((int)-2 * (k * k)) + (int)1);
            		}
HXDLIN( 140)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeQuadInOut,return )

Float Tween_obj::easeCubicIn(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_141_easeCubicIn)
HXDLIN( 141)		return ((k * k) * k);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeCubicIn,return )

Float Tween_obj::easeCubicOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_142_easeCubicOut)
HXDLIN( 142)		k = (k - (int)1);
HXDLIN( 142)		return (((k * k) * k) + (int)1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeCubicOut,return )

Float Tween_obj::easeCubicInOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_143_easeCubicInOut)
HXDLIN( 143)		k = (k * (int)2);
HXDLIN( 143)		if ((k < (int)1)) {
HXDLIN( 143)			return (((((Float)0.5) * k) * k) * k);
            		}
            		else {
HXDLIN( 143)			k = (k - (int)2);
HXDLIN( 143)			return (((Float)0.5) * (((k * k) * k) + (int)2));
            		}
HXDLIN( 143)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeCubicInOut,return )

Float Tween_obj::easeQuartIn(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_144_easeQuartIn)
HXDLIN( 144)		k = (k * k);
HXDLIN( 144)		return (k * k);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeQuartIn,return )

Float Tween_obj::easeQuartOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_145_easeQuartOut)
HXDLIN( 145)		k = (k - (int)1);
HXDLIN( 145)		k = (k * k);
HXDLIN( 145)		return ((int)1 - (k * k));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeQuartOut,return )

Float Tween_obj::easeQuartInOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_146_easeQuartInOut)
HXDLIN( 146)		k = (k * (int)2);
HXDLIN( 146)		if ((k < (int)1)) {
HXDLIN( 146)			k = (k * k);
HXDLIN( 146)			return ((((Float)0.5) * k) * k);
            		}
            		else {
HXDLIN( 146)			k = (k - (int)2);
HXDLIN( 146)			k = (k * k);
HXDLIN( 146)			return (((Float)-0.5) * ((k * k) - (int)2));
            		}
HXDLIN( 146)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeQuartInOut,return )

Float Tween_obj::easeQuintIn(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_147_easeQuintIn)
HXDLIN( 147)		Float k1 = k;
HXDLIN( 147)		k = (k * k);
HXDLIN( 147)		return ((k1 * k) * k);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeQuintIn,return )

Float Tween_obj::easeQuintOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_148_easeQuintOut)
HXDLIN( 148)		k = (k - (int)1);
HXDLIN( 148)		Float _hx_tmp = k;
HXDLIN( 148)		k = (k * k);
HXDLIN( 148)		return (((_hx_tmp * k) * k) + (int)1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeQuintOut,return )

Float Tween_obj::easeQuintInOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_149_easeQuintInOut)
HXDLIN( 149)		k = (k * (int)2);
HXDLIN( 149)		if ((k < (int)1)) {
HXDLIN( 149)			Float _hx_tmp = (((Float)0.5) * k);
HXDLIN( 149)			k = (k * k);
HXDLIN( 149)			return ((_hx_tmp * k) * k);
            		}
            		else {
HXDLIN( 149)			k = (k - (int)2);
HXDLIN( 149)			Float _hx_tmp1 = (((Float)0.5) * k);
HXDLIN( 149)			k = (k * k);
HXDLIN( 149)			return (((_hx_tmp1 * k) * k) + (int)1);
            		}
HXDLIN( 149)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeQuintInOut,return )

Float Tween_obj::easeExpoIn(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_150_easeExpoIn)
HXDLIN( 150)		if ((k == (int)0)) {
HXDLIN( 150)			return (int)0;
            		}
            		else {
HXDLIN( 150)			return ::Math_obj::pow((int)2,((int)10 * (k - (int)1)));
            		}
HXDLIN( 150)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeExpoIn,return )

Float Tween_obj::easeExpoOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_151_easeExpoOut)
HXDLIN( 151)		if ((k == (int)1)) {
HXDLIN( 151)			return (int)1;
            		}
            		else {
HXDLIN( 151)			return ((int)1 - ::Math_obj::pow((int)2,((int)-10 * k)));
            		}
HXDLIN( 151)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeExpoOut,return )

Float Tween_obj::easeExpoInOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_152_easeExpoInOut)
HXDLIN( 152)		if ((k == (int)0)) {
HXDLIN( 152)			return (int)0;
            		}
HXDLIN( 152)		if ((k == (int)1)) {
HXDLIN( 152)			return (int)1;
            		}
HXDLIN( 152)		k = ((Float)k / (Float)((Float)0.5));
HXDLIN( 152)		if ((k < ((Float)1.0))) {
HXDLIN( 152)			return (((Float)0.5) * ::Math_obj::pow((int)2,((int)10 * (k - (int)1))));
            		}
HXDLIN( 152)		k = (k - (int)1);
HXDLIN( 152)		return (((Float)0.5) * ((int)2 - ::Math_obj::pow((int)2,((int)-10 * k))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeExpoInOut,return )

Float Tween_obj::easeCircIn(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_153_easeCircIn)
HXDLIN( 153)		return -((::Math_obj::sqrt(((int)1 - (k * k))) - (int)1));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeCircIn,return )

Float Tween_obj::easeCircOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_154_easeCircOut)
HXDLIN( 154)		return ::Math_obj::sqrt(((int)1 - ((k - (int)1) * (k - (int)1))));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeCircOut,return )

Float Tween_obj::easeCircInOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_155_easeCircInOut)
HXDLIN( 155)		if ((k <= ((Float).5))) {
HXDLIN( 155)			return ((Float)(::Math_obj::sqrt(((int)1 - ((k * k) * (int)4))) - (int)1) / (Float)(int)-2);
            		}
            		else {
HXDLIN( 155)			return ((Float)(::Math_obj::sqrt(((int)1 - (((k * (int)2) - (int)2) * ((k * (int)2) - (int)2)))) + (int)1) / (Float)(int)2);
            		}
HXDLIN( 155)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeCircInOut,return )

Float Tween_obj::easeBackIn(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_156_easeBackIn)
HXDLIN( 156)		if ((k == (int)0)) {
HXDLIN( 156)			return (int)0;
            		}
            		else {
HXDLIN( 156)			if ((k == (int)1)) {
HXDLIN( 156)				return (int)1;
            			}
            			else {
HXDLIN( 156)				return ((k * k) * ((((Float)2.70158) * k) - ((Float)1.70158)));
            			}
            		}
HXDLIN( 156)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeBackIn,return )

Float Tween_obj::easeBackOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_157_easeBackOut)
HXDLIN( 157)		if ((k == (int)0)) {
HXDLIN( 157)			return (int)0;
            		}
            		else {
HXDLIN( 157)			if ((k == (int)1)) {
HXDLIN( 157)				return (int)1;
            			}
            			else {
HXDLIN( 157)				k = (k - (int)1);
HXDLIN( 157)				Float _hx_tmp = (k * k);
HXDLIN( 157)				return ((_hx_tmp * ((((Float)2.70158) * k) + ((Float)1.70158))) + (int)1);
            			}
            		}
HXDLIN( 157)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeBackOut,return )

Float Tween_obj::easeBackInOut(Float k){
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_158_easeBackInOut)
HXDLIN( 158)		if ((k == (int)0)) {
HXDLIN( 158)			return (int)0;
            		}
            		else {
HXDLIN( 158)			if ((k == (int)1)) {
HXDLIN( 158)				return (int)1;
            			}
            			else {
HXDLIN( 158)				k = (k * (int)2);
HXDLIN( 158)				if ((k < (int)1)) {
HXDLIN( 158)					return (((Float)0.5) * ((k * k) * ((((Float)3.5949095) * k) - ((Float)2.5949095))));
            				}
            				else {
HXDLIN( 158)					k = (k - (int)2);
HXDLIN( 158)					Float _hx_tmp = (k * k);
HXDLIN( 158)					return (((Float)0.5) * ((_hx_tmp * ((((Float)3.5949095) * k) + ((Float)2.5949095))) + (int)2));
            				}
            			}
            		}
HXDLIN( 158)		return ((Float)0.);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Tween_obj,easeBackInOut,return )


Tween_obj::Tween_obj()
{
}

bool Tween_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 2:
		if (HX_FIELD_EQ(inName,"to") ) { outValue = to_dyn(); return true; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"stop") ) { outValue = stop_dyn(); return true; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"eases") ) { outValue = ( eases ); return true; }
		if (HX_FIELD_EQ(inName,"anims") ) { outValue = ( anims ); return true; }
		if (HX_FIELD_EQ(inName,"timer") ) { outValue = timer_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reset") ) { outValue = reset_dyn(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"update") ) { outValue = update_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"easeLinear") ) { outValue = easeLinear_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeSineIn") ) { outValue = easeSineIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeQuadIn") ) { outValue = easeQuadIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeExpoIn") ) { outValue = easeExpoIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeCircIn") ) { outValue = easeCircIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeBackIn") ) { outValue = easeBackIn_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"easeSineOut") ) { outValue = easeSineOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeQuadOut") ) { outValue = easeQuadOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeCubicIn") ) { outValue = easeCubicIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeQuartIn") ) { outValue = easeQuartIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeQuintIn") ) { outValue = easeQuintIn_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeExpoOut") ) { outValue = easeExpoOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeCircOut") ) { outValue = easeCircOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeBackOut") ) { outValue = easeBackOut_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"easeCubicOut") ) { outValue = easeCubicOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeQuartOut") ) { outValue = easeQuartOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeQuintOut") ) { outValue = easeQuintOut_dyn(); return true; }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"easeSineInOut") ) { outValue = easeSineInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeQuadInOut") ) { outValue = easeQuadInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeExpoInOut") ) { outValue = easeExpoInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeCircInOut") ) { outValue = easeCircInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeBackInOut") ) { outValue = easeBackInOut_dyn(); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"easeCubicInOut") ) { outValue = easeCubicInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeQuartInOut") ) { outValue = easeQuartInOut_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"easeQuintInOut") ) { outValue = easeQuintInOut_dyn(); return true; }
	}
	return false;
}

bool Tween_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"eases") ) { eases=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		if (HX_FIELD_EQ(inName,"anims") ) { anims=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Tween_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Tween_obj_sStaticStorageInfo[] = {
	{hx::fsFloat,(void *) &Tween_obj::DEFAULT_OVERSHOOT,HX_HCSTRING("DEFAULT_OVERSHOOT","\x8d","\xab","\xfe","\x3d")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Tween_obj::eases,HX_HCSTRING("eases","\xc5","\xe4","\xed","\x67")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Tween_obj::anims,HX_HCSTRING("anims","\x42","\xc9","\xe3","\x22")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Tween_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Tween_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Tween_obj::DEFAULT_OVERSHOOT,"DEFAULT_OVERSHOOT");
	HX_MARK_MEMBER_NAME(Tween_obj::eases,"eases");
	HX_MARK_MEMBER_NAME(Tween_obj::anims,"anims");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Tween_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Tween_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Tween_obj::DEFAULT_OVERSHOOT,"DEFAULT_OVERSHOOT");
	HX_VISIT_MEMBER_NAME(Tween_obj::eases,"eases");
	HX_VISIT_MEMBER_NAME(Tween_obj::anims,"anims");
};

#endif

hx::Class Tween_obj::__mClass;

static ::String Tween_obj_sStaticFields[] = {
	HX_HCSTRING("DEFAULT_OVERSHOOT","\x8d","\xab","\xfe","\x3d"),
	HX_HCSTRING("eases","\xc5","\xe4","\xed","\x67"),
	HX_HCSTRING("anims","\x42","\xc9","\xe3","\x22"),
	HX_HCSTRING("to","\x7b","\x65","\x00","\x00"),
	HX_HCSTRING("timer","\xc5","\xbf","\x35","\x10"),
	HX_HCSTRING("stop","\x02","\xf0","\x5b","\x4c"),
	HX_HCSTRING("reset","\xcf","\x49","\xc8","\xe6"),
	HX_HCSTRING("update","\x09","\x86","\x05","\x87"),
	HX_HCSTRING("easeLinear","\x73","\xf8","\xaf","\x05"),
	HX_HCSTRING("easeSineIn","\x20","\x6a","\x2f","\xd2"),
	HX_HCSTRING("easeSineOut","\xf3","\x05","\x52","\x17"),
	HX_HCSTRING("easeSineInOut","\x4e","\x02","\x32","\x9b"),
	HX_HCSTRING("easeQuadIn","\x1a","\x1f","\xaf","\xe5"),
	HX_HCSTRING("easeQuadOut","\xb9","\xab","\x90","\x13"),
	HX_HCSTRING("easeQuadInOut","\x94","\x25","\xba","\x20"),
	HX_HCSTRING("easeCubicIn","\x81","\xd9","\x27","\x64"),
	HX_HCSTRING("easeCubicOut","\x72","\x0b","\xbb","\x3e"),
	HX_HCSTRING("easeCubicInOut","\x8d","\xa5","\x06","\x33"),
	HX_HCSTRING("easeQuartIn","\x76","\x95","\xed","\x1c"),
	HX_HCSTRING("easeQuartOut","\xdd","\xc5","\xf9","\x32"),
	HX_HCSTRING("easeQuartInOut","\xb8","\x10","\x39","\xc0"),
	HX_HCSTRING("easeQuintIn","\x02","\x5f","\x7d","\xb5"),
	HX_HCSTRING("easeQuintOut","\xd1","\x56","\x3a","\x18"),
	HX_HCSTRING("easeQuintInOut","\xac","\xc6","\x76","\xe3"),
	HX_HCSTRING("easeExpoIn","\x45","\x14","\x8d","\xdd"),
	HX_HCSTRING("easeExpoOut","\x2e","\x3c","\xe9","\xfd"),
	HX_HCSTRING("easeExpoInOut","\x49","\x7d","\xaf","\xbe"),
	HX_HCSTRING("easeCircIn","\x2a","\xfa","\x1c","\x6f"),
	HX_HCSTRING("easeCircOut","\xa9","\x7e","\x42","\xca"),
	HX_HCSTRING("easeCircInOut","\x84","\x94","\xba","\x45"),
	HX_HCSTRING("easeBackIn","\x7a","\xd8","\xa8","\x63"),
	HX_HCSTRING("easeBackOut","\x59","\x26","\x19","\xd0"),
	HX_HCSTRING("easeBackInOut","\x34","\x88","\x4e","\x6c"),
	::String(null())
};

void Tween_obj::__register()
{
	hx::Object *dummy = new Tween_obj;
	Tween_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("iron.system.Tween","\x72","\xbe","\x27","\xf1");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Tween_obj::__GetStatic;
	__mClass->mSetStaticField = &Tween_obj::__SetStatic;
	__mClass->mMarkFunc = Tween_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Tween_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Tween_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Tween_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Tween_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Tween_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Tween_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_4_boot)
HXDLIN(   4)		DEFAULT_OVERSHOOT = ((Float)1.70158);
            	}
{
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_6_boot)
HXDLIN(   6)		eases = ::Array_obj< ::Dynamic>::__new(25)->init(0,::iron::_hx_system::Tween_obj::easeLinear_dyn())->init(1,::iron::_hx_system::Tween_obj::easeSineIn_dyn())->init(2,::iron::_hx_system::Tween_obj::easeSineOut_dyn())->init(3,::iron::_hx_system::Tween_obj::easeSineInOut_dyn())->init(4,::iron::_hx_system::Tween_obj::easeQuadIn_dyn())->init(5,::iron::_hx_system::Tween_obj::easeQuadOut_dyn())->init(6,::iron::_hx_system::Tween_obj::easeQuadInOut_dyn())->init(7,::iron::_hx_system::Tween_obj::easeCubicIn_dyn())->init(8,::iron::_hx_system::Tween_obj::easeCubicOut_dyn())->init(9,::iron::_hx_system::Tween_obj::easeCubicInOut_dyn())->init(10,::iron::_hx_system::Tween_obj::easeQuartIn_dyn())->init(11,::iron::_hx_system::Tween_obj::easeQuartOut_dyn())->init(12,::iron::_hx_system::Tween_obj::easeQuartInOut_dyn())->init(13,::iron::_hx_system::Tween_obj::easeQuintIn_dyn())->init(14,::iron::_hx_system::Tween_obj::easeQuintOut_dyn())->init(15,::iron::_hx_system::Tween_obj::easeQuintInOut_dyn())->init(16,::iron::_hx_system::Tween_obj::easeExpoIn_dyn())->init(17,::iron::_hx_system::Tween_obj::easeExpoOut_dyn())->init(18,::iron::_hx_system::Tween_obj::easeExpoInOut_dyn())->init(19,::iron::_hx_system::Tween_obj::easeCircIn_dyn())->init(20,::iron::_hx_system::Tween_obj::easeCircOut_dyn())->init(21,::iron::_hx_system::Tween_obj::easeCircInOut_dyn())->init(22,::iron::_hx_system::Tween_obj::easeBackIn_dyn())->init(23,::iron::_hx_system::Tween_obj::easeBackOut_dyn())->init(24,::iron::_hx_system::Tween_obj::easeBackInOut_dyn());
            	}
{
            	HX_STACKFRAME(&_hx_pos_666b6212ace27b5d_11_boot)
HXDLIN(  11)		anims = ::Array_obj< ::Dynamic>::__new(0);
            	}
}

} // end namespace iron
} // end namespace system
