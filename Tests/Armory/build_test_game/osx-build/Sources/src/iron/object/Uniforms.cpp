// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_c5728fd05c542abe
#define INCLUDED_c5728fd05c542abe
#include "cpp_float32array.h"
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_iron_RenderPath
#include <iron/RenderPath.h>
#endif
#ifndef INCLUDED_iron_RenderTarget
#include <iron/RenderTarget.h>
#endif
#ifndef INCLUDED_iron_RenderTargetRaw
#include <iron/RenderTargetRaw.h>
#endif
#ifndef INCLUDED_iron_Scene
#include <iron/Scene.h>
#endif
#ifndef INCLUDED_iron_data_CameraData
#include <iron/data/CameraData.h>
#endif
#ifndef INCLUDED_iron_data_Data
#include <iron/data/Data.h>
#endif
#ifndef INCLUDED_iron_data_LampData
#include <iron/data/LampData.h>
#endif
#ifndef INCLUDED_iron_data_MaterialContext
#include <iron/data/MaterialContext.h>
#endif
#ifndef INCLUDED_iron_data_MaterialData
#include <iron/data/MaterialData.h>
#endif
#ifndef INCLUDED_iron_data_Probe
#include <iron/data/Probe.h>
#endif
#ifndef INCLUDED_iron_data_ShaderContext
#include <iron/data/ShaderContext.h>
#endif
#ifndef INCLUDED_iron_data_WorldData
#include <iron/data/WorldData.h>
#endif
#ifndef INCLUDED_iron_math_Mat3
#include <iron/math/Mat3.h>
#endif
#ifndef INCLUDED_iron_math_Mat4
#include <iron/math/Mat4.h>
#endif
#ifndef INCLUDED_iron_math_Quat
#include <iron/math/Quat.h>
#endif
#ifndef INCLUDED_iron_math_Vec4
#include <iron/math/Vec4.h>
#endif
#ifndef INCLUDED_iron_object_Animation
#include <iron/object/Animation.h>
#endif
#ifndef INCLUDED_iron_object_BoneAnimation
#include <iron/object/BoneAnimation.h>
#endif
#ifndef INCLUDED_iron_object_CameraObject
#include <iron/object/CameraObject.h>
#endif
#ifndef INCLUDED_iron_object_LampObject
#include <iron/object/LampObject.h>
#endif
#ifndef INCLUDED_iron_object_MeshObject
#include <iron/object/MeshObject.h>
#endif
#ifndef INCLUDED_iron_object_Object
#include <iron/object/Object.h>
#endif
#ifndef INCLUDED_iron_object_ParticleSystem
#include <iron/object/ParticleSystem.h>
#endif
#ifndef INCLUDED_iron_object_Tilesheet
#include <iron/object/Tilesheet.h>
#endif
#ifndef INCLUDED_iron_object_Transform
#include <iron/object/Transform.h>
#endif
#ifndef INCLUDED_iron_object_Uniforms
#include <iron/object/Uniforms.h>
#endif
#ifndef INCLUDED_iron_system_Input
#include <iron/system/Input.h>
#endif
#ifndef INCLUDED_iron_system_Mouse
#include <iron/system/Mouse.h>
#endif
#ifndef INCLUDED_iron_system_Time
#include <iron/system/Time.h>
#endif
#ifndef INCLUDED_iron_system_VirtualInput
#include <iron/system/VirtualInput.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif
#ifndef INCLUDED_kha_Scheduler
#include <kha/Scheduler.h>
#endif
#ifndef INCLUDED_kha_System
#include <kha/System.h>
#endif
#ifndef INCLUDED_kha_arrays_Float32ArrayPrivate
#include <kha/arrays/Float32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_graphics4_ConstantLocation
#include <kha/graphics4/ConstantLocation.h>
#endif
#ifndef INCLUDED_kha_graphics4_CubeMap
#include <kha/graphics4/CubeMap.h>
#endif
#ifndef INCLUDED_kha_graphics4_Graphics
#include <kha/graphics4/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics4_MipMapFilter
#include <kha/graphics4/MipMapFilter.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureAddressing
#include <kha/graphics4/TextureAddressing.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureFilter
#include <kha/graphics4/TextureFilter.h>
#endif
#ifndef INCLUDED_kha_graphics4_TextureUnit
#include <kha/graphics4/TextureUnit.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix3
#include <kha/math/FastMatrix3.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix4
#include <kha/math/FastMatrix4.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_52_setConstants,"iron.object.Uniforms","setConstants",0xc2cdc173,"iron.object.Uniforms.setConstants","iron/object/Uniforms.hx",52,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_149_bindRenderTarget,"iron.object.Uniforms","bindRenderTarget",0x84ed568a,"iron.object.Uniforms.bindRenderTarget","iron/object/Uniforms.hx",149,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_214_setConstant,"iron.object.Uniforms","setConstant",0x65e55f00,"iron.object.Uniforms.setConstant","iron/object/Uniforms.hx",214,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_805_setMaterialConstants,"iron.object.Uniforms","setMaterialConstants",0xc45f7bcc,"iron.object.Uniforms.setMaterialConstants","iron/object/Uniforms.hx",805,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_842_setMaterialConstant,"iron.object.Uniforms","setMaterialConstant",0xf1f4f2c7,"iron.object.Uniforms.setMaterialConstant","iron/object/Uniforms.hx",842,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_24_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",24,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_36_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",36,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_37_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",37,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_38_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",38,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_39_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",39,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_40_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",40,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_41_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",41,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_43_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",43,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_44_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",44,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_45_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",45,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_46_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",46,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_47_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",47,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_48_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",48,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_49_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",49,0x2c37ec56)
HX_LOCAL_STACK_FRAME(_hx_pos_ed3d8b453cef9f5d_50_boot,"iron.object.Uniforms","boot",0xa2f5b918,"iron.object.Uniforms.boot","iron/object/Uniforms.hx",50,0x2c37ec56)
namespace iron{
namespace object{

void Uniforms_obj::__construct() { }

Dynamic Uniforms_obj::__CreateEmpty() { return new Uniforms_obj; }

void *Uniforms_obj::_hx_vtable = 0;

Dynamic Uniforms_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Uniforms_obj > _hx_result = new Uniforms_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Uniforms_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x19e66d26;
}

 ::iron::math::Mat4 Uniforms_obj::biasMat;

 ::iron::math::Mat4 Uniforms_obj::helpMat;

 ::iron::math::Mat4 Uniforms_obj::helpMat2;

 ::iron::math::Mat3 Uniforms_obj::helpMat3;

 ::iron::math::Vec4 Uniforms_obj::helpVec;

 ::iron::math::Vec4 Uniforms_obj::helpVec2;

 ::iron::math::Quat Uniforms_obj::helpQuat;

::Array< ::Dynamic> Uniforms_obj::externalTextureLinks;

::Array< ::Dynamic> Uniforms_obj::externalMat4Links;

::Array< ::Dynamic> Uniforms_obj::externalVec4Links;

::Array< ::Dynamic> Uniforms_obj::externalVec3Links;

::Array< ::Dynamic> Uniforms_obj::externalVec2Links;

::Array< ::Dynamic> Uniforms_obj::externalFloatLinks;

::Array< ::Dynamic> Uniforms_obj::externalFloatsLinks;

::Array< ::Dynamic> Uniforms_obj::externalIntLinks;

void Uniforms_obj::setConstants(::Dynamic g, ::iron::data::ShaderContext context, ::iron::object::Object object, ::iron::object::CameraObject camera, ::iron::object::LampObject lamp,::Array< ::String > bindParams){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_52_setConstants)
HXLINE(  54)		if (hx::IsNotNull( ( (::Array< ::Dynamic>)(context->raw->__Field(HX_("constants",8f,76,6b,44),hx::paccDynamic)) ) )) {
HXLINE(  55)			int _g1 = (int)0;
HXDLIN(  55)			int _g = ( (::Array< ::Dynamic>)(context->raw->__Field(HX_("constants",8f,76,6b,44),hx::paccDynamic)) )->length;
HXDLIN(  55)			while((_g1 < _g)){
HXLINE(  55)				_g1 = (_g1 + (int)1);
HXDLIN(  55)				int i = (_g1 - (int)1);
HXLINE(  56)				 ::Dynamic c =  ::Dynamic(context->raw->__Field(HX_("constants",8f,76,6b,44),hx::paccDynamic))->__GetItem(i);
HXLINE(  57)				::iron::object::Uniforms_obj::setConstant(g,object,camera,lamp,context->constants->__get(i),c);
            			}
            		}
HXLINE(  61)		if (hx::IsNotNull( bindParams )) {
HXLINE(  62)			int _g11 = (int)0;
HXDLIN(  62)			int _g2 = ::Std_obj::_hx_int(((Float)bindParams->length / (Float)(int)2));
HXDLIN(  62)			while((_g11 < _g2)){
HXLINE(  62)				_g11 = (_g11 + (int)1);
HXDLIN(  62)				int i1 = (_g11 - (int)1);
HXLINE(  63)				int pos = (i1 * (int)2);
HXLINE(  64)				::String rtID = bindParams->__get(pos);
HXLINE(  65)				::String samplerID = bindParams->__get((pos + (int)1));
HXLINE(  66)				bool attachDepth = false;
HXLINE(  67)				::String _hx_char = rtID.charAt((int)0);
HXLINE(  68)				if ((_hx_char == HX_("_",5f,00,00,00))) {
HXLINE(  69)					attachDepth = true;
HXLINE(  70)					rtID = rtID.substr((int)1,null());
            				}
HXLINE(  72)				 ::iron::RenderTarget rt;
HXDLIN(  72)				if (attachDepth) {
HXLINE(  72)					rt = ::iron::RenderPath_obj::active->depthToRenderTarget->get(rtID).StaticCast<  ::iron::RenderTarget >();
            				}
            				else {
HXLINE(  72)					rt = ::iron::RenderPath_obj::active->renderTargets->get(rtID).StaticCast<  ::iron::RenderTarget >();
            				}
HXLINE(  73)				::iron::object::Uniforms_obj::bindRenderTarget(g,rt,context,samplerID,attachDepth);
            			}
            		}
HXLINE(  78)		if (hx::IsNotNull( ( (::Array< ::Dynamic>)(context->raw->__Field(HX_("texture_units",cb,0f,52,01),hx::paccDynamic)) ) )) {
HXLINE(  79)			int _g12 = (int)0;
HXDLIN(  79)			int _g3 = ( (::Array< ::Dynamic>)(context->raw->__Field(HX_("texture_units",cb,0f,52,01),hx::paccDynamic)) )->length;
HXDLIN(  79)			while((_g12 < _g3)){
HXLINE(  79)				_g12 = (_g12 + (int)1);
HXDLIN(  79)				int j = (_g12 - (int)1);
HXLINE(  80)				::String tulink = ( (::String)( ::Dynamic(context->raw->__Field(HX_("texture_units",cb,0f,52,01),hx::paccDynamic))->__GetItem(j)->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) );
HXLINE(  81)				if (hx::IsNull( tulink )) {
HXLINE(  81)					continue;
            				}
HXLINE(  82)				::String tuid = ( (::String)( ::Dynamic(context->raw->__Field(HX_("texture_units",cb,0f,52,01),hx::paccDynamic))->__GetItem(j)->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) );
HXLINE(  84)				if ((tulink == HX_("_envmapRadiance",51,b4,3c,28))) {
HXLINE(  85)					 ::iron::data::WorldData w = ::iron::Scene_obj::active->world;
HXLINE(  86)					if (hx::IsNotNull( w )) {
HXLINE(  87)						::Dynamic context1 = context->textureUnits->__get(j);
HXDLIN(  87)						::kha::graphics4::Graphics_obj::setTexture(g,context1,w->getGlobalProbe()->radiance);
HXLINE(  88)						::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::LinearMipFilter_dyn());
            					}
            				}
            				else {
HXLINE(  91)					if ((tulink == HX_("_envmap",6e,8a,e8,74))) {
HXLINE(  92)						 ::iron::data::WorldData w1 = ::iron::Scene_obj::active->world;
HXLINE(  93)						if (hx::IsNotNull( w1 )) {
HXLINE(  93)							::kha::graphics4::Graphics_obj::setTexture(g,context->textureUnits->__get(j),w1->envmap);
            						}
            					}
            					else {
HXLINE(  95)						if ((tulink == HX_("_envmapBrdf",e0,46,00,d7))) {
HXLINE(  96)							::Dynamic context2 = context->textureUnits->__get(j);
HXDLIN(  96)							::kha::graphics4::Graphics_obj::setTexture(g,context2,::iron::Scene_obj::active->embedded->get(HX_("brdf.png",8d,ff,2a,3f)).StaticCast<  ::kha::Image >());
            						}
            						else {
HXLINE(  98)							if ((tulink == HX_("_noise8",fd,28,f2,98))) {
HXLINE(  99)								::Dynamic context3 = context->textureUnits->__get(j);
HXDLIN(  99)								::kha::graphics4::Graphics_obj::setTexture(g,context3,::iron::Scene_obj::active->embedded->get(HX_("noise8.png",99,4b,ba,f9)).StaticCast<  ::kha::Image >());
HXLINE( 100)								::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            							}
            							else {
HXLINE( 102)								if ((tulink == HX_("_noise64",d9,b2,f1,3a))) {
HXLINE( 103)									::Dynamic context4 = context->textureUnits->__get(j);
HXDLIN( 103)									::kha::graphics4::Graphics_obj::setTexture(g,context4,::iron::Scene_obj::active->embedded->get(HX_("noise64.png",93,12,5a,05)).StaticCast<  ::kha::Image >());
HXLINE( 104)									::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            								}
            								else {
HXLINE( 106)									if ((tulink == HX_("_blueNoise64",df,d3,5f,a2))) {
HXLINE( 107)										::Dynamic context5 = context->textureUnits->__get(j);
HXDLIN( 107)										::kha::graphics4::Graphics_obj::setTexture(g,context5,::iron::Scene_obj::active->embedded->get(HX_("blue_noise64.png",2e,82,23,04)).StaticCast<  ::kha::Image >());
HXLINE( 108)										::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            									}
            									else {
HXLINE( 110)										if ((tulink == HX_("_noise256",18,c3,87,58))) {
HXLINE( 111)											::Dynamic context6 = context->textureUnits->__get(j);
HXDLIN( 111)											::kha::graphics4::Graphics_obj::setTexture(g,context6,::iron::Scene_obj::active->embedded->get(HX_("noise256.png",74,c9,11,d9)).StaticCast<  ::kha::Image >());
HXLINE( 112)											::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            										}
            										else {
HXLINE( 114)											if ((tulink == HX_("_lampColorTexture",4f,45,71,0c))) {
HXLINE( 115)												if (hx::IsNotNull( lamp )) {
HXLINE( 116)													::kha::graphics4::Graphics_obj::setTexture(g,context->textureUnits->__get(j),lamp->data->colorTexture);
HXLINE( 117)													::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            												}
            											}
            											else {
HXLINE( 120)												if ((tulink == HX_("_iesTexture",a3,99,2e,08))) {
HXLINE( 121)													::Dynamic context7 = context->textureUnits->__get(j);
HXDLIN( 121)													::kha::graphics4::Graphics_obj::setTexture(g,context7,::iron::Scene_obj::active->embedded->get(HX_("iestexture.png",df,f3,69,d1)).StaticCast<  ::kha::Image >());
HXLINE( 122)													::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureAddressing_obj::Repeat_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
            												}
            												else {
HXLINE( 124)													if ((tulink != HX_("_sdfTexture",c5,13,96,d0))) {
HXLINE( 134)														if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalTextureLinks )) {
HXLINE( 135)															int _g21 = (int)0;
HXDLIN( 135)															::Array< ::Dynamic> _g31 = ::iron::object::Uniforms_obj::externalTextureLinks;
HXDLIN( 135)															while((_g21 < _g31->length)){
HXLINE( 135)																 ::Dynamic f = _g31->__get(_g21);
HXDLIN( 135)																_g21 = (_g21 + (int)1);
HXLINE( 136)																 ::kha::Image image = ( ( ::kha::Image)(f(tulink)) );
HXLINE( 137)																if (hx::IsNotNull( image )) {
HXLINE( 138)																	::kha::graphics4::Graphics_obj::setTexture(g,context->textureUnits->__get(j),image);
HXLINE( 140)																	goto _hx_goto_3;
            																}
            															}
            															_hx_goto_3:;
            														}
            													}
            												}
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(Uniforms_obj,setConstants,(void))

void Uniforms_obj::bindRenderTarget(::Dynamic g, ::iron::RenderTarget rt, ::iron::data::ShaderContext context,::String samplerID,bool attachDepth){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_149_bindRenderTarget)
HXDLIN( 149)		if (hx::IsNotNull( rt )) {
HXLINE( 150)			::Array< ::Dynamic> tus = ( (::Array< ::Dynamic>)(context->raw->__Field(HX_("texture_units",cb,0f,52,01),hx::paccDynamic)) );
HXLINE( 152)			{
HXLINE( 152)				int _g1 = (int)0;
HXDLIN( 152)				int _g = tus->length;
HXDLIN( 152)				while((_g1 < _g)){
HXLINE( 152)					_g1 = (_g1 + (int)1);
HXDLIN( 152)					int j = (_g1 - (int)1);
HXLINE( 153)					if ((samplerID == ( (::String)(tus->__get(j)->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) ))) {
HXLINE( 154)						bool isImage;
HXDLIN( 154)						if (hx::IsNotNull( tus->__get(j)->__Field(HX_("is_image",06,8e,25,dd),hx::paccDynamic) )) {
HXLINE( 154)							isImage = ( (bool)(tus->__get(j)->__Field(HX_("is_image",06,8e,25,dd),hx::paccDynamic)) );
            						}
            						else {
HXLINE( 154)							isImage = false;
            						}
HXLINE( 156)						if (hx::IsGreater( rt->raw->depth,(int)1 )) {
HXLINE( 157)							::kha::graphics4::Graphics_obj::setTexture3DParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::PointFilter_dyn(),::kha::graphics4::MipMapFilter_obj::LinearMipFilter_dyn());
HXLINE( 158)							context->paramsSet[j] = true;
            						}
HXLINE( 161)						if (isImage) {
HXLINE( 162)							::kha::graphics4::Graphics_obj::setImageTexture(g,context->textureUnits->__get(j),rt->image);
HXLINE( 166)							::kha::graphics4::Graphics_obj::setTexture3DParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::PointFilter_dyn(),::kha::graphics4::MipMapFilter_obj::LinearMipFilter_dyn());
HXLINE( 167)							context->paramsSet[j] = true;
            						}
            						else {
HXLINE( 171)							if (rt->isCubeMap) {
HXLINE( 172)								if (attachDepth) {
HXLINE( 172)									::kha::graphics4::Graphics_obj::setCubeMapDepth(g,context->textureUnits->__get(j),rt->cubeMap);
            								}
            								else {
HXLINE( 173)									::kha::graphics4::Graphics_obj::setCubeMap(g,context->textureUnits->__get(j),rt->cubeMap);
            								}
            							}
            							else {
HXLINE( 176)								if (attachDepth) {
HXLINE( 176)									::kha::graphics4::Graphics_obj::setTextureDepth(g,context->textureUnits->__get(j),rt->image);
            								}
            								else {
HXLINE( 177)									::kha::graphics4::Graphics_obj::setTexture(g,context->textureUnits->__get(j),rt->image);
            								}
            							}
            						}
HXLINE( 181)						bool _hx_tmp;
HXDLIN( 181)						bool _hx_tmp1;
HXDLIN( 181)						bool _hx_tmp2;
HXDLIN( 181)						if (!(context->paramsSet->__get(j))) {
HXLINE( 181)							_hx_tmp2 = hx::IsNotNull( rt->raw->mipmaps );
            						}
            						else {
HXLINE( 181)							_hx_tmp2 = false;
            						}
HXDLIN( 181)						if (_hx_tmp2) {
HXLINE( 181)							_hx_tmp1 = hx::IsEq( rt->raw->mipmaps,true );
            						}
            						else {
HXLINE( 181)							_hx_tmp1 = false;
            						}
HXDLIN( 181)						if (_hx_tmp1) {
HXLINE( 181)							_hx_tmp = !(isImage);
            						}
            						else {
HXLINE( 181)							_hx_tmp = false;
            						}
HXDLIN( 181)						if (_hx_tmp) {
HXLINE( 182)							::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::LinearMipFilter_dyn());
HXLINE( 183)							context->paramsSet[j] = true;
            						}
HXLINE( 199)						if (!(context->paramsSet->__get(j))) {
HXLINE( 204)							::kha::graphics4::Graphics_obj::setTextureParameters(g,context->textureUnits->__get(j),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureAddressing_obj::Clamp_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::TextureFilter_obj::LinearFilter_dyn(),::kha::graphics4::MipMapFilter_obj::NoMipFilter_dyn());
HXLINE( 206)							context->paramsSet[j] = true;
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Uniforms_obj,bindRenderTarget,(void))

void Uniforms_obj::setConstant(::Dynamic g, ::iron::object::Object object, ::iron::object::CameraObject camera, ::iron::object::LampObject lamp,::Dynamic location, ::Dynamic c){
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_214_setConstant)
HXLINE( 215)		if (hx::IsNull( ( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) )) {
HXLINE( 215)			return;
            		}
HXLINE( 217)		if ((( (::String)(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("mat4",94,41,56,48))) {
HXLINE( 218)			 ::iron::math::Mat4 m = null();
HXLINE( 219)			if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_worldMatrix",34,78,3f,ed))) {
HXLINE( 220)				m = object->transform->world;
            			}
            			else {
HXLINE( 222)				if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_inverseWorldMatrix",82,d8,aa,a9))) {
HXLINE( 223)					::iron::object::Uniforms_obj::helpMat->getInverse(object->transform->world);
HXLINE( 224)					m = ::iron::object::Uniforms_obj::helpMat;
            				}
            				else {
HXLINE( 226)					if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_viewMatrix",a5,03,9f,cf))) {
HXLINE( 227)						m = camera->V;
            					}
            					else {
HXLINE( 229)						if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_transposeInverseViewMatrix",bc,94,df,16))) {
HXLINE( 230)							::iron::object::Uniforms_obj::helpMat->setFrom(camera->V);
HXLINE( 231)							::iron::object::Uniforms_obj::helpMat->getInverse(::iron::object::Uniforms_obj::helpMat);
HXLINE( 232)							::iron::object::Uniforms_obj::helpMat->transpose();
HXLINE( 233)							m = ::iron::object::Uniforms_obj::helpMat;
            						}
            						else {
HXLINE( 235)							if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_inverseViewMatrix",17,a7,62,fe))) {
HXLINE( 236)								::iron::object::Uniforms_obj::helpMat->getInverse(camera->V);
HXLINE( 237)								m = ::iron::object::Uniforms_obj::helpMat;
            							}
            							else {
HXLINE( 239)								if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_transposeViewMatrix",60,53,b3,5a))) {
HXLINE( 240)									::iron::object::Uniforms_obj::helpMat->setFrom(camera->V);
HXLINE( 241)									::iron::object::Uniforms_obj::helpMat->transpose3x3();
HXLINE( 242)									m = ::iron::object::Uniforms_obj::helpMat;
            								}
            								else {
HXLINE( 244)									if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_projectionMatrix",8f,76,36,69))) {
HXLINE( 245)										m = camera->P;
            									}
            									else {
HXLINE( 247)										if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_inverseProjectionMatrix",81,3b,65,3b))) {
HXLINE( 248)											::iron::object::Uniforms_obj::helpMat->getInverse(camera->P);
HXLINE( 249)											m = ::iron::object::Uniforms_obj::helpMat;
            										}
            										else {
HXLINE( 251)											if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_inverseViewProjectionMatrix",86,a0,af,20))) {
HXLINE( 252)												::iron::object::Uniforms_obj::helpMat->setFrom(camera->V);
HXLINE( 253)												::iron::object::Uniforms_obj::helpMat->multmat2(camera->P);
HXLINE( 254)												::iron::object::Uniforms_obj::helpMat->getInverse(::iron::object::Uniforms_obj::helpMat);
HXLINE( 255)												m = ::iron::object::Uniforms_obj::helpMat;
            											}
            											else {
HXLINE( 257)												if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_worldViewProjectionMatrix",e8,15,5b,d2))) {
HXLINE( 258)													::iron::object::Uniforms_obj::helpMat->setFrom(object->transform->world);
HXLINE( 259)													::iron::object::Uniforms_obj::helpMat->multmat2(camera->V);
HXLINE( 260)													::iron::object::Uniforms_obj::helpMat->multmat2(camera->P);
HXLINE( 261)													m = ::iron::object::Uniforms_obj::helpMat;
            												}
            												else {
HXLINE( 263)													if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_worldViewProjectionMatrixSphere",15,97,57,6c))) {
HXLINE( 264)														::iron::object::Uniforms_obj::helpMat->setFrom(object->transform->world);
HXLINE( 265)														::iron::object::Uniforms_obj::helpMat->multmat2(camera->V);
HXLINE( 266)														::iron::object::Uniforms_obj::helpMat->self->_00 = ((Float)1.0);
HXDLIN( 266)														::iron::object::Uniforms_obj::helpMat->self->_10 = ((Float)0.0);
HXDLIN( 266)														::iron::object::Uniforms_obj::helpMat->self->_20 = ((Float)0.0);
HXLINE( 267)														::iron::object::Uniforms_obj::helpMat->self->_01 = ((Float)0.0);
HXDLIN( 267)														::iron::object::Uniforms_obj::helpMat->self->_11 = ((Float)1.0);
HXDLIN( 267)														::iron::object::Uniforms_obj::helpMat->self->_21 = ((Float)0.0);
HXLINE( 268)														::iron::object::Uniforms_obj::helpMat->self->_02 = ((Float)0.0);
HXDLIN( 268)														::iron::object::Uniforms_obj::helpMat->self->_12 = ((Float)0.0);
HXDLIN( 268)														::iron::object::Uniforms_obj::helpMat->self->_22 = ((Float)1.0);
HXLINE( 269)														::iron::object::Uniforms_obj::helpMat->multmat2(camera->P);
HXLINE( 270)														m = ::iron::object::Uniforms_obj::helpMat;
            													}
            													else {
HXLINE( 272)														if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_worldViewProjectionMatrixCylinder",5e,d0,37,aa))) {
HXLINE( 273)															::iron::object::Uniforms_obj::helpMat->setFrom(object->transform->world);
HXLINE( 274)															::iron::object::Uniforms_obj::helpMat->multmat2(camera->V);
HXLINE( 275)															::iron::object::Uniforms_obj::helpMat->self->_00 = ((Float)1.0);
HXDLIN( 275)															::iron::object::Uniforms_obj::helpMat->self->_20 = ((Float)0.0);
HXLINE( 276)															::iron::object::Uniforms_obj::helpMat->self->_01 = ((Float)0.0);
HXDLIN( 276)															::iron::object::Uniforms_obj::helpMat->self->_21 = ((Float)0.0);
HXLINE( 277)															::iron::object::Uniforms_obj::helpMat->self->_02 = ((Float)0.0);
HXDLIN( 277)															::iron::object::Uniforms_obj::helpMat->self->_22 = ((Float)1.0);
HXLINE( 278)															::iron::object::Uniforms_obj::helpMat->multmat2(camera->P);
HXLINE( 279)															m = ::iron::object::Uniforms_obj::helpMat;
            														}
            														else {
HXLINE( 281)															if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_worldViewMatrix",f9,ed,1f,ac))) {
HXLINE( 282)																::iron::object::Uniforms_obj::helpMat->setFrom(object->transform->world);
HXLINE( 283)																::iron::object::Uniforms_obj::helpMat->multmat2(camera->V);
HXLINE( 284)																m = ::iron::object::Uniforms_obj::helpMat;
            															}
            															else {
HXLINE( 286)																if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_viewProjectionMatrix",94,7a,d6,be))) {
HXLINE( 287)																	m = camera->VP;
            																}
            																else {
HXLINE( 289)																	if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_prevViewProjectionMatrix",a7,cc,79,26))) {
HXLINE( 290)																		::iron::object::Uniforms_obj::helpMat->setFrom(camera->prevV);
HXLINE( 291)																		::iron::object::Uniforms_obj::helpMat->multmat2(camera->P);
HXLINE( 292)																		m = ::iron::object::Uniforms_obj::helpMat;
            																	}
            																	else {
HXLINE( 306)																		if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampWorldViewProjectionMatrix",30,12,0e,05))) {
HXLINE( 307)																			if (hx::IsNotNull( lamp )) {
HXLINE( 309)																				if (hx::IsNull( object )) {
HXLINE( 309)																					::iron::object::Uniforms_obj::helpMat->setIdentity();
            																				}
            																				else {
HXLINE( 309)																					::iron::object::Uniforms_obj::helpMat->setFrom(object->transform->world);
            																				}
HXLINE( 310)																				::iron::object::Uniforms_obj::helpMat->multmat2(lamp->VP);
HXLINE( 311)																				m = ::iron::object::Uniforms_obj::helpMat;
            																			}
            																		}
            																		else {
HXLINE( 314)																			if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampWorldViewProjectionMatrixSphere",5d,f9,78,83))) {
HXLINE( 315)																				if (hx::IsNotNull( lamp )) {
HXLINE( 316)																					::iron::object::Uniforms_obj::helpMat->setFrom(object->transform->world);
HXLINE( 319)																					::iron::object::Uniforms_obj::helpMat->multmat2(camera->V);
HXLINE( 320)																					::iron::object::Uniforms_obj::helpMat->self->_00 = ((Float)1.0);
HXDLIN( 320)																					::iron::object::Uniforms_obj::helpMat->self->_10 = ((Float)0.0);
HXDLIN( 320)																					::iron::object::Uniforms_obj::helpMat->self->_20 = ((Float)0.0);
HXLINE( 321)																					::iron::object::Uniforms_obj::helpMat->self->_01 = ((Float)0.0);
HXDLIN( 321)																					::iron::object::Uniforms_obj::helpMat->self->_11 = ((Float)1.0);
HXDLIN( 321)																					::iron::object::Uniforms_obj::helpMat->self->_21 = ((Float)0.0);
HXLINE( 322)																					::iron::object::Uniforms_obj::helpMat->self->_02 = ((Float)0.0);
HXDLIN( 322)																					::iron::object::Uniforms_obj::helpMat->self->_12 = ((Float)0.0);
HXDLIN( 322)																					::iron::object::Uniforms_obj::helpMat->self->_22 = ((Float)1.0);
HXLINE( 323)																					::iron::object::Uniforms_obj::helpMat2->getInverse(camera->V);
HXLINE( 324)																					::iron::object::Uniforms_obj::helpMat->multmat2(::iron::object::Uniforms_obj::helpMat2);
HXLINE( 326)																					::iron::object::Uniforms_obj::helpMat->multmat2(lamp->VP);
HXLINE( 327)																					m = ::iron::object::Uniforms_obj::helpMat;
            																				}
            																			}
            																			else {
HXLINE( 330)																				if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampWorldViewProjectionMatrixCylinder",a6,54,2c,d6))) {
HXLINE( 331)																					if (hx::IsNotNull( lamp )) {
HXLINE( 332)																						::iron::object::Uniforms_obj::helpMat->setFrom(object->transform->world);
HXLINE( 335)																						::iron::object::Uniforms_obj::helpMat->multmat2(camera->V);
HXLINE( 336)																						::iron::object::Uniforms_obj::helpMat->self->_00 = ((Float)1.0);
HXDLIN( 336)																						::iron::object::Uniforms_obj::helpMat->self->_20 = ((Float)0.0);
HXLINE( 337)																						::iron::object::Uniforms_obj::helpMat->self->_01 = ((Float)0.0);
HXDLIN( 337)																						::iron::object::Uniforms_obj::helpMat->self->_21 = ((Float)0.0);
HXLINE( 338)																						::iron::object::Uniforms_obj::helpMat->self->_02 = ((Float)0.0);
HXDLIN( 338)																						::iron::object::Uniforms_obj::helpMat->self->_22 = ((Float)1.0);
HXLINE( 339)																						::iron::object::Uniforms_obj::helpMat2->getInverse(camera->V);
HXLINE( 340)																						::iron::object::Uniforms_obj::helpMat->multmat2(::iron::object::Uniforms_obj::helpMat2);
HXLINE( 342)																						::iron::object::Uniforms_obj::helpMat->multmat2(lamp->VP);
HXLINE( 343)																						m = ::iron::object::Uniforms_obj::helpMat;
            																					}
            																				}
            																				else {
HXLINE( 346)																					if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_biasLampWorldViewProjectionMatrix",77,92,d0,f8))) {
HXLINE( 347)																						if (hx::IsNotNull( lamp )) {
HXLINE( 349)																							if (hx::IsNull( object )) {
HXLINE( 349)																								::iron::object::Uniforms_obj::helpMat->setIdentity();
            																							}
            																							else {
HXLINE( 349)																								::iron::object::Uniforms_obj::helpMat->setFrom(object->transform->world);
            																							}
HXLINE( 350)																							::iron::object::Uniforms_obj::helpMat->multmat2(lamp->VP);
HXLINE( 351)																							::iron::object::Uniforms_obj::helpMat->multmat2(::iron::object::Uniforms_obj::biasMat);
HXLINE( 352)																							m = ::iron::object::Uniforms_obj::helpMat;
            																						}
            																					}
            																					else {
HXLINE( 355)																						if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampViewProjectionMatrix",4c,e3,94,ea))) {
HXLINE( 356)																							if (hx::IsNotNull( lamp )) {
HXLINE( 357)																								m = lamp->VP;
            																							}
            																						}
            																						else {
HXLINE( 360)																							if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_biasLampViewProjectionMatrix",65,48,50,7b))) {
HXLINE( 361)																								if (hx::IsNotNull( lamp )) {
HXLINE( 362)																									::iron::object::Uniforms_obj::helpMat->setFrom(lamp->VP);
HXLINE( 363)																									::iron::object::Uniforms_obj::helpMat->multmat2(::iron::object::Uniforms_obj::biasMat);
HXLINE( 364)																									m = ::iron::object::Uniforms_obj::helpMat;
            																								}
            																							}
            																							else {
HXLINE( 367)																								if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampVolumeWorldViewProjectionMatrix",b6,d5,c7,d2))) {
HXLINE( 368)																									if (hx::IsNotNull( lamp )) {
HXLINE( 369)																										 ::iron::object::Transform tr = lamp->transform;
HXLINE( 370)																										::String type = ( (::String)(lamp->data->raw->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) );
HXLINE( 371)																										if ((type == HX_("spot",02,e7,58,4c))) {
HXLINE( 380)																											::iron::object::Uniforms_obj::helpVec->set(tr->world->self->_30,tr->world->self->_31,tr->world->self->_32,null());
HXLINE( 381)																											float f2 = ((Float)2.0);
HXLINE( 382)																											 ::iron::math::Vec4 _hx_tmp = ::iron::object::Uniforms_obj::helpVec2;
HXDLIN( 382)																											 ::Dynamic lamp1 = lamp->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic);
HXDLIN( 382)																											 ::Dynamic _hx_tmp1 = (lamp->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic) * f2);
HXDLIN( 382)																											_hx_tmp->set(lamp1,_hx_tmp1,(lamp->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic) * f2),null());
HXLINE( 383)																											::iron::object::Uniforms_obj::helpMat->compose(::iron::object::Uniforms_obj::helpVec,::iron::object::Uniforms_obj::helpQuat,::iron::object::Uniforms_obj::helpVec2);
            																										}
            																										else {
HXLINE( 385)																											bool _hx_tmp2;
HXDLIN( 385)																											if ((type != HX_("point",50,b4,8f,c6))) {
HXLINE( 385)																												_hx_tmp2 = (type == HX_("area",8d,8b,74,40));
            																											}
            																											else {
HXLINE( 385)																												_hx_tmp2 = true;
            																											}
HXDLIN( 385)																											if (_hx_tmp2) {
HXLINE( 386)																												::iron::object::Uniforms_obj::helpVec->set(tr->world->self->_30,tr->world->self->_31,tr->world->self->_32,null());
HXLINE( 387)																												float f21 = ((Float)2.0);
HXLINE( 388)																												 ::iron::math::Vec4 _hx_tmp3 = ::iron::object::Uniforms_obj::helpVec2;
HXDLIN( 388)																												 ::Dynamic lamp2 = lamp->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic);
HXDLIN( 388)																												 ::Dynamic _hx_tmp4 = (lamp->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic) * f21);
HXDLIN( 388)																												_hx_tmp3->set(lamp2,_hx_tmp4,(lamp->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic) * f21),null());
HXLINE( 389)																												::iron::object::Uniforms_obj::helpMat->compose(::iron::object::Uniforms_obj::helpVec,::iron::object::Uniforms_obj::helpQuat,::iron::object::Uniforms_obj::helpVec2);
            																											}
            																										}
HXLINE( 392)																										::iron::object::Uniforms_obj::helpMat->multmat2(camera->V);
HXLINE( 393)																										::iron::object::Uniforms_obj::helpMat->multmat2(camera->P);
HXLINE( 394)																										m = ::iron::object::Uniforms_obj::helpMat;
            																									}
            																								}
            																								else {
HXLINE( 397)																									if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_skydomeMatrix",a6,4a,80,3e))) {
HXLINE( 398)																										 ::iron::object::Transform tr1 = camera->transform;
HXLINE( 400)																										 ::iron::math::Vec4 _hx_tmp5 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 400)																										float _hx_tmp6 = tr1->world->self->_30;
HXDLIN( 400)																										float _hx_tmp7 = tr1->world->self->_31;
HXDLIN( 400)																										_hx_tmp5->set(_hx_tmp6,_hx_tmp7,(tr1->world->self->_32 - ((Float)3.5)),null());
HXLINE( 401)																										Float bounds = (camera->farPlane * ((Float)0.95));
HXLINE( 402)																										::iron::object::Uniforms_obj::helpVec2->set(bounds,bounds,bounds,null());
HXLINE( 403)																										::iron::object::Uniforms_obj::helpMat->compose(::iron::object::Uniforms_obj::helpVec,::iron::object::Uniforms_obj::helpQuat,::iron::object::Uniforms_obj::helpVec2);
HXLINE( 404)																										::iron::object::Uniforms_obj::helpMat->multmat2(camera->V);
HXLINE( 405)																										::iron::object::Uniforms_obj::helpMat->multmat2(camera->P);
HXLINE( 406)																										m = ::iron::object::Uniforms_obj::helpMat;
            																									}
            																									else {
HXLINE( 408)																										if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampViewMatrix",5d,d6,05,2c))) {
HXLINE( 409)																											if (hx::IsNotNull( lamp )) {
HXLINE( 409)																												m = lamp->V;
            																											}
            																										}
            																										else {
HXLINE( 411)																											if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampProjectionMatrix",47,23,f4,94))) {
HXLINE( 412)																												if (hx::IsNotNull( lamp )) {
HXLINE( 412)																													m = lamp->P;
            																												}
            																											}
            																											else {
HXLINE( 414)																												if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_particleData",6f,ee,bf,be))) {
HXLINE( 415)																													 ::iron::object::MeshObject mo = hx::TCast<  ::iron::object::MeshObject >::cast(object);
HXLINE( 416)																													if (hx::IsNotNull( mo->particleOwner )) {
HXLINE( 417)																														m = mo->particleOwner->particleSystems->__get(mo->particleIndex).StaticCast<  ::iron::object::ParticleSystem >()->getData();
            																													}
            																												}
            																												else {
HXLINE( 426)																													if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalMat4Links )) {
HXLINE( 427)																														int _g = (int)0;
HXDLIN( 427)																														::Array< ::Dynamic> _g1 = ::iron::object::Uniforms_obj::externalMat4Links;
HXDLIN( 427)																														while((_g < _g1->length)){
HXLINE( 427)																															 ::Dynamic fn = _g1->__get(_g);
HXDLIN( 427)																															_g = (_g + (int)1);
HXLINE( 428)																															m = ( ( ::iron::math::Mat4)(fn( ::Dynamic(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)))) );
HXLINE( 429)																															if (hx::IsNotNull( m )) {
HXLINE( 429)																																goto _hx_goto_7;
            																															}
            																														}
            																														_hx_goto_7:;
            																													}
            																												}
            																											}
            																										}
            																									}
            																								}
            																							}
            																						}
            																					}
            																				}
            																			}
            																		}
            																	}
            																}
            															}
            														}
            													}
            												}
            											}
            										}
            									}
            								}
            							}
            						}
            					}
            				}
            			}
HXLINE( 433)			if (hx::IsNull( m )) {
HXLINE( 433)				return;
            			}
HXLINE( 434)			::kha::graphics4::Graphics_obj::setMatrix(g,location,m->self);
            		}
            		else {
HXLINE( 436)			if ((( (::String)(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("mat3",93,41,56,48))) {
HXLINE( 437)				 ::iron::math::Mat3 m1 = null();
HXLINE( 438)				if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_normalMatrix",a7,46,9b,9c))) {
HXLINE( 439)					::iron::object::Uniforms_obj::helpMat->setFrom(object->transform->world);
HXLINE( 442)					::iron::object::Uniforms_obj::helpMat->getInverse(::iron::object::Uniforms_obj::helpMat);
HXLINE( 443)					::iron::object::Uniforms_obj::helpMat->transpose3x3();
HXLINE( 445)					::iron::object::Uniforms_obj::helpMat3->setFrom4(::iron::object::Uniforms_obj::helpMat);
HXLINE( 446)					m1 = ::iron::object::Uniforms_obj::helpMat3;
            				}
HXLINE( 449)				if (hx::IsNull( m1 )) {
HXLINE( 449)					return;
            				}
HXLINE( 450)				::kha::graphics4::Graphics_obj::setMatrix3(g,location,m1->self);
            			}
            			else {
HXLINE( 452)				if ((( (::String)(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("vec4",60,27,4c,4e))) {
HXLINE( 453)					 ::iron::math::Vec4 v = null();
HXLINE( 454)					::iron::object::Uniforms_obj::helpVec->set((int)0,(int)0,(int)0,null());
HXLINE( 455)					if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_input",4b,0b,05,ba))) {
HXLINE( 456)						 ::iron::math::Vec4 _hx_tmp8 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 456)						Float _hx_tmp9 = ::iron::_hx_system::Input_obj::getMouse()->x;
HXDLIN( 456)						Float _hx_tmp10 = ((Float)_hx_tmp9 / (Float)::kha::System_obj::windowWidth(null()));
HXDLIN( 456)						Float _hx_tmp11 = ::iron::_hx_system::Input_obj::getMouse()->y;
HXDLIN( 456)						Float _hx_tmp12 = ((Float)_hx_tmp11 / (Float)::kha::System_obj::windowHeight(null()));
HXDLIN( 456)						float _hx_tmp13;
HXDLIN( 456)						if (::iron::_hx_system::Input_obj::getMouse()->down(null())) {
HXLINE( 456)							_hx_tmp13 = ((Float)1.0);
            						}
            						else {
HXLINE( 456)							_hx_tmp13 = ((Float)0.0);
            						}
HXDLIN( 456)						_hx_tmp8->set(_hx_tmp10,_hx_tmp12,_hx_tmp13,((Float)0.0));
HXLINE( 457)						v = ::iron::object::Uniforms_obj::helpVec;
            					}
            					else {
HXLINE( 460)						if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalVec4Links )) {
HXLINE( 461)							int _g2 = (int)0;
HXDLIN( 461)							::Array< ::Dynamic> _g11 = ::iron::object::Uniforms_obj::externalVec4Links;
HXDLIN( 461)							while((_g2 < _g11->length)){
HXLINE( 461)								 ::Dynamic fn1 = _g11->__get(_g2);
HXDLIN( 461)								_g2 = (_g2 + (int)1);
HXLINE( 462)								v = ( ( ::iron::math::Vec4)(fn1( ::Dynamic(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)))) );
HXLINE( 463)								if (hx::IsNotNull( v )) {
HXLINE( 463)									goto _hx_goto_8;
            								}
            							}
            							_hx_goto_8:;
            						}
            					}
HXLINE( 467)					if (hx::IsNull( v )) {
HXLINE( 467)						return;
            					}
HXLINE( 468)					::kha::graphics4::Graphics_obj::setFloat4(g,location,v->x,v->y,v->z,v->w);
            				}
            				else {
HXLINE( 470)					if ((( (::String)(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("vec3",5f,27,4c,4e))) {
HXLINE( 471)						 ::iron::math::Vec4 v1 = null();
HXLINE( 472)						::iron::object::Uniforms_obj::helpVec->set((int)0,(int)0,(int)0,null());
HXLINE( 473)						if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampPosition",c0,cc,76,41))) {
HXLINE( 474)							if (hx::IsNotNull( lamp )) {
HXLINE( 474)								::iron::object::Uniforms_obj::helpVec->set(lamp->transform->world->self->_30,lamp->transform->world->self->_31,lamp->transform->world->self->_32,null());
            							}
HXLINE( 475)							v1 = ::iron::object::Uniforms_obj::helpVec;
            						}
            						else {
HXLINE( 477)							if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampDirection",48,ca,6a,46))) {
HXLINE( 478)								if (hx::IsNotNull( lamp )) {
HXLINE( 478)									::iron::object::Uniforms_obj::helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,lamp->V->self->_02,lamp->V->self->_12,lamp->V->self->_22,null());
            								}
HXLINE( 479)								v1 = ::iron::object::Uniforms_obj::helpVec;
            							}
            							else {
HXLINE( 481)								if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampColor",ec,e0,bd,5f))) {
HXLINE( 482)									if (hx::IsNotNull( lamp )) {
HXLINE( 483)										float str = ( (float)(lamp->data->raw->__Field(HX_("strength",81,d2,8e,8e),hx::paccDynamic)) );
HXLINE( 484)										 ::iron::math::Vec4 _hx_tmp14 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 484)										float _hx_tmp15 = (( ( ::kha::arrays::Float32ArrayPrivate)(lamp->data->raw->__Field(HX_("color",63,71,5c,4a),hx::paccDynamic)) )->self.get((int)0) * str);
HXDLIN( 484)										float _hx_tmp16 = (( ( ::kha::arrays::Float32ArrayPrivate)(lamp->data->raw->__Field(HX_("color",63,71,5c,4a),hx::paccDynamic)) )->self.get((int)1) * str);
HXDLIN( 484)										_hx_tmp14->set(_hx_tmp15,_hx_tmp16,(( ( ::kha::arrays::Float32ArrayPrivate)(lamp->data->raw->__Field(HX_("color",63,71,5c,4a),hx::paccDynamic)) )->self.get((int)2) * str),null());
            									}
HXLINE( 486)									v1 = ::iron::object::Uniforms_obj::helpVec;
            								}
            								else {
HXLINE( 488)									if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampArea0",8c,ff,e6,3a))) {
HXLINE( 489)										bool _hx_tmp17;
HXDLIN( 489)										if (hx::IsNotNull( lamp )) {
HXLINE( 489)											_hx_tmp17 = hx::IsNotNull( lamp->data->raw->__Field(HX_("size",c1,a0,53,4c),hx::paccDynamic) );
            										}
            										else {
HXLINE( 489)											_hx_tmp17 = false;
            										}
HXDLIN( 489)										if (_hx_tmp17) {
HXLINE( 490)											float f22 = ((Float)0.5);
HXLINE( 491)											float sx = (lamp->data->raw->__Field(HX_("size",c1,a0,53,4c),hx::paccDynamic) * f22);
HXLINE( 492)											float sy = (lamp->data->raw->__Field(HX_("size_y",3b,66,0e,c1),hx::paccDynamic) * f22);
HXLINE( 493)											::iron::object::Uniforms_obj::helpVec->set(-(sx),sy,((Float)0.0),null());
HXLINE( 494)											::iron::object::Uniforms_obj::helpVec->applymat(lamp->transform->world);
HXLINE( 495)											v1 = ::iron::object::Uniforms_obj::helpVec;
            										}
            									}
            									else {
HXLINE( 498)										if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampArea1",8d,ff,e6,3a))) {
HXLINE( 499)											bool _hx_tmp18;
HXDLIN( 499)											if (hx::IsNotNull( lamp )) {
HXLINE( 499)												_hx_tmp18 = hx::IsNotNull( lamp->data->raw->__Field(HX_("size",c1,a0,53,4c),hx::paccDynamic) );
            											}
            											else {
HXLINE( 499)												_hx_tmp18 = false;
            											}
HXDLIN( 499)											if (_hx_tmp18) {
HXLINE( 500)												float f23 = ((Float)0.5);
HXLINE( 501)												float sx1 = (lamp->data->raw->__Field(HX_("size",c1,a0,53,4c),hx::paccDynamic) * f23);
HXLINE( 502)												float sy1 = (lamp->data->raw->__Field(HX_("size_y",3b,66,0e,c1),hx::paccDynamic) * f23);
HXLINE( 503)												::iron::object::Uniforms_obj::helpVec->set(sx1,sy1,((Float)0.0),null());
HXLINE( 504)												::iron::object::Uniforms_obj::helpVec->applymat(lamp->transform->world);
HXLINE( 505)												v1 = ::iron::object::Uniforms_obj::helpVec;
            											}
            										}
            										else {
HXLINE( 508)											if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampArea2",8e,ff,e6,3a))) {
HXLINE( 509)												bool _hx_tmp19;
HXDLIN( 509)												if (hx::IsNotNull( lamp )) {
HXLINE( 509)													_hx_tmp19 = hx::IsNotNull( lamp->data->raw->__Field(HX_("size",c1,a0,53,4c),hx::paccDynamic) );
            												}
            												else {
HXLINE( 509)													_hx_tmp19 = false;
            												}
HXDLIN( 509)												if (_hx_tmp19) {
HXLINE( 510)													float f24 = ((Float)0.5);
HXLINE( 511)													float sx2 = (lamp->data->raw->__Field(HX_("size",c1,a0,53,4c),hx::paccDynamic) * f24);
HXLINE( 512)													float sy2 = (lamp->data->raw->__Field(HX_("size_y",3b,66,0e,c1),hx::paccDynamic) * f24);
HXLINE( 513)													::iron::object::Uniforms_obj::helpVec->set(sx2,-(sy2),((Float)0.0),null());
HXLINE( 514)													::iron::object::Uniforms_obj::helpVec->applymat(lamp->transform->world);
HXLINE( 515)													v1 = ::iron::object::Uniforms_obj::helpVec;
            												}
            											}
            											else {
HXLINE( 518)												if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampArea3",8f,ff,e6,3a))) {
HXLINE( 519)													bool _hx_tmp20;
HXDLIN( 519)													if (hx::IsNotNull( lamp )) {
HXLINE( 519)														_hx_tmp20 = hx::IsNotNull( lamp->data->raw->__Field(HX_("size",c1,a0,53,4c),hx::paccDynamic) );
            													}
            													else {
HXLINE( 519)														_hx_tmp20 = false;
            													}
HXDLIN( 519)													if (_hx_tmp20) {
HXLINE( 520)														float f25 = ((Float)0.5);
HXLINE( 521)														float sx3 = (lamp->data->raw->__Field(HX_("size",c1,a0,53,4c),hx::paccDynamic) * f25);
HXLINE( 522)														float sy3 = (lamp->data->raw->__Field(HX_("size_y",3b,66,0e,c1),hx::paccDynamic) * f25);
HXLINE( 523)														::iron::object::Uniforms_obj::helpVec->set(-(sx3),-(sy3),((Float)0.0),null());
HXLINE( 524)														::iron::object::Uniforms_obj::helpVec->applymat(lamp->transform->world);
HXLINE( 525)														v1 = ::iron::object::Uniforms_obj::helpVec;
            													}
            												}
            												else {
HXLINE( 528)													if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_cameraPosition",0d,99,e7,09))) {
HXLINE( 529)														::iron::object::Uniforms_obj::helpVec->set(camera->transform->world->self->_30,camera->transform->world->self->_31,camera->transform->world->self->_32,null());
HXLINE( 530)														v1 = ::iron::object::Uniforms_obj::helpVec;
            													}
            													else {
HXLINE( 532)														if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_cameraLook",c3,9c,5f,80))) {
HXLINE( 533)															::iron::object::Uniforms_obj::helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,-(camera->transform->world->self->_20),-(camera->transform->world->self->_21),-(camera->transform->world->self->_22),null());
HXLINE( 534)															v1 = ::iron::object::Uniforms_obj::helpVec;
            														}
            														else {
HXLINE( 536)															if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_cameraUp",bf,3b,bd,2f))) {
HXLINE( 537)																::iron::object::Uniforms_obj::helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,camera->transform->world->self->_10,camera->transform->world->self->_11,camera->transform->world->self->_12,null());
HXLINE( 538)																v1 = ::iron::object::Uniforms_obj::helpVec;
            															}
            															else {
HXLINE( 540)																if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_cameraRight",f8,ac,b3,43))) {
HXLINE( 541)																	::iron::object::Uniforms_obj::helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,camera->transform->world->self->_00,camera->transform->world->self->_01,camera->transform->world->self->_02,null());
HXLINE( 542)																	v1 = ::iron::object::Uniforms_obj::helpVec;
            																}
            																else {
HXLINE( 544)																	if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_dim",49,82,17,3f))) {
HXLINE( 545)																		 ::iron::math::Vec4 d = object->transform->dim;
HXLINE( 546)																		 ::iron::math::Vec4 s = object->transform->scale;
HXLINE( 547)																		 ::iron::math::Vec4 _hx_tmp21 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 547)																		Float _hx_tmp22 = ((Float)d->x / (Float)s->x);
HXDLIN( 547)																		Float _hx_tmp23 = ((Float)d->y / (Float)s->y);
HXDLIN( 547)																		_hx_tmp21->set(_hx_tmp22,_hx_tmp23,((Float)d->z / (Float)s->z),null());
HXLINE( 548)																		v1 = ::iron::object::Uniforms_obj::helpVec;
            																	}
            																	else {
HXLINE( 550)																		if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_halfDim",d6,f6,f4,59))) {
HXLINE( 551)																			 ::iron::math::Vec4 d1 = object->transform->dim;
HXLINE( 552)																			 ::iron::math::Vec4 s1 = object->transform->scale;
HXLINE( 553)																			 ::iron::math::Vec4 _hx_tmp24 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 553)																			Float _hx_tmp25 = ((Float)((Float)d1->x / (Float)s1->x) / (Float)(int)2);
HXDLIN( 553)																			Float _hx_tmp26 = ((Float)((Float)d1->y / (Float)s1->y) / (Float)(int)2);
HXDLIN( 553)																			_hx_tmp24->set(_hx_tmp25,_hx_tmp26,((Float)((Float)d1->z / (Float)s1->z) / (Float)(int)2),null());
HXLINE( 554)																			v1 = ::iron::object::Uniforms_obj::helpVec;
            																		}
            																		else {
HXLINE( 556)																			if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_backgroundCol",33,3d,36,d0))) {
HXLINE( 557)																				if (hx::IsNotNull( ( ( ::kha::arrays::Float32ArrayPrivate)(camera->data->raw->__Field(HX_("clear_color",f1,51,9c,a5),hx::paccDynamic)) ) )) {
HXLINE( 557)																					 ::iron::math::Vec4 _hx_tmp27 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 557)																					float _hx_tmp28 = ( ( ::kha::arrays::Float32ArrayPrivate)(camera->data->raw->__Field(HX_("clear_color",f1,51,9c,a5),hx::paccDynamic)) )->self.get((int)0);
HXDLIN( 557)																					float _hx_tmp29 = ( ( ::kha::arrays::Float32ArrayPrivate)(camera->data->raw->__Field(HX_("clear_color",f1,51,9c,a5),hx::paccDynamic)) )->self.get((int)1);
HXDLIN( 557)																					_hx_tmp27->set(_hx_tmp28,_hx_tmp29,( ( ::kha::arrays::Float32ArrayPrivate)(camera->data->raw->__Field(HX_("clear_color",f1,51,9c,a5),hx::paccDynamic)) )->self.get((int)2),null());
            																				}
HXLINE( 558)																				v1 = ::iron::object::Uniforms_obj::helpVec;
            																			}
            																			else {
HXLINE( 560)																				if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_probeVolumeCenter",60,77,fa,f0))) {
HXLINE( 561)																					v1 = ::iron::Scene_obj::active->world->getProbeVolumeCenter(object->transform);
            																				}
            																				else {
HXLINE( 563)																					if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_probeVolumeSize",8c,e9,76,31))) {
HXLINE( 564)																						v1 = ::iron::Scene_obj::active->world->getProbeVolumeSize(object->transform);
            																					}
            																					else {
HXLINE( 566)																						if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_sunDirection",f2,99,26,a3))) {
HXLINE( 567)																							 ::iron::data::WorldData w = ::iron::Scene_obj::active->world;
HXLINE( 568)																							if (hx::IsNotNull( w )) {
HXLINE( 569)																								 ::iron::math::Vec4 _hx_tmp30 = ::iron::object::Uniforms_obj::helpVec;
HXDLIN( 569)																								float _hx_tmp31 = ( ( ::kha::arrays::Float32ArrayPrivate)(w->raw->__Field(HX_("sun_direction",8c,6e,6a,2d),hx::paccDynamic)) )->self.get((int)0);
HXDLIN( 569)																								float _hx_tmp32 = ( ( ::kha::arrays::Float32ArrayPrivate)(w->raw->__Field(HX_("sun_direction",8c,6e,6a,2d),hx::paccDynamic)) )->self.get((int)1);
HXDLIN( 569)																								_hx_tmp30->set(_hx_tmp31,_hx_tmp32,( ( ::kha::arrays::Float32ArrayPrivate)(w->raw->__Field(HX_("sun_direction",8c,6e,6a,2d),hx::paccDynamic)) )->self.get((int)2),null());
HXLINE( 570)																								v1 = ::iron::object::Uniforms_obj::helpVec;
            																							}
            																						}
            																						else {
HXLINE( 574)																							if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalVec3Links )) {
HXLINE( 575)																								int _g3 = (int)0;
HXDLIN( 575)																								::Array< ::Dynamic> _g12 = ::iron::object::Uniforms_obj::externalVec3Links;
HXDLIN( 575)																								while((_g3 < _g12->length)){
HXLINE( 575)																									 ::Dynamic f = _g12->__get(_g3);
HXDLIN( 575)																									_g3 = (_g3 + (int)1);
HXLINE( 576)																									v1 = ( ( ::iron::math::Vec4)(f( ::Dynamic(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)))) );
HXLINE( 577)																									if (hx::IsNotNull( v1 )) {
HXLINE( 577)																										goto _hx_goto_9;
            																									}
            																								}
            																								_hx_goto_9:;
            																							}
            																						}
            																					}
            																				}
            																			}
            																		}
            																	}
            																}
            															}
            														}
            													}
            												}
            											}
            										}
            									}
            								}
            							}
            						}
HXLINE( 581)						if (hx::IsNull( v1 )) {
HXLINE( 581)							return;
            						}
HXLINE( 582)						::kha::graphics4::Graphics_obj::setFloat3(g,location,v1->x,v1->y,v1->z);
            					}
            					else {
HXLINE( 584)						if ((( (::String)(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("vec2",5e,27,4c,4e))) {
HXLINE( 585)							float vx = (int)0;
HXLINE( 586)							float vy = (int)0;
HXLINE( 587)							if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2x",9b,92,3d,30))) {
HXLINE( 587)								vx = ((Float)1.0);
            							}
            							else {
HXLINE( 588)								if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2xInv",16,85,b5,bb))) {
HXLINE( 588)									vx = ((Float)((Float)1.0) / (Float)::iron::RenderPath_obj::active->currentW);
            								}
            								else {
HXLINE( 589)									if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2x2",37,b5,a2,05))) {
HXLINE( 589)										vx = ((Float)2.0);
            									}
            									else {
HXLINE( 590)										if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2x2Inv",fa,eb,ce,73))) {
HXLINE( 590)											vx = ((Float)((Float)2.0) / (Float)::iron::RenderPath_obj::active->currentW);
            										}
            										else {
HXLINE( 591)											if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2y",9c,92,3d,30))) {
HXLINE( 591)												vy = ((Float)1.0);
            											}
            											else {
HXLINE( 592)												if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2yInv",b5,bb,5e,bc))) {
HXLINE( 592)													vy = ((Float)((Float)1.0) / (Float)::iron::RenderPath_obj::active->currentH);
            												}
            												else {
HXLINE( 593)													if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2y2",16,b6,a2,05))) {
HXLINE( 593)														vy = ((Float)2.0);
            													}
            													else {
HXLINE( 594)														if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2y2Inv",7b,80,35,07))) {
HXLINE( 594)															vy = ((Float)((Float)2.0) / (Float)::iron::RenderPath_obj::active->currentH);
            														}
            														else {
HXLINE( 595)															if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2y3",17,b6,a2,05))) {
HXLINE( 595)																vy = ((Float)3.0);
            															}
            															else {
HXLINE( 596)																if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_vec2y3Inv",1a,b7,de,07))) {
HXLINE( 596)																	vy = ((Float)((Float)3.0) / (Float)::iron::RenderPath_obj::active->currentH);
            																}
            																else {
HXLINE( 598)																	if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_windowSize",f0,e5,b3,a9))) {
HXLINE( 599)																		vx = ::kha::System_obj::windowWidth(null());
HXLINE( 600)																		vy = ::kha::System_obj::windowHeight(null());
            																	}
            																	else {
HXLINE( 602)																		if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_windowSizeInv",e1,34,e4,24))) {
HXLINE( 603)																			vx = ((Float)((Float)1.0) / (Float)::kha::System_obj::windowWidth(null()));
HXLINE( 604)																			vy = ((Float)((Float)1.0) / (Float)::kha::System_obj::windowHeight(null()));
            																		}
            																		else {
HXLINE( 606)																			if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_screenSize",6c,fb,13,97))) {
HXLINE( 607)																				vx = ::iron::RenderPath_obj::active->currentW;
HXLINE( 608)																				vy = ::iron::RenderPath_obj::active->currentH;
            																			}
            																			else {
HXLINE( 610)																				if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_screenSizeInv",e5,b4,f5,06))) {
HXLINE( 611)																					vx = ((Float)((Float)1.0) / (Float)::iron::RenderPath_obj::active->currentW);
HXLINE( 612)																					vy = ((Float)((Float)1.0) / (Float)::iron::RenderPath_obj::active->currentH);
            																				}
            																				else {
HXLINE( 614)																					if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_aspectRatio",14,8e,cd,63))) {
HXLINE( 615)																						vx = ((Float)::iron::RenderPath_obj::active->currentH / (Float)::iron::RenderPath_obj::active->currentW);
HXLINE( 616)																						vy = ((Float)::iron::RenderPath_obj::active->currentW / (Float)::iron::RenderPath_obj::active->currentH);
HXLINE( 617)																						if ((vx > ((Float)1.0))) {
HXLINE( 617)																							vx = ((Float)1.0);
            																						}
            																						else {
HXLINE( 617)																							vx = vx;
            																						}
HXLINE( 618)																						if ((vy > ((Float)1.0))) {
HXLINE( 618)																							vy = ((Float)1.0);
            																						}
            																						else {
HXLINE( 618)																							vy = vy;
            																						}
            																					}
            																					else {
HXLINE( 620)																						if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_cameraPlane",78,9f,dd,1e))) {
HXLINE( 621)																							vx = ( (float)(camera->data->raw->__Field(HX_("near_plane",85,54,5f,ca),hx::paccDynamic)) );
HXLINE( 622)																							vy = ( (float)(camera->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic)) );
            																						}
            																						else {
HXLINE( 624)																							if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_cameraPlaneProj",35,af,e6,54))) {
HXLINE( 625)																								float _hx_near = ( (float)(camera->data->raw->__Field(HX_("near_plane",85,54,5f,ca),hx::paccDynamic)) );
HXLINE( 626)																								float _hx_far = ( (float)(camera->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic)) );
HXLINE( 627)																								vx = ((Float)_hx_far / (Float)(_hx_far - _hx_near));
HXLINE( 628)																								vy = ((Float)(-(_hx_far) * _hx_near) / (Float)(_hx_far - _hx_near));
            																							}
            																							else {
HXLINE( 630)																								if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampPlane",e5,6d,ef,d9))) {
HXLINE( 631)																									if (hx::IsNull( lamp )) {
HXLINE( 631)																										vx = ((Float)0.0);
            																									}
            																									else {
HXLINE( 631)																										vx = ( (float)(lamp->data->raw->__Field(HX_("near_plane",85,54,5f,ca),hx::paccDynamic)) );
            																									}
HXLINE( 632)																									if (hx::IsNull( lamp )) {
HXLINE( 632)																										vy = ((Float)0.0);
            																									}
            																									else {
HXLINE( 632)																										vy = ( (float)(lamp->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic)) );
            																									}
            																								}
            																								else {
HXLINE( 634)																									if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampPlaneProj",22,b8,a4,ba))) {
HXLINE( 635)																										if (hx::IsNotNull( lamp )) {
HXLINE( 636)																											float near1 = ( (float)(lamp->data->raw->__Field(HX_("near_plane",85,54,5f,ca),hx::paccDynamic)) );
HXLINE( 637)																											float far1 = ( (float)(lamp->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic)) );
HXLINE( 638)																											float a = (far1 + near1);
HXLINE( 639)																											float b = (far1 - near1);
HXLINE( 640)																											float f26 = ((Float)2.0);
HXLINE( 641)																											float c1 = ((f26 * far1) * near1);
HXLINE( 642)																											vx = ((Float)a / (Float)b);
HXLINE( 643)																											vy = ((Float)c1 / (Float)b);
            																										}
            																									}
            																									else {
HXLINE( 646)																										if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_spotlampData",43,3f,57,e4))) {
HXLINE( 648)																											if (hx::IsNull( lamp )) {
HXLINE( 648)																												vx = ((Float)0.0);
            																											}
            																											else {
HXLINE( 648)																												vx = ( (float)(lamp->data->raw->__Field(HX_("spot_size",5e,2e,1d,31),hx::paccDynamic)) );
            																											}
HXLINE( 649)																											if (hx::IsNull( lamp )) {
HXLINE( 649)																												vy = ((Float)0.0);
            																											}
            																											else {
HXLINE( 649)																												vy = (vx - lamp->data->raw->__Field(HX_("spot_blend",14,44,87,00),hx::paccDynamic));
            																											}
            																										}
            																										else {
HXLINE( 651)																											if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_tilesheetOffset",a5,39,94,dc))) {
HXLINE( 652)																												 ::iron::object::Tilesheet ts = hx::TCast<  ::iron::object::MeshObject >::cast(object)->tilesheet;
HXLINE( 653)																												vx = ts->tileX;
HXLINE( 654)																												vy = ts->tileY;
            																											}
            																											else {
HXLINE( 657)																												if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalVec2Links )) {
HXLINE( 658)																													int _g4 = (int)0;
HXDLIN( 658)																													::Array< ::Dynamic> _g13 = ::iron::object::Uniforms_obj::externalVec2Links;
HXDLIN( 658)																													while((_g4 < _g13->length)){
HXLINE( 658)																														 ::Dynamic fn2 = _g13->__get(_g4);
HXDLIN( 658)																														_g4 = (_g4 + (int)1);
HXLINE( 659)																														 ::iron::math::Vec4 v2 = ( ( ::iron::math::Vec4)(fn2( ::Dynamic(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)))) );
HXLINE( 660)																														if (hx::IsNotNull( v2 )) {
HXLINE( 661)																															vx = v2->x;
HXLINE( 662)																															vy = v2->y;
HXLINE( 663)																															goto _hx_goto_10;
            																														}
            																													}
            																													_hx_goto_10:;
            																												}
            																											}
            																										}
            																									}
            																								}
            																							}
            																						}
            																					}
            																				}
            																			}
            																		}
            																	}
            																}
            															}
            														}
            													}
            												}
            											}
            										}
            									}
            								}
            							}
HXLINE( 668)							::kha::graphics4::Graphics_obj::setFloat2(g,location,vx,vy);
            						}
            						else {
HXLINE( 670)							if ((( (::String)(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("float",9c,c5,96,02))) {
HXLINE( 671)								float f1 = ((Float)0.0);
HXLINE( 672)								if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_time",ec,e7,0d,00))) {
HXLINE( 673)									f1 = ::kha::Scheduler_obj::time();
            								}
            								else {
HXLINE( 675)									if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_deltaTime",e6,b7,fe,50))) {
HXLINE( 676)										f1 = (((Float)0.0166666666666666664) * ::iron::_hx_system::Time_obj::scale);
            									}
            									else {
HXLINE( 678)										if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampRadius",a9,f8,d6,50))) {
HXLINE( 679)											if (hx::IsNull( lamp )) {
HXLINE( 679)												f1 = ((Float)0.0);
            											}
            											else {
HXLINE( 679)												f1 = ( (float)(lamp->data->raw->__Field(HX_("far_plane",b4,3b,51,fd),hx::paccDynamic)) );
            											}
            										}
            										else {
HXLINE( 681)											if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampShadowsBias",f5,b4,3e,2a))) {
HXLINE( 682)												if (hx::IsNull( lamp )) {
HXLINE( 682)													f1 = ((Float)0.0);
            												}
            												else {
HXLINE( 682)													f1 = ( (float)(lamp->data->raw->__Field(HX_("shadows_bias",e5,74,6a,36),hx::paccDynamic)) );
            												}
            											}
            											else {
HXLINE( 684)												if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampSize",58,35,74,73))) {
HXLINE( 685)													bool _hx_tmp33;
HXDLIN( 685)													if (hx::IsNotNull( lamp )) {
HXLINE( 685)														_hx_tmp33 = hx::IsNotNull( lamp->data->raw->__Field(HX_("lamp_size",88,40,f6,25),hx::paccDynamic) );
            													}
            													else {
HXLINE( 685)														_hx_tmp33 = false;
            													}
HXDLIN( 685)													if (_hx_tmp33) {
HXLINE( 685)														f1 = ( (float)(lamp->data->raw->__Field(HX_("lamp_size",88,40,f6,25),hx::paccDynamic)) );
            													}
            												}
            												else {
HXLINE( 690)													if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_envmapStrength",0f,37,7e,cb))) {
HXLINE( 691)														if (hx::IsNull( ::iron::Scene_obj::active->world )) {
HXLINE( 691)															f1 = ((Float)0.0);
            														}
            														else {
HXLINE( 692)															f1 = ( (float)(::iron::Scene_obj::active->world->getGlobalProbe()->raw->__Field(HX_("strength",81,d2,8e,8e),hx::paccDynamic)) );
            														}
            													}
            													else {
HXLINE( 694)														if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_probeStrength",12,0a,39,28))) {
HXLINE( 695)															f1 = ::iron::Scene_obj::active->world->getProbeStrength(object->transform);
            														}
            														else {
HXLINE( 697)															if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_probeBlending",c2,a4,90,04))) {
HXLINE( 698)																f1 = ::iron::Scene_obj::active->world->getProbeBlending(object->transform);
            															}
            															else {
HXLINE( 700)																if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_aspectRatioF",b2,c3,0e,f0))) {
HXLINE( 701)																	f1 = ((Float)::iron::RenderPath_obj::active->currentW / (Float)::iron::RenderPath_obj::active->currentH);
            																}
            																else {
HXLINE( 703)																	if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_aspectRatioWindowF",a2,22,d7,88))) {
HXLINE( 704)																		int f3 = ::kha::System_obj::windowWidth(null());
HXDLIN( 704)																		f1 = ((Float)f3 / (Float)::kha::System_obj::windowHeight(null()));
            																	}
            																	else {
HXLINE( 706)																		if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_objectInfoIndex",86,d7,3f,d3))) {
HXLINE( 707)																			f1 = object->uid;
            																		}
            																		else {
HXLINE( 709)																			if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_objectInfoMaterialIndex",5f,41,73,67))) {
HXLINE( 710)																				if (hx::IsNotNull( ::iron::RenderPath_obj::active->currentMaterial )) {
HXLINE( 710)																					f1 = ::iron::RenderPath_obj::active->currentMaterial->uid;
            																				}
            																				else {
HXLINE( 710)																					f1 = ( ( ::iron::data::MaterialData)(_hx_array_unsafe_get(hx::TCast<  ::iron::object::MeshObject >::cast(object)->materials,(int)0)) )->uid;
            																				}
            																			}
            																			else {
HXLINE( 712)																				if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_objectInfoRandom",0f,cb,38,28))) {
HXLINE( 713)																					f1 = object->urandom;
            																				}
            																				else {
HXLINE( 715)																					if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_frameScale",3c,d0,7e,2e))) {
HXLINE( 716)																						Float f4 = ::iron::RenderPath_obj::active->frameTime;
HXDLIN( 716)																						f1 = ((Float)f4 / (Float)(((Float)0.0166666666666666664) * ::iron::_hx_system::Time_obj::scale));
            																					}
            																					else {
HXLINE( 730)																						if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalFloatLinks )) {
HXLINE( 731)																							int _g5 = (int)0;
HXDLIN( 731)																							::Array< ::Dynamic> _g14 = ::iron::object::Uniforms_obj::externalFloatLinks;
HXDLIN( 731)																							while((_g5 < _g14->length)){
HXLINE( 731)																								 ::Dynamic fn3 = _g14->__get(_g5);
HXDLIN( 731)																								_g5 = (_g5 + (int)1);
HXLINE( 732)																								 ::Dynamic res = fn3( ::Dynamic(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)));
HXLINE( 733)																								if (hx::IsNotNull( res )) {
HXLINE( 734)																									f1 = res;
HXLINE( 735)																									goto _hx_goto_11;
            																								}
            																							}
            																							_hx_goto_11:;
            																						}
            																					}
            																				}
            																			}
            																		}
            																	}
            																}
            															}
            														}
            													}
            												}
            											}
            										}
            									}
            								}
HXLINE( 740)								::kha::graphics4::Graphics_obj::setFloat(g,location,f1);
            							}
            							else {
HXLINE( 742)								if ((( (::String)(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("floats",57,23,56,41))) {
HXLINE( 743)									 ::kha::arrays::Float32ArrayPrivate fa = null();
HXLINE( 744)									if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_skinBones",b3,88,de,59))) {
HXLINE( 745)										if (hx::IsNotNull( object->animation )) {
HXLINE( 745)											fa = hx::TCast<  ::iron::object::BoneAnimation >::cast(object->animation)->skinBuffer;
            										}
            									}
            									else {
HXLINE( 747)										if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_envmapIrradiance",ba,60,55,9c))) {
HXLINE( 748)											if (hx::IsNull( ::iron::Scene_obj::active->world )) {
HXLINE( 748)												fa = ::iron::data::WorldData_obj::getEmptyIrradiance();
            											}
            											else {
HXLINE( 749)												fa = ::iron::Scene_obj::active->world->getSHIrradiance();
            											}
            										}
            									}
HXLINE( 752)									if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_cascadeData",7f,0e,40,0b))) {
HXLINE( 753)										if (hx::IsNotNull( lamp )) {
HXLINE( 753)											fa = lamp->getCascadeData();
            										}
            									}
            									else {
HXLINE( 757)										if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalFloatsLinks )) {
HXLINE( 758)											int _g6 = (int)0;
HXDLIN( 758)											::Array< ::Dynamic> _g15 = ::iron::object::Uniforms_obj::externalFloatsLinks;
HXDLIN( 758)											while((_g6 < _g15->length)){
HXLINE( 758)												 ::Dynamic fn4 = _g15->__get(_g6);
HXDLIN( 758)												_g6 = (_g6 + (int)1);
HXLINE( 759)												fa = ( ( ::kha::arrays::Float32ArrayPrivate)(fn4( ::Dynamic(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)))) );
HXLINE( 760)												if (hx::IsNotNull( fa )) {
HXLINE( 760)													goto _hx_goto_12;
            												}
            											}
            											_hx_goto_12:;
            										}
            									}
HXLINE( 764)									if (hx::IsNotNull( fa )) {
HXLINE( 764)										::kha::graphics4::Graphics_obj::setFloats(g,location,fa);
            									}
            								}
            								else {
HXLINE( 766)									if ((( (::String)(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("int",ef,0c,50,00))) {
HXLINE( 767)										int i = (int)0;
HXLINE( 768)										if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_uid",91,68,24,3f))) {
HXLINE( 769)											i = object->uid;
            										}
HXLINE( 771)										if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampType",51,87,29,74))) {
HXLINE( 772)											if (hx::IsNull( lamp )) {
HXLINE( 772)												i = (int)0;
            											}
            											else {
HXLINE( 772)												::String _hx_switch_0 = ( (::String)(lamp->data->raw->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) );
            												if (  (_hx_switch_0==HX_("area",8d,8b,74,40)) ){
HXLINE( 772)													i = (int)3;
HXDLIN( 772)													goto _hx_goto_13;
            												}
            												if (  (_hx_switch_0==HX_("point",50,b4,8f,c6)) ){
HXLINE( 772)													i = (int)1;
HXDLIN( 772)													goto _hx_goto_13;
            												}
            												if (  (_hx_switch_0==HX_("spot",02,e7,58,4c)) ){
HXLINE( 772)													i = (int)2;
HXDLIN( 772)													goto _hx_goto_13;
            												}
            												if (  (_hx_switch_0==HX_("sun",8c,a9,57,00)) ){
HXLINE( 772)													i = (int)0;
HXDLIN( 772)													goto _hx_goto_13;
            												}
            												/* default */{
HXLINE( 772)													i = (int)0;
            												}
            												_hx_goto_13:;
            											}
            										}
            										else {
HXLINE( 774)											if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampIndex",9b,0a,76,d3))) {
HXLINE( 775)												i = ::iron::RenderPath_obj::active->currentLampIndex;
            											}
            											else {
HXLINE( 777)												if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_lampCastShadow",d6,13,4e,54))) {
HXLINE( 778)													bool _hx_tmp34;
HXDLIN( 778)													if (hx::IsNotNull( lamp )) {
HXLINE( 778)														_hx_tmp34 = ( (bool)(lamp->data->raw->__Field(HX_("cast_shadow",a0,a0,20,eb),hx::paccDynamic)) );
            													}
            													else {
HXLINE( 778)														_hx_tmp34 = false;
            													}
HXDLIN( 778)													if (_hx_tmp34) {
HXLINE( 779)														if (( (bool)(lamp->data->raw->__Field(HX_("shadowmap_cube",98,00,eb,51),hx::paccDynamic)) )) {
HXLINE( 779)															i = (int)2;
            														}
            														else {
HXLINE( 779)															i = (int)1;
            														}
            													}
            												}
            												else {
HXLINE( 782)													if ((( (::String)(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)) ) == HX_("_envmapNumMipmaps",53,0c,70,88))) {
HXLINE( 783)														 ::iron::data::WorldData w1 = ::iron::Scene_obj::active->world;
HXLINE( 784)														if (hx::IsNotNull( w1 )) {
HXLINE( 784)															i = ((w1->getGlobalProbe()->raw->__Field(HX_("radiance_mipmaps",2f,4e,a3,5c),hx::paccDynamic) + (int)1) - (int)2);
            														}
            														else {
HXLINE( 784)															i = (int)1;
            														}
            													}
            													else {
HXLINE( 791)														if (hx::IsNotNull( ::iron::object::Uniforms_obj::externalIntLinks )) {
HXLINE( 792)															int _g7 = (int)0;
HXDLIN( 792)															::Array< ::Dynamic> _g16 = ::iron::object::Uniforms_obj::externalIntLinks;
HXDLIN( 792)															while((_g7 < _g16->length)){
HXLINE( 792)																 ::Dynamic fn5 = _g16->__get(_g7);
HXDLIN( 792)																_g7 = (_g7 + (int)1);
HXLINE( 793)																 ::Dynamic res1 = fn5( ::Dynamic(c->__Field(HX_("link",fa,17,b3,47),hx::paccDynamic)));
HXLINE( 794)																if (hx::IsNotNull( res1 )) {
HXLINE( 795)																	i = res1;
HXLINE( 796)																	goto _hx_goto_14;
            																}
            															}
            															_hx_goto_14:;
            														}
            													}
            												}
            											}
            										}
HXLINE( 801)										::kha::graphics4::Graphics_obj::setInt(g,location,i);
            									}
            								}
            							}
            						}
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC6(Uniforms_obj,setConstant,(void))

void Uniforms_obj::setMaterialConstants(::Dynamic g, ::iron::data::ShaderContext context, ::iron::data::MaterialContext materialContext){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_805_setMaterialConstants)
HXLINE( 806)		if (hx::IsNotNull( ( (::Array< ::Dynamic>)(materialContext->raw->__Field(HX_("bind_constants",4d,56,7e,59),hx::paccDynamic)) ) )) {
HXLINE( 807)			int _g1 = (int)0;
HXDLIN( 807)			int _g = ( (::Array< ::Dynamic>)(materialContext->raw->__Field(HX_("bind_constants",4d,56,7e,59),hx::paccDynamic)) )->length;
HXDLIN( 807)			while((_g1 < _g)){
HXLINE( 807)				_g1 = (_g1 + (int)1);
HXDLIN( 807)				int i = (_g1 - (int)1);
HXLINE( 808)				 ::Dynamic matc =  ::Dynamic(materialContext->raw->__Field(HX_("bind_constants",4d,56,7e,59),hx::paccDynamic))->__GetItem(i);
HXLINE( 809)				int pos = (int)-1;
HXLINE( 810)				{
HXLINE( 810)					int _g3 = (int)0;
HXDLIN( 810)					int _g2 = ( (::Array< ::Dynamic>)(context->raw->__Field(HX_("constants",8f,76,6b,44),hx::paccDynamic)) )->length;
HXDLIN( 810)					while((_g3 < _g2)){
HXLINE( 810)						_g3 = (_g3 + (int)1);
HXDLIN( 810)						int i1 = (_g3 - (int)1);
HXLINE( 811)						if ((( (::String)( ::Dynamic(context->raw->__Field(HX_("constants",8f,76,6b,44),hx::paccDynamic))->__GetItem(i1)->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) ) == ( (::String)(matc->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) ))) {
HXLINE( 812)							pos = i1;
HXLINE( 813)							goto _hx_goto_17;
            						}
            					}
            					_hx_goto_17:;
            				}
HXLINE( 816)				if ((pos == (int)-1)) {
HXLINE( 816)					continue;
            				}
HXLINE( 817)				 ::Dynamic c =  ::Dynamic(context->raw->__Field(HX_("constants",8f,76,6b,44),hx::paccDynamic))->__GetItem(pos);
HXLINE( 819)				::iron::object::Uniforms_obj::setMaterialConstant(g,context->constants->__get(pos),c,matc);
            			}
            		}
HXLINE( 823)		if (hx::IsNotNull( materialContext->textures )) {
HXLINE( 824)			int _g11 = (int)0;
HXDLIN( 824)			int _g4 = materialContext->textures->length;
HXDLIN( 824)			while((_g11 < _g4)){
HXLINE( 824)				_g11 = (_g11 + (int)1);
HXDLIN( 824)				int i2 = (_g11 - (int)1);
HXLINE( 825)				::String mname = ( (::String)( ::Dynamic(materialContext->raw->__Field(HX_("bind_textures",3a,d9,41,d5),hx::paccDynamic))->__GetItem(i2)->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) );
HXLINE( 828)				{
HXLINE( 828)					int _g31 = (int)0;
HXDLIN( 828)					int _g21 = context->textureUnits->length;
HXDLIN( 828)					while((_g31 < _g21)){
HXLINE( 828)						_g31 = (_g31 + (int)1);
HXDLIN( 828)						int j = (_g31 - (int)1);
HXLINE( 829)						::String sname = ( (::String)( ::Dynamic(context->raw->__Field(HX_("texture_units",cb,0f,52,01),hx::paccDynamic))->__GetItem(j)->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) );
HXLINE( 830)						if ((mname == sname)) {
HXLINE( 831)							::Dynamic context1 = context->textureUnits->__get(j);
HXDLIN( 831)							::kha::graphics4::Graphics_obj::setTexture(g,context1,_hx_array_unsafe_get(materialContext->textures,i2));
HXLINE( 833)							materialContext->setTextureParameters(g,i2,context,j);
HXLINE( 834)							goto _hx_goto_19;
            						}
            					}
            					_hx_goto_19:;
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC3(Uniforms_obj,setMaterialConstants,(void))

void Uniforms_obj::setMaterialConstant(::Dynamic g,::Dynamic location, ::Dynamic c, ::Dynamic matc){
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_842_setMaterialConstant)
HXDLIN( 842)		::String _g = ( (::String)(c->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) );
HXDLIN( 842)		::String _hx_switch_0 = _g;
            		if (  (_hx_switch_0==HX_("bool",2a,84,1b,41)) ){
HXLINE( 847)			::kha::graphics4::Graphics_obj::setBool(g,location, ::Dynamic(matc->__Field(HX_("bool",2a,84,1b,41),hx::paccDynamic)));
HXDLIN( 847)			goto _hx_goto_21;
            		}
            		if (  (_hx_switch_0==HX_("float",9c,c5,96,02)) ){
HXLINE( 846)			::kha::graphics4::Graphics_obj::setFloat(g,location, ::Dynamic(matc->__Field(HX_("float",9c,c5,96,02),hx::paccDynamic)));
HXDLIN( 846)			goto _hx_goto_21;
            		}
            		if (  (_hx_switch_0==HX_("int",ef,0c,50,00)) ){
HXLINE( 848)			::kha::graphics4::Graphics_obj::setInt(g,location, ::Dynamic(matc->__Field(HX_("int",ef,0c,50,00),hx::paccDynamic)));
HXDLIN( 848)			goto _hx_goto_21;
            		}
            		if (  (_hx_switch_0==HX_("vec2",5e,27,4c,4e)) ){
HXLINE( 845)			float _hx_tmp = ( ( ::kha::arrays::Float32ArrayPrivate)(matc->__Field(HX_("vec2",5e,27,4c,4e),hx::paccDynamic)) )->self.get((int)0);
HXDLIN( 845)			::kha::graphics4::Graphics_obj::setFloat2(g,location,_hx_tmp,( ( ::kha::arrays::Float32ArrayPrivate)(matc->__Field(HX_("vec2",5e,27,4c,4e),hx::paccDynamic)) )->self.get((int)1));
HXDLIN( 845)			goto _hx_goto_21;
            		}
            		if (  (_hx_switch_0==HX_("vec3",5f,27,4c,4e)) ){
HXLINE( 844)			float _hx_tmp1 = ( ( ::kha::arrays::Float32ArrayPrivate)(matc->__Field(HX_("vec3",5f,27,4c,4e),hx::paccDynamic)) )->self.get((int)0);
HXDLIN( 844)			float _hx_tmp2 = ( ( ::kha::arrays::Float32ArrayPrivate)(matc->__Field(HX_("vec3",5f,27,4c,4e),hx::paccDynamic)) )->self.get((int)1);
HXDLIN( 844)			::kha::graphics4::Graphics_obj::setFloat3(g,location,_hx_tmp1,_hx_tmp2,( ( ::kha::arrays::Float32ArrayPrivate)(matc->__Field(HX_("vec3",5f,27,4c,4e),hx::paccDynamic)) )->self.get((int)2));
HXDLIN( 844)			goto _hx_goto_21;
            		}
            		if (  (_hx_switch_0==HX_("vec4",60,27,4c,4e)) ){
HXLINE( 843)			float _hx_tmp3 = ( ( ::kha::arrays::Float32ArrayPrivate)(matc->__Field(HX_("vec4",60,27,4c,4e),hx::paccDynamic)) )->self.get((int)0);
HXDLIN( 843)			float _hx_tmp4 = ( ( ::kha::arrays::Float32ArrayPrivate)(matc->__Field(HX_("vec4",60,27,4c,4e),hx::paccDynamic)) )->self.get((int)1);
HXDLIN( 843)			float _hx_tmp5 = ( ( ::kha::arrays::Float32ArrayPrivate)(matc->__Field(HX_("vec4",60,27,4c,4e),hx::paccDynamic)) )->self.get((int)2);
HXDLIN( 843)			::kha::graphics4::Graphics_obj::setFloat4(g,location,_hx_tmp3,_hx_tmp4,_hx_tmp5,( ( ::kha::arrays::Float32ArrayPrivate)(matc->__Field(HX_("vec4",60,27,4c,4e),hx::paccDynamic)) )->self.get((int)3));
HXDLIN( 843)			goto _hx_goto_21;
            		}
            		_hx_goto_21:;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Uniforms_obj,setMaterialConstant,(void))


Uniforms_obj::Uniforms_obj()
{
}

bool Uniforms_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"biasMat") ) { outValue = ( biasMat ); return true; }
		if (HX_FIELD_EQ(inName,"helpMat") ) { outValue = ( helpMat ); return true; }
		if (HX_FIELD_EQ(inName,"helpVec") ) { outValue = ( helpVec ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"helpMat2") ) { outValue = ( helpMat2 ); return true; }
		if (HX_FIELD_EQ(inName,"helpMat3") ) { outValue = ( helpMat3 ); return true; }
		if (HX_FIELD_EQ(inName,"helpVec2") ) { outValue = ( helpVec2 ); return true; }
		if (HX_FIELD_EQ(inName,"helpQuat") ) { outValue = ( helpQuat ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"setConstant") ) { outValue = setConstant_dyn(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"setConstants") ) { outValue = setConstants_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"externalIntLinks") ) { outValue = ( externalIntLinks ); return true; }
		if (HX_FIELD_EQ(inName,"bindRenderTarget") ) { outValue = bindRenderTarget_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"externalMat4Links") ) { outValue = ( externalMat4Links ); return true; }
		if (HX_FIELD_EQ(inName,"externalVec4Links") ) { outValue = ( externalVec4Links ); return true; }
		if (HX_FIELD_EQ(inName,"externalVec3Links") ) { outValue = ( externalVec3Links ); return true; }
		if (HX_FIELD_EQ(inName,"externalVec2Links") ) { outValue = ( externalVec2Links ); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"externalFloatLinks") ) { outValue = ( externalFloatLinks ); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"externalFloatsLinks") ) { outValue = ( externalFloatsLinks ); return true; }
		if (HX_FIELD_EQ(inName,"setMaterialConstant") ) { outValue = setMaterialConstant_dyn(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"externalTextureLinks") ) { outValue = ( externalTextureLinks ); return true; }
		if (HX_FIELD_EQ(inName,"setMaterialConstants") ) { outValue = setMaterialConstants_dyn(); return true; }
	}
	return false;
}

bool Uniforms_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"biasMat") ) { biasMat=ioValue.Cast<  ::iron::math::Mat4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpMat") ) { helpMat=ioValue.Cast<  ::iron::math::Mat4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpVec") ) { helpVec=ioValue.Cast<  ::iron::math::Vec4 >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"helpMat2") ) { helpMat2=ioValue.Cast<  ::iron::math::Mat4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpMat3") ) { helpMat3=ioValue.Cast<  ::iron::math::Mat3 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpVec2") ) { helpVec2=ioValue.Cast<  ::iron::math::Vec4 >(); return true; }
		if (HX_FIELD_EQ(inName,"helpQuat") ) { helpQuat=ioValue.Cast<  ::iron::math::Quat >(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"externalIntLinks") ) { externalIntLinks=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"externalMat4Links") ) { externalMat4Links=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		if (HX_FIELD_EQ(inName,"externalVec4Links") ) { externalVec4Links=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		if (HX_FIELD_EQ(inName,"externalVec3Links") ) { externalVec3Links=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		if (HX_FIELD_EQ(inName,"externalVec2Links") ) { externalVec2Links=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"externalFloatLinks") ) { externalFloatLinks=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"externalFloatsLinks") ) { externalFloatsLinks=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"externalTextureLinks") ) { externalTextureLinks=ioValue.Cast< ::Array< ::Dynamic> >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Uniforms_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Uniforms_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::iron::math::Mat4*/ ,(void *) &Uniforms_obj::biasMat,HX_HCSTRING("biasMat","\xa7","\xe9","\xcc","\x0c")},
	{hx::fsObject /*::iron::math::Mat4*/ ,(void *) &Uniforms_obj::helpMat,HX_HCSTRING("helpMat","\x5f","\xfe","\x4c","\xc0")},
	{hx::fsObject /*::iron::math::Mat4*/ ,(void *) &Uniforms_obj::helpMat2,HX_HCSTRING("helpMat2","\xf3","\x94","\x11","\x83")},
	{hx::fsObject /*::iron::math::Mat3*/ ,(void *) &Uniforms_obj::helpMat3,HX_HCSTRING("helpMat3","\xf4","\x94","\x11","\x83")},
	{hx::fsObject /*::iron::math::Vec4*/ ,(void *) &Uniforms_obj::helpVec,HX_HCSTRING("helpVec","\x13","\xd6","\x53","\xc0")},
	{hx::fsObject /*::iron::math::Vec4*/ ,(void *) &Uniforms_obj::helpVec2,HX_HCSTRING("helpVec2","\xbf","\x7a","\x07","\x89")},
	{hx::fsObject /*::iron::math::Quat*/ ,(void *) &Uniforms_obj::helpQuat,HX_HCSTRING("helpQuat","\x38","\x8c","\xc5","\x85")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalTextureLinks,HX_HCSTRING("externalTextureLinks","\x49","\xe3","\x76","\xe1")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalMat4Links,HX_HCSTRING("externalMat4Links","\x3a","\x55","\x07","\x66")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalVec4Links,HX_HCSTRING("externalVec4Links","\xee","\xeb","\x60","\xf2")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalVec3Links,HX_HCSTRING("externalVec3Links","\x8f","\x8f","\x05","\x8c")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalVec2Links,HX_HCSTRING("externalVec2Links","\x30","\x33","\xaa","\x25")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalFloatLinks,HX_HCSTRING("externalFloatLinks","\x28","\xea","\x5e","\x28")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalFloatsLinks,HX_HCSTRING("externalFloatsLinks","\xd7","\x67","\xae","\x0c")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(void *) &Uniforms_obj::externalIntLinks,HX_HCSTRING("externalIntLinks","\x35","\xc5","\x7f","\x3f")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Uniforms_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Uniforms_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Uniforms_obj::biasMat,"biasMat");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpMat,"helpMat");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpMat2,"helpMat2");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpMat3,"helpMat3");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpVec,"helpVec");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpVec2,"helpVec2");
	HX_MARK_MEMBER_NAME(Uniforms_obj::helpQuat,"helpQuat");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalTextureLinks,"externalTextureLinks");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalMat4Links,"externalMat4Links");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalVec4Links,"externalVec4Links");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalVec3Links,"externalVec3Links");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalVec2Links,"externalVec2Links");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalFloatLinks,"externalFloatLinks");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalFloatsLinks,"externalFloatsLinks");
	HX_MARK_MEMBER_NAME(Uniforms_obj::externalIntLinks,"externalIntLinks");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Uniforms_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Uniforms_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::biasMat,"biasMat");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpMat,"helpMat");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpMat2,"helpMat2");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpMat3,"helpMat3");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpVec,"helpVec");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpVec2,"helpVec2");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::helpQuat,"helpQuat");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalTextureLinks,"externalTextureLinks");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalMat4Links,"externalMat4Links");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalVec4Links,"externalVec4Links");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalVec3Links,"externalVec3Links");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalVec2Links,"externalVec2Links");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalFloatLinks,"externalFloatLinks");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalFloatsLinks,"externalFloatsLinks");
	HX_VISIT_MEMBER_NAME(Uniforms_obj::externalIntLinks,"externalIntLinks");
};

#endif

hx::Class Uniforms_obj::__mClass;

static ::String Uniforms_obj_sStaticFields[] = {
	HX_HCSTRING("biasMat","\xa7","\xe9","\xcc","\x0c"),
	HX_HCSTRING("helpMat","\x5f","\xfe","\x4c","\xc0"),
	HX_HCSTRING("helpMat2","\xf3","\x94","\x11","\x83"),
	HX_HCSTRING("helpMat3","\xf4","\x94","\x11","\x83"),
	HX_HCSTRING("helpVec","\x13","\xd6","\x53","\xc0"),
	HX_HCSTRING("helpVec2","\xbf","\x7a","\x07","\x89"),
	HX_HCSTRING("helpQuat","\x38","\x8c","\xc5","\x85"),
	HX_HCSTRING("externalTextureLinks","\x49","\xe3","\x76","\xe1"),
	HX_HCSTRING("externalMat4Links","\x3a","\x55","\x07","\x66"),
	HX_HCSTRING("externalVec4Links","\xee","\xeb","\x60","\xf2"),
	HX_HCSTRING("externalVec3Links","\x8f","\x8f","\x05","\x8c"),
	HX_HCSTRING("externalVec2Links","\x30","\x33","\xaa","\x25"),
	HX_HCSTRING("externalFloatLinks","\x28","\xea","\x5e","\x28"),
	HX_HCSTRING("externalFloatsLinks","\xd7","\x67","\xae","\x0c"),
	HX_HCSTRING("externalIntLinks","\x35","\xc5","\x7f","\x3f"),
	HX_HCSTRING("setConstants","\x8d","\x36","\xbb","\x68"),
	HX_HCSTRING("bindRenderTarget","\xa4","\x60","\xa4","\xff"),
	HX_HCSTRING("setConstant","\x26","\x8b","\xfe","\xd5"),
	HX_HCSTRING("setMaterialConstants","\xe6","\x9a","\xce","\x60"),
	HX_HCSTRING("setMaterialConstant","\xed","\xb4","\xef","\x70"),
	::String(null())
};

void Uniforms_obj::__register()
{
	hx::Object *dummy = new Uniforms_obj;
	Uniforms_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("iron.object.Uniforms","\x48","\x55","\xb2","\xf4");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Uniforms_obj::__GetStatic;
	__mClass->mSetStaticField = &Uniforms_obj::__SetStatic;
	__mClass->mMarkFunc = Uniforms_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Uniforms_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Uniforms_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Uniforms_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Uniforms_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Uniforms_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Uniforms_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_24_boot)
HXDLIN(  24)		biasMat =  ::iron::math::Mat4_obj::__alloc( HX_CTX ,((Float)0.5),((Float)0.0),((Float)0.0),((Float)0.5),((Float)0.0),((Float)0.5),((Float)0.0),((Float)0.5),((Float)0.0),((Float)0.0),((Float)0.5),((Float)0.5),((Float)0.0),((Float)0.0),((Float)0.0),((Float)1.0));
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_36_boot)
HXDLIN(  36)		helpMat = ::iron::math::Mat4_obj::identity();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_37_boot)
HXDLIN(  37)		helpMat2 = ::iron::math::Mat4_obj::identity();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_38_boot)
HXDLIN(  38)		helpMat3 = ::iron::math::Mat3_obj::identity();
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_39_boot)
HXDLIN(  39)		helpVec =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_40_boot)
HXDLIN(  40)		helpVec2 =  ::iron::math::Vec4_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_41_boot)
HXDLIN(  41)		helpQuat =  ::iron::math::Quat_obj::__alloc( HX_CTX ,null(),null(),null(),null());
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_43_boot)
HXDLIN(  43)		externalTextureLinks = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_44_boot)
HXDLIN(  44)		externalMat4Links = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_45_boot)
HXDLIN(  45)		externalVec4Links = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_46_boot)
HXDLIN(  46)		externalVec3Links = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_47_boot)
HXDLIN(  47)		externalVec2Links = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_48_boot)
HXDLIN(  48)		externalFloatLinks = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_49_boot)
HXDLIN(  49)		externalFloatsLinks = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_ed3d8b453cef9f5d_50_boot)
HXDLIN(  50)		externalIntLinks = null();
            	}
}

} // end namespace iron
} // end namespace object
