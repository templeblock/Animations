// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_iron_Scene
#include <iron/Scene.h>
#endif
#ifndef INCLUDED_iron_data_ConstData
#include <iron/data/ConstData.h>
#endif
#ifndef INCLUDED_iron_data_Data
#include <iron/data/Data.h>
#endif
#ifndef INCLUDED_iron_data_MaterialContext
#include <iron/data/MaterialContext.h>
#endif
#ifndef INCLUDED_iron_data_MaterialData
#include <iron/data/MaterialData.h>
#endif
#ifndef INCLUDED_iron_data_ShaderContext
#include <iron/data/ShaderContext.h>
#endif
#ifndef INCLUDED_iron_data_ShaderData
#include <iron/data/ShaderData.h>
#endif
#ifndef INCLUDED_iron_object_CameraObject
#include <iron/object/CameraObject.h>
#endif
#ifndef INCLUDED_iron_object_DecalObject
#include <iron/object/DecalObject.h>
#endif
#ifndef INCLUDED_iron_object_LampObject
#include <iron/object/LampObject.h>
#endif
#ifndef INCLUDED_iron_object_Object
#include <iron/object/Object.h>
#endif
#ifndef INCLUDED_iron_object_Transform
#include <iron/object/Transform.h>
#endif
#ifndef INCLUDED_iron_object_Uniforms
#include <iron/object/Uniforms.h>
#endif
#ifndef INCLUDED_kha_graphics4_Graphics
#include <kha/graphics4/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics4_IndexBuffer
#include <kha/graphics4/IndexBuffer.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineState
#include <kha/graphics4/PipelineState.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineStateBase
#include <kha/graphics4/PipelineStateBase.h>
#endif
#ifndef INCLUDED_kha_graphics4_VertexBuffer
#include <kha/graphics4/VertexBuffer.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_dce6ca39aed22fb3_13_new,"iron.object.DecalObject","new",0x1a291755,"iron.object.DecalObject.new","iron/object/DecalObject.hx",13,0xee11d3db)
HX_LOCAL_STACK_FRAME(_hx_pos_dce6ca39aed22fb3_19_remove,"iron.object.DecalObject","remove",0xe4b45c6f,"iron.object.DecalObject.remove","iron/object/DecalObject.hx",19,0xee11d3db)
HX_LOCAL_STACK_FRAME(_hx_pos_dce6ca39aed22fb3_25_render,"iron.object.DecalObject","render",0xe5552b81,"iron.object.DecalObject.render","iron/object/DecalObject.hx",25,0xee11d3db)
namespace iron{
namespace object{

void DecalObject_obj::__construct( ::iron::data::MaterialData material){
            	HX_STACKFRAME(&_hx_pos_dce6ca39aed22fb3_13_new)
HXLINE(  14)		super::__construct();
HXLINE(  15)		this->material = material;
HXLINE(  16)		::iron::Scene_obj::active->decals->push(hx::ObjectPtr<OBJ_>(this));
            	}

Dynamic DecalObject_obj::__CreateEmpty() { return new DecalObject_obj; }

void *DecalObject_obj::_hx_vtable = 0;

Dynamic DecalObject_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< DecalObject_obj > _hx_result = new DecalObject_obj();
	_hx_result->__construct(inArgs[0]);
	return _hx_result;
}

bool DecalObject_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x2a486766) {
		return inClassId==(int)0x00000001 || inClassId==(int)0x2a486766;
	} else {
		return inClassId==(int)0x6b9505fd;
	}
}

void DecalObject_obj::remove(){
            	HX_STACKFRAME(&_hx_pos_dce6ca39aed22fb3_19_remove)
HXLINE(  20)		if (hx::IsNotNull( ::iron::Scene_obj::active )) {
HXLINE(  20)			::iron::Scene_obj::active->decals->remove(hx::ObjectPtr<OBJ_>(this));
            		}
HXLINE(  21)		this->super::remove();
            	}


void DecalObject_obj::render(::Dynamic g,::String context, ::iron::object::CameraObject camera, ::iron::object::LampObject lamp,::Array< ::String > bindParams){
            	HX_STACKFRAME(&_hx_pos_dce6ca39aed22fb3_25_render)
HXLINE(  28)		bool _hx_tmp;
HXDLIN(  28)		if (hx::IsNotNull( ( (::String)(this->material->raw->__Field(HX_("skip_context",ef,1c,4e,e1),hx::paccDynamic)) ) )) {
HXLINE(  28)			_hx_tmp = (( (::String)(this->material->raw->__Field(HX_("skip_context",ef,1c,4e,e1),hx::paccDynamic)) ) == context);
            		}
            		else {
HXLINE(  28)			_hx_tmp = false;
            		}
HXDLIN(  28)		if (_hx_tmp) {
HXLINE(  30)			return;
            		}
HXLINE(  33)		this->transform->update();
HXLINE(  35)		 ::iron::data::MaterialContext materialContext = null();
HXLINE(  36)		{
HXLINE(  36)			int _g1 = (int)0;
HXDLIN(  36)			int _g = ( (::Array< ::Dynamic>)(this->material->raw->__Field(HX_("contexts",a4,9b,2b,2f),hx::paccDynamic)) )->length;
HXDLIN(  36)			while((_g1 < _g)){
HXLINE(  36)				_g1 = (_g1 + (int)1);
HXDLIN(  36)				int i = (_g1 - (int)1);
HXLINE(  37)				if ((( (::String)( ::Dynamic(this->material->raw->__Field(HX_("contexts",a4,9b,2b,2f),hx::paccDynamic))->__GetItem(i)->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) ) == context)) {
HXLINE(  38)					materialContext = this->material->contexts->__get(i).StaticCast<  ::iron::data::MaterialContext >();
HXLINE(  39)					goto _hx_goto_2;
            				}
            			}
            			_hx_goto_2:;
            		}
HXLINE(  42)		 ::iron::data::ShaderContext shaderContext = this->material->shader->getContext(context);
HXLINE(  44)		::kha::graphics4::Graphics_obj::setPipeline(g,shaderContext->pipeState);
HXLINE(  46)		::iron::object::Uniforms_obj::setConstants(g,shaderContext,hx::ObjectPtr<OBJ_>(this),camera,lamp,bindParams);
HXLINE(  47)		::iron::object::Uniforms_obj::setMaterialConstants(g,shaderContext,materialContext);
HXLINE(  49)		::kha::graphics4::Graphics_obj::setVertexBuffer(g,::iron::data::ConstData_obj::boxVB);
HXLINE(  50)		::kha::graphics4::Graphics_obj::setIndexBuffer(g,::iron::data::ConstData_obj::boxIB);
HXLINE(  51)		::kha::graphics4::Graphics_obj::drawIndexedVertices(g,null(),null());
            	}


HX_DEFINE_DYNAMIC_FUNC5(DecalObject_obj,render,(void))


hx::ObjectPtr< DecalObject_obj > DecalObject_obj::__new( ::iron::data::MaterialData material) {
	hx::ObjectPtr< DecalObject_obj > __this = new DecalObject_obj();
	__this->__construct(material);
	return __this;
}

hx::ObjectPtr< DecalObject_obj > DecalObject_obj::__alloc(hx::Ctx *_hx_ctx, ::iron::data::MaterialData material) {
	DecalObject_obj *__this = (DecalObject_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(DecalObject_obj), true, "iron.object.DecalObject"));
	*(void **)__this = DecalObject_obj::_hx_vtable;
	__this->__construct(material);
	return __this;
}

DecalObject_obj::DecalObject_obj()
{
}

void DecalObject_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(DecalObject);
	HX_MARK_MEMBER_NAME(material,"material");
	 ::iron::object::Object_obj::__Mark(HX_MARK_ARG);
	HX_MARK_END_CLASS();
}

void DecalObject_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(material,"material");
	 ::iron::object::Object_obj::__Visit(HX_VISIT_ARG);
}

hx::Val DecalObject_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		if (HX_FIELD_EQ(inName,"render") ) { return hx::Val( render_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"material") ) { return hx::Val( material ); }
	}
	return super::__Field(inName,inCallProp);
}

hx::Val DecalObject_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 8:
		if (HX_FIELD_EQ(inName,"material") ) { material=inValue.Cast<  ::iron::data::MaterialData >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

void DecalObject_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("material","\xa7","\x5c","\xa5","\xf0"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo DecalObject_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::iron::data::MaterialData*/ ,(int)offsetof(DecalObject_obj,material),HX_HCSTRING("material","\xa7","\x5c","\xa5","\xf0")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo *DecalObject_obj_sStaticStorageInfo = 0;
#endif

static ::String DecalObject_obj_sMemberFields[] = {
	HX_HCSTRING("material","\xa7","\x5c","\xa5","\xf0"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("render","\x56","\x6b","\x29","\x05"),
	::String(null()) };

static void DecalObject_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(DecalObject_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void DecalObject_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(DecalObject_obj::__mClass,"__mClass");
};

#endif

hx::Class DecalObject_obj::__mClass;

void DecalObject_obj::__register()
{
	hx::Object *dummy = new DecalObject_obj;
	DecalObject_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("iron.object.DecalObject","\xe3","\xc8","\xf3","\xad");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = DecalObject_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(DecalObject_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< DecalObject_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = DecalObject_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = DecalObject_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = DecalObject_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace iron
} // end namespace object
