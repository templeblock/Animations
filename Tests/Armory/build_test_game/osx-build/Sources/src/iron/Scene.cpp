// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_Std
#include <Std.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_IMap
#include <haxe/IMap.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_haxe_ds_StringMap
#include <haxe/ds/StringMap.h>
#endif
#ifndef INCLUDED_iron_RenderPath
#include <iron/RenderPath.h>
#endif
#ifndef INCLUDED_iron_Scene
#include <iron/Scene.h>
#endif
#ifndef INCLUDED_iron_Trait
#include <iron/Trait.h>
#endif
#ifndef INCLUDED_iron_data_Armature
#include <iron/data/Armature.h>
#endif
#ifndef INCLUDED_iron_data_CameraData
#include <iron/data/CameraData.h>
#endif
#ifndef INCLUDED_iron_data_Data
#include <iron/data/Data.h>
#endif
#ifndef INCLUDED_iron_data_Geometry
#include <iron/data/Geometry.h>
#endif
#ifndef INCLUDED_iron_data_LampData
#include <iron/data/LampData.h>
#endif
#ifndef INCLUDED_iron_data_MaterialData
#include <iron/data/MaterialData.h>
#endif
#ifndef INCLUDED_iron_data_MeshBatch
#include <iron/data/MeshBatch.h>
#endif
#ifndef INCLUDED_iron_data_MeshData
#include <iron/data/MeshData.h>
#endif
#ifndef INCLUDED_iron_data_SceneStream
#include <iron/data/SceneStream.h>
#endif
#ifndef INCLUDED_iron_data_WorldData
#include <iron/data/WorldData.h>
#endif
#ifndef INCLUDED_iron_math_Mat4
#include <iron/math/Mat4.h>
#endif
#ifndef INCLUDED_iron_math_Quat
#include <iron/math/Quat.h>
#endif
#ifndef INCLUDED_iron_math_Vec4
#include <iron/math/Vec4.h>
#endif
#ifndef INCLUDED_iron_object_Animation
#include <iron/object/Animation.h>
#endif
#ifndef INCLUDED_iron_object_CameraObject
#include <iron/object/CameraObject.h>
#endif
#ifndef INCLUDED_iron_object_Constraint
#include <iron/object/Constraint.h>
#endif
#ifndef INCLUDED_iron_object_DecalObject
#include <iron/object/DecalObject.h>
#endif
#ifndef INCLUDED_iron_object_LampObject
#include <iron/object/LampObject.h>
#endif
#ifndef INCLUDED_iron_object_MeshObject
#include <iron/object/MeshObject.h>
#endif
#ifndef INCLUDED_iron_object_Object
#include <iron/object/Object.h>
#endif
#ifndef INCLUDED_iron_object_SpeakerObject
#include <iron/object/SpeakerObject.h>
#endif
#ifndef INCLUDED_iron_object_Transform
#include <iron/object/Transform.h>
#endif
#ifndef INCLUDED_iron_system_Time
#include <iron/system/Time.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <kha/Image.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif
#ifndef INCLUDED_kha_arrays_Float32ArrayPrivate
#include <kha/arrays/Float32ArrayPrivate.h>
#endif
#ifndef INCLUDED_kha_graphics4_Graphics
#include <kha/graphics4/Graphics.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_3ce623fd85856c5b_9_new,"iron.Scene","new",0x83f82d78,"iron.Scene.new","iron/Scene.hx",9,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_90_remove,"iron.Scene","remove",0xe8197e2c,"iron.Scene.remove","iron/Scene.hx",90,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_115_updateFrame,"iron.Scene","updateFrame",0x2d87167c,"iron.Scene.updateFrame","iron/Scene.hx",115,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_124_renderFrame,"iron.Scene","renderFrame",0x139fda0f,"iron.Scene.renderFrame","iron/Scene.hx",124,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_162_addObject,"iron.Scene","addObject",0xd62ef2d8,"iron.Scene.addObject","iron/Scene.hx",162,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_169_getChild,"iron.Scene","getChild",0x388be50e,"iron.Scene.getChild","iron/Scene.hx",169,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_173_getTrait,"iron.Scene","getTrait",0x08f1cf40,"iron.Scene.getTrait","iron/Scene.hx",173,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_176_getMesh,"iron.Scene","getMesh",0x5610c2bb,"iron.Scene.getMesh","iron/Scene.hx",176,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_181_getLamp,"iron.Scene","getLamp",0x55647de6,"iron.Scene.getLamp","iron/Scene.hx",181,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_186_getCamera,"iron.Scene","getCamera",0x3cae0ef3,"iron.Scene.getCamera","iron/Scene.hx",186,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_191_getSpeaker,"iron.Scene","getSpeaker",0xd67210f1,"iron.Scene.getSpeaker","iron/Scene.hx",191,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_196_getEmpty,"iron.Scene","getEmpty",0x62ac75ff,"iron.Scene.getEmpty","iron/Scene.hx",196,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_201_addMeshObject,"iron.Scene","addMeshObject",0x3de6e125,"iron.Scene.addMeshObject","iron/Scene.hx",201,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_207_addLampObject,"iron.Scene","addLampObject",0x2753ce90,"iron.Scene.addLampObject","iron/Scene.hx",207,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_213_addCameraObject,"iron.Scene","addCameraObject",0x45c5501d,"iron.Scene.addCameraObject","iron/Scene.hx",213,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_219_addSpeakerObject,"iron.Scene","addSpeakerObject",0x93f50225,"iron.Scene.addSpeakerObject","iron/Scene.hx",219,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_225_addDecalObject,"iron.Scene","addDecalObject",0x2a162713,"iron.Scene.addDecalObject","iron/Scene.hx",225,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_266_addScene,"iron.Scene","addScene",0x852a2b53,"iron.Scene.addScene","iron/Scene.hx",266,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_275_addScene,"iron.Scene","addScene",0x852a2b53,"iron.Scene.addScene","iron/Scene.hx",275,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_241_addScene,"iron.Scene","addScene",0x852a2b53,"iron.Scene.addScene","iron/Scene.hx",241,0xb92191f9)
static const int _hx_array_data_e98e5186_36[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_287_addScene,"iron.Scene","addScene",0x852a2b53,"iron.Scene.addScene","iron/Scene.hx",287,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_239_addScene,"iron.Scene","addScene",0x852a2b53,"iron.Scene.addScene","iron/Scene.hx",239,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_234_addScene,"iron.Scene","addScene",0x852a2b53,"iron.Scene.addScene","iron/Scene.hx",234,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_294_getObjectsCount,"iron.Scene","getObjectsCount",0x8242c229,"iron.Scene.getObjectsCount","iron/Scene.hx",294,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_309_spawnObject,"iron.Scene","spawnObject",0xf1e2a472,"iron.Scene.spawnObject","iron/Scene.hx",309,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_304_spawnObject,"iron.Scene","spawnObject",0xf1e2a472,"iron.Scene.spawnObject","iron/Scene.hx",304,0xb92191f9)
static const int _hx_array_data_e98e5186_46[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_320_parseObject,"iron.Scene","parseObject",0xd1e7606a,"iron.Scene.parseObject","iron/Scene.hx",320,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_319_parseObject,"iron.Scene","parseObject",0xd1e7606a,"iron.Scene.parseObject","iron/Scene.hx",319,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_328_getObj,"iron.Scene","getObj",0x86b4aae9,"iron.Scene.getObj","iron/Scene.hx",328,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_331_traverseObjs,"iron.Scene","traverseObjs",0xae261356,"iron.Scene.traverseObjs","iron/Scene.hx",331,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_342_createObject,"iron.Scene","createObject",0x33f7fec3,"iron.Scene.createObject","iron/Scene.hx",342,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_346_createObject,"iron.Scene","createObject",0x33f7fec3,"iron.Scene.createObject","iron/Scene.hx",346,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_352_createObject,"iron.Scene","createObject",0x33f7fec3,"iron.Scene.createObject","iron/Scene.hx",352,0xb92191f9)
static const int _hx_array_data_e98e5186_58[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_370_createObject,"iron.Scene","createObject",0x33f7fec3,"iron.Scene.createObject","iron/Scene.hx",370,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_393_createObject,"iron.Scene","createObject",0x33f7fec3,"iron.Scene.createObject","iron/Scene.hx",393,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_427_createObject,"iron.Scene","createObject",0x33f7fec3,"iron.Scene.createObject","iron/Scene.hx",427,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_440_createObject,"iron.Scene","createObject",0x33f7fec3,"iron.Scene.createObject","iron/Scene.hx",440,0xb92191f9)
static const int _hx_array_data_e98e5186_63[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_447_createObject,"iron.Scene","createObject",0x33f7fec3,"iron.Scene.createObject","iron/Scene.hx",447,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_458_getGroupObjectRefs,"iron.Scene","getGroupObjectRefs",0x26556030,"iron.Scene.getGroupObjectRefs","iron/Scene.hx",458,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_480_returnMeshObject,"iron.Scene","returnMeshObject",0x664ba544,"iron.Scene.returnMeshObject","iron/Scene.hx",480,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_479_returnMeshObject,"iron.Scene","returnMeshObject",0x664ba544,"iron.Scene.returnMeshObject","iron/Scene.hx",479,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_499_returnObject,"iron.Scene","returnObject",0x45f97b77,"iron.Scene.returnObject","iron/Scene.hx",499,0xb92191f9)
static const int _hx_array_data_e98e5186_73[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_508_returnObject,"iron.Scene","returnObject",0x45f97b77,"iron.Scene.returnObject","iron/Scene.hx",508,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_520_returnObjectLoaded,"iron.Scene","returnObjectLoaded",0x3845aadc,"iron.Scene.returnObjectLoaded","iron/Scene.hx",520,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_622_loadEmbeddedData,"iron.Scene","loadEmbeddedData",0x082c0402,"iron.Scene.loadEmbeddedData","iron/Scene.hx",622,0xb92191f9)
static const int _hx_array_data_e98e5186_79[] = {
	(int)0,
};
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_626_loadEmbeddedData,"iron.Scene","loadEmbeddedData",0x082c0402,"iron.Scene.loadEmbeddedData","iron/Scene.hx",626,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_636_notifyOnInit,"iron.Scene","notifyOnInit",0x526f8f60,"iron.Scene.notifyOnInit","iron/Scene.hx",636,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_641_removeInit,"iron.Scene","removeInit",0x6be66b5c,"iron.Scene.removeInit","iron/Scene.hx",641,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_645_notifyOnRemove,"iron.Scene","notifyOnRemove",0xe636a494,"iron.Scene.notifyOnRemove","iron/Scene.hx",645,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_649_toString,"iron.Scene","toString",0xcb69fc94,"iron.Scene.toString","iron/Scene.hx",649,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_73_create,"iron.Scene","create",0x5fa048e4,"iron.Scene.create","iron/Scene.hx",73,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_69_create,"iron.Scene","create",0x5fa048e4,"iron.Scene.create","iron/Scene.hx",69,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_64_create,"iron.Scene","create",0x5fa048e4,"iron.Scene.create","iron/Scene.hx",64,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_110_setActive,"iron.Scene","setActive",0x7eb8f620,"iron.Scene.setActive","iron/Scene.hx",110,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_109_setActive,"iron.Scene","setActive",0x7eb8f620,"iron.Scene.setActive","iron/Scene.hx",109,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_104_setActive,"iron.Scene","setActive",0x7eb8f620,"iron.Scene.setActive","iron/Scene.hx",104,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_543_generateTransform,"iron.Scene","generateTransform",0xb6aeb68f,"iron.Scene.generateTransform","iron/Scene.hx",543,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_551_createTraits,"iron.Scene","createTraits",0x643a40e9,"iron.Scene.createTraits","iron/Scene.hx",551,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_582_parseArg,"iron.Scene","parseArg",0x696733cb,"iron.Scene.parseArg","iron/Scene.hx",582,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_607_createConstraints,"iron.Scene","createConstraints",0xe59942f2,"iron.Scene.createConstraints","iron/Scene.hx",607,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_616_createTraitClassInstance,"iron.Scene","createTraitClassInstance",0x4336b543,"iron.Scene.createTraitClassInstance","iron/Scene.hx",616,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_11_boot,"iron.Scene","boot",0xed489c1a,"iron.Scene.boot","iron/Scene.hx",11,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_12_boot,"iron.Scene","boot",0xed489c1a,"iron.Scene.boot","iron/Scene.hx",12,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_13_boot,"iron.Scene","boot",0xed489c1a,"iron.Scene.boot","iron/Scene.hx",13,0xb92191f9)
HX_LOCAL_STACK_FRAME(_hx_pos_3ce623fd85856c5b_103_boot,"iron.Scene","boot",0xed489c1a,"iron.Scene.boot","iron/Scene.hx",103,0xb92191f9)
namespace iron{

void Scene_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_9_new)
HXLINE(  38)		this->traitRemoves = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  37)		this->traitInits = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  31)		this->groups = null();
HXLINE(  22)		this->sceneStream = null();
HXLINE(  21)		this->meshBatch = null();
HXLINE(  41)		this->uid = ::iron::Scene_obj::uidCounter++;
HXLINE(  48)		this->meshes = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  49)		this->lamps = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  50)		this->cameras = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  51)		this->speakers = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  52)		this->decals = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  53)		this->empties = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  54)		this->animations = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  55)		this->armatures = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  56)		this->embedded =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
HXLINE(  57)		this->root =  ::iron::object::Object_obj::__alloc( HX_CTX );
HXLINE(  58)		this->root->name = HX_("Root",42,1a,88,36);
HXLINE(  59)		this->traitInits = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  60)		this->traitRemoves = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  61)		if (hx::IsNull( ::iron::Scene_obj::global )) {
HXLINE(  61)			::iron::Scene_obj::global =  ::iron::object::Object_obj::__alloc( HX_CTX );
            		}
            	}

Dynamic Scene_obj::__CreateEmpty() { return new Scene_obj; }

void *Scene_obj::_hx_vtable = 0;

Dynamic Scene_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Scene_obj > _hx_result = new Scene_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Scene_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x2f4c0e24;
}

void Scene_obj::remove(){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_90_remove)
HXLINE(  91)		{
HXLINE(  91)			int _g = (int)0;
HXDLIN(  91)			::Array< ::Dynamic> _g1 = this->traitRemoves;
HXDLIN(  91)			while((_g < _g1->length)){
HXLINE(  91)				 ::Dynamic f = _g1->__get(_g);
HXDLIN(  91)				_g = (_g + (int)1);
HXDLIN(  91)				f();
            			}
            		}
HXLINE(  92)		if (hx::IsNotNull( this->meshBatch )) {
HXLINE(  92)			this->meshBatch->remove();
            		}
HXLINE(  93)		{
HXLINE(  93)			int _g2 = (int)0;
HXDLIN(  93)			::Array< ::Dynamic> _g11 = this->meshes;
HXDLIN(  93)			while((_g2 < _g11->length)){
HXLINE(  93)				 ::iron::object::MeshObject o = _g11->__get(_g2).StaticCast<  ::iron::object::MeshObject >();
HXDLIN(  93)				_g2 = (_g2 + (int)1);
HXDLIN(  93)				o->remove();
            			}
            		}
HXLINE(  94)		{
HXLINE(  94)			int _g3 = (int)0;
HXDLIN(  94)			::Array< ::Dynamic> _g12 = this->lamps;
HXDLIN(  94)			while((_g3 < _g12->length)){
HXLINE(  94)				 ::iron::object::LampObject o1 = _g12->__get(_g3).StaticCast<  ::iron::object::LampObject >();
HXDLIN(  94)				_g3 = (_g3 + (int)1);
HXDLIN(  94)				o1->remove();
            			}
            		}
HXLINE(  95)		{
HXLINE(  95)			int _g4 = (int)0;
HXDLIN(  95)			::Array< ::Dynamic> _g13 = this->cameras;
HXDLIN(  95)			while((_g4 < _g13->length)){
HXLINE(  95)				 ::iron::object::CameraObject o2 = _g13->__get(_g4).StaticCast<  ::iron::object::CameraObject >();
HXDLIN(  95)				_g4 = (_g4 + (int)1);
HXDLIN(  95)				o2->remove();
            			}
            		}
HXLINE(  96)		{
HXLINE(  96)			int _g5 = (int)0;
HXDLIN(  96)			::Array< ::Dynamic> _g14 = this->speakers;
HXDLIN(  96)			while((_g5 < _g14->length)){
HXLINE(  96)				 ::iron::object::SpeakerObject o3 = _g14->__get(_g5).StaticCast<  ::iron::object::SpeakerObject >();
HXDLIN(  96)				_g5 = (_g5 + (int)1);
HXDLIN(  96)				o3->remove();
            			}
            		}
HXLINE(  97)		{
HXLINE(  97)			int _g6 = (int)0;
HXDLIN(  97)			::Array< ::Dynamic> _g15 = this->decals;
HXDLIN(  97)			while((_g6 < _g15->length)){
HXLINE(  97)				 ::iron::object::DecalObject o4 = _g15->__get(_g6).StaticCast<  ::iron::object::DecalObject >();
HXDLIN(  97)				_g6 = (_g6 + (int)1);
HXDLIN(  97)				o4->remove();
            			}
            		}
HXLINE(  98)		{
HXLINE(  98)			int _g7 = (int)0;
HXDLIN(  98)			::Array< ::Dynamic> _g16 = this->empties;
HXDLIN(  98)			while((_g7 < _g16->length)){
HXLINE(  98)				 ::iron::object::Object o5 = _g16->__get(_g7).StaticCast<  ::iron::object::Object >();
HXDLIN(  98)				_g7 = (_g7 + (int)1);
HXDLIN(  98)				o5->remove();
            			}
            		}
HXLINE(  99)		this->groups = null();
HXLINE( 100)		this->root->remove();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Scene_obj,remove,(void))

void Scene_obj::updateFrame(){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_115_updateFrame)
HXLINE( 116)		if (!(this->ready)) {
HXLINE( 116)			return;
            		}
HXLINE( 120)		{
HXLINE( 120)			int _g = (int)0;
HXDLIN( 120)			::Array< ::Dynamic> _g1 = this->animations;
HXDLIN( 120)			while((_g < _g1->length)){
HXLINE( 120)				 ::iron::object::Animation anim = _g1->__get(_g).StaticCast<  ::iron::object::Animation >();
HXDLIN( 120)				_g = (_g + (int)1);
HXDLIN( 120)				anim->update((((Float)0.0166666666666666664) * ::iron::_hx_system::Time_obj::scale));
            			}
            		}
HXLINE( 121)		{
HXLINE( 121)			int _g2 = (int)0;
HXDLIN( 121)			::Array< ::Dynamic> _g11 = this->empties;
HXDLIN( 121)			while((_g2 < _g11->length)){
HXLINE( 121)				 ::iron::object::Object e = _g11->__get(_g2).StaticCast<  ::iron::object::Object >();
HXDLIN( 121)				_g2 = (_g2 + (int)1);
HXDLIN( 121)				bool _hx_tmp;
HXDLIN( 121)				if (hx::IsNotNull( e )) {
HXLINE( 121)					_hx_tmp = hx::IsNotNull( e->parent );
            				}
            				else {
HXLINE( 121)					_hx_tmp = false;
            				}
HXDLIN( 121)				if (_hx_tmp) {
HXLINE( 121)					e->transform->update();
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC0(Scene_obj,updateFrame,(void))

void Scene_obj::renderFrame(::Dynamic g){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_124_renderFrame)
HXLINE( 125)		bool _hx_tmp;
HXDLIN( 125)		if (!(!(this->ready))) {
HXLINE( 125)			_hx_tmp = hx::IsNull( ::iron::RenderPath_obj::active );
            		}
            		else {
HXLINE( 125)			_hx_tmp = true;
            		}
HXDLIN( 125)		if (_hx_tmp) {
HXLINE( 125)			return;
            		}
HXLINE( 126)		::iron::Scene_obj::framePassed = true;
HXLINE( 128)		 ::iron::object::CameraObject activeCamera = this->camera;
HXLINE( 130)		{
HXLINE( 130)			int _g = (int)0;
HXDLIN( 130)			::Array< ::Dynamic> _g1 = this->cameras;
HXDLIN( 130)			while((_g < _g1->length)){
HXLINE( 130)				 ::iron::object::CameraObject cam = _g1->__get(_g).StaticCast<  ::iron::object::CameraObject >();
HXDLIN( 130)				_g = (_g + (int)1);
HXLINE( 131)				if (hx::IsNotNull( cam->data->renderTarget )) {
HXLINE( 152)					this->camera = cam;
HXLINE( 153)					this->camera->renderFrame(g);
            				}
            			}
            		}
HXLINE( 157)		this->camera = activeCamera;
HXLINE( 158)		if (hx::IsNotNull( this->camera )) {
HXLINE( 158)			this->camera->renderFrame(g);
            		}
            		else {
HXLINE( 158)			::iron::RenderPath_obj::active->renderFrame(g);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,renderFrame,(void))

 ::iron::object::Object Scene_obj::addObject( ::iron::object::Object parent){
            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_162_addObject)
HXLINE( 163)		 ::iron::object::Object object =  ::iron::object::Object_obj::__alloc( HX_CTX );
HXLINE( 164)		if (hx::IsNotNull( parent )) {
HXLINE( 164)			parent->addChild(object,null());
            		}
            		else {
HXLINE( 164)			this->root->addChild(object,null());
            		}
HXLINE( 165)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,addObject,return )

 ::iron::object::Object Scene_obj::getChild(::String name){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_169_getChild)
HXDLIN( 169)		return this->root->getChild(name);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,getChild,return )

 ::Dynamic Scene_obj::getTrait(hx::Class c){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_173_getTrait)
HXDLIN( 173)		if ((this->root->children->length > (int)0)) {
HXDLIN( 173)			return this->root->children->__get((int)0).StaticCast<  ::iron::object::Object >()->getTrait(c).StaticCast<  ::iron::Trait >();
            		}
            		else {
HXDLIN( 173)			return null();
            		}
HXDLIN( 173)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,getTrait,return )

 ::iron::object::MeshObject Scene_obj::getMesh(::String name){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_176_getMesh)
HXLINE( 177)		{
HXLINE( 177)			int _g = (int)0;
HXDLIN( 177)			::Array< ::Dynamic> _g1 = this->meshes;
HXDLIN( 177)			while((_g < _g1->length)){
HXLINE( 177)				 ::iron::object::MeshObject m = _g1->__get(_g).StaticCast<  ::iron::object::MeshObject >();
HXDLIN( 177)				_g = (_g + (int)1);
HXDLIN( 177)				if ((m->name == name)) {
HXLINE( 177)					return m;
            				}
            			}
            		}
HXLINE( 178)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,getMesh,return )

 ::iron::object::LampObject Scene_obj::getLamp(::String name){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_181_getLamp)
HXLINE( 182)		{
HXLINE( 182)			int _g = (int)0;
HXDLIN( 182)			::Array< ::Dynamic> _g1 = this->lamps;
HXDLIN( 182)			while((_g < _g1->length)){
HXLINE( 182)				 ::iron::object::LampObject l = _g1->__get(_g).StaticCast<  ::iron::object::LampObject >();
HXDLIN( 182)				_g = (_g + (int)1);
HXDLIN( 182)				if ((l->name == name)) {
HXLINE( 182)					return l;
            				}
            			}
            		}
HXLINE( 183)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,getLamp,return )

 ::iron::object::CameraObject Scene_obj::getCamera(::String name){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_186_getCamera)
HXLINE( 187)		{
HXLINE( 187)			int _g = (int)0;
HXDLIN( 187)			::Array< ::Dynamic> _g1 = this->cameras;
HXDLIN( 187)			while((_g < _g1->length)){
HXLINE( 187)				 ::iron::object::CameraObject c = _g1->__get(_g).StaticCast<  ::iron::object::CameraObject >();
HXDLIN( 187)				_g = (_g + (int)1);
HXDLIN( 187)				if ((c->name == name)) {
HXLINE( 187)					return c;
            				}
            			}
            		}
HXLINE( 188)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,getCamera,return )

 ::iron::object::SpeakerObject Scene_obj::getSpeaker(::String name){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_191_getSpeaker)
HXLINE( 192)		{
HXLINE( 192)			int _g = (int)0;
HXDLIN( 192)			::Array< ::Dynamic> _g1 = this->speakers;
HXDLIN( 192)			while((_g < _g1->length)){
HXLINE( 192)				 ::iron::object::SpeakerObject s = _g1->__get(_g).StaticCast<  ::iron::object::SpeakerObject >();
HXDLIN( 192)				_g = (_g + (int)1);
HXDLIN( 192)				if ((s->name == name)) {
HXLINE( 192)					return s;
            				}
            			}
            		}
HXLINE( 193)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,getSpeaker,return )

 ::iron::object::Object Scene_obj::getEmpty(::String name){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_196_getEmpty)
HXLINE( 197)		{
HXLINE( 197)			int _g = (int)0;
HXDLIN( 197)			::Array< ::Dynamic> _g1 = this->empties;
HXDLIN( 197)			while((_g < _g1->length)){
HXLINE( 197)				 ::iron::object::Object e = _g1->__get(_g).StaticCast<  ::iron::object::Object >();
HXDLIN( 197)				_g = (_g + (int)1);
HXDLIN( 197)				if ((e->name == name)) {
HXLINE( 197)					return e;
            				}
            			}
            		}
HXLINE( 198)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,getEmpty,return )

 ::iron::object::MeshObject Scene_obj::addMeshObject( ::iron::data::MeshData data,::Array< ::Dynamic> materials, ::iron::object::Object parent){
            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_201_addMeshObject)
HXLINE( 202)		 ::iron::object::MeshObject object =  ::iron::object::MeshObject_obj::__alloc( HX_CTX ,data,materials);
HXLINE( 203)		if (hx::IsNotNull( parent )) {
HXLINE( 203)			parent->addChild(object,null());
            		}
            		else {
HXLINE( 203)			this->root->addChild(object,null());
            		}
HXLINE( 204)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Scene_obj,addMeshObject,return )

 ::iron::object::LampObject Scene_obj::addLampObject( ::iron::data::LampData data, ::iron::object::Object parent){
            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_207_addLampObject)
HXLINE( 208)		 ::iron::object::LampObject object =  ::iron::object::LampObject_obj::__alloc( HX_CTX ,data);
HXLINE( 209)		if (hx::IsNotNull( parent )) {
HXLINE( 209)			parent->addChild(object,null());
            		}
            		else {
HXLINE( 209)			this->root->addChild(object,null());
            		}
HXLINE( 210)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,addLampObject,return )

 ::iron::object::CameraObject Scene_obj::addCameraObject( ::iron::data::CameraData data, ::iron::object::Object parent){
            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_213_addCameraObject)
HXLINE( 214)		 ::iron::object::CameraObject object =  ::iron::object::CameraObject_obj::__alloc( HX_CTX ,data);
HXLINE( 215)		if (hx::IsNotNull( parent )) {
HXLINE( 215)			parent->addChild(object,null());
            		}
            		else {
HXLINE( 215)			this->root->addChild(object,null());
            		}
HXLINE( 216)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,addCameraObject,return )

 ::iron::object::SpeakerObject Scene_obj::addSpeakerObject( ::Dynamic data, ::iron::object::Object parent){
            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_219_addSpeakerObject)
HXLINE( 220)		 ::iron::object::SpeakerObject object =  ::iron::object::SpeakerObject_obj::__alloc( HX_CTX ,data);
HXLINE( 221)		if (hx::IsNotNull( parent )) {
HXLINE( 221)			parent->addChild(object,null());
            		}
            		else {
HXLINE( 221)			this->root->addChild(object,null());
            		}
HXLINE( 222)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,addSpeakerObject,return )

 ::iron::object::DecalObject Scene_obj::addDecalObject( ::iron::data::MaterialData material, ::iron::object::Object parent){
            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_225_addDecalObject)
HXLINE( 226)		 ::iron::object::DecalObject object =  ::iron::object::DecalObject_obj::__alloc( HX_CTX ,material);
HXLINE( 227)		if (hx::IsNotNull( parent )) {
HXLINE( 227)			parent->addChild(object,null());
            		}
            		else {
HXLINE( 227)			this->root->addChild(object,null());
            		}
HXLINE( 228)		return object;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,addDecalObject,return )

void Scene_obj::addScene(::String sceneName, ::iron::object::Object parent, ::Dynamic done){
            		HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_4, ::iron::Scene,_gthis, ::iron::object::Object,parent, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::Dynamic format){
            			HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_3, ::iron::object::Object,parent, ::iron::Scene,_gthis, ::Dynamic,done, ::Dynamic,format) HXARGC(0)
            			void _hx_run(){
            				HX_BEGIN_LOCAL_FUNC_S5(hx::LocalFunc,_hx_Closure_1,int,objectsCount, ::iron::Scene,_gthis,::Array< int >,objectsTraversed,::Array< ::Dynamic>,traverseObjects, ::Dynamic,format) HXARGC(4)
            				void _hx_run( ::iron::object::Object parent1,::Array< ::Dynamic> objects, ::Dynamic parentObject, ::Dynamic done1){
            					HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_266_addScene)
HXLINE( 267)					if (hx::IsNull( objects )) {
HXLINE( 267)						return;
            					}
HXLINE( 268)					{
HXLINE( 268)						int _g1 = (int)0;
HXDLIN( 268)						int _g = objects->length;
HXDLIN( 268)						while((_g1 < _g)){
            							HX_BEGIN_LOCAL_FUNC_S5(hx::LocalFunc,_hx_Closure_0,int,objectsCount,::Array< int >,objectsTraversed, ::Dynamic,done1,::Array< ::Dynamic>,traverseObjects, ::Dynamic,o) HXARGC(1)
            							void _hx_run( ::iron::object::Object object){
            								HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_275_addScene)
HXLINE( 276)								if (hx::IsNotNull( object )) {
HXLINE( 276)									traverseObjects->__get((int)0)(object, ::Dynamic(o->__Field(HX_("children",3f,19,6a,70),hx::paccDynamic)),o,done1);
            								}
HXLINE( 277)								if ((++objectsTraversed[(int)0] == objectsCount)) {
HXLINE( 277)									done1();
            								}
            							}
            							HX_END_LOCAL_FUNC1((void))

HXLINE( 268)							_g1 = (_g1 + (int)1);
HXDLIN( 268)							int i = (_g1 - (int)1);
HXLINE( 269)							 ::Dynamic o = objects->__get(i);
HXLINE( 270)							bool _hx_tmp;
HXDLIN( 270)							if (hx::IsNotNull( o->__Field(HX_("spawn",3b,9e,66,81),hx::paccDynamic) )) {
HXLINE( 270)								_hx_tmp = hx::IsEq( o->__Field(HX_("spawn",3b,9e,66,81),hx::paccDynamic),false );
            							}
            							else {
HXLINE( 270)								_hx_tmp = false;
            							}
HXDLIN( 270)							if (_hx_tmp) {
HXLINE( 271)								if ((++objectsTraversed[(int)0] == objectsCount)) {
HXLINE( 271)									done1();
            								}
HXLINE( 272)								continue;
            							}
HXLINE( 275)							_gthis->createObject(o,format,parent1,parentObject, ::Dynamic(new _hx_Closure_0(objectsCount,objectsTraversed,done1,traverseObjects,o)));
            						}
            					}
            				}
            				HX_END_LOCAL_FUNC4((void))

            				HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_241_addScene)
HXLINE( 263)				::Array< int > objectsTraversed = ::Array_obj< int >::fromData( _hx_array_data_e98e5186_36,1);
HXLINE( 265)				int objectsCount = _gthis->getObjectsCount(( (::Array< ::Dynamic>)(format->__Field(HX_("objects",d4,68,4f,82),hx::paccDynamic)) ),null());
HXLINE( 266)				::Array< ::Dynamic> traverseObjects = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXDLIN( 266)				traverseObjects[(int)0] =  ::Dynamic(new _hx_Closure_1(objectsCount,_gthis,objectsTraversed,traverseObjects,format));
HXDLIN( 266)				 ::Dynamic traverseObjects1 = traverseObjects->__get((int)0);
HXLINE( 282)				bool _hx_tmp1;
HXDLIN( 282)				if (hx::IsNotNull( ( (::Array< ::Dynamic>)(format->__Field(HX_("objects",d4,68,4f,82),hx::paccDynamic)) ) )) {
HXLINE( 282)					_hx_tmp1 = (( (::Array< ::Dynamic>)(format->__Field(HX_("objects",d4,68,4f,82),hx::paccDynamic)) )->length == (int)0);
            				}
            				else {
HXLINE( 282)					_hx_tmp1 = true;
            				}
HXDLIN( 282)				if (_hx_tmp1) {
HXLINE( 283)					done(parent);
            				}
            				else {
            					HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_2, ::iron::object::Object,parent, ::Dynamic,done) HXARGC(0)
            					void _hx_run(){
            						HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_287_addScene)
HXLINE( 287)						done(parent);
            					}
            					HX_END_LOCAL_FUNC0((void))

HXLINE( 286)					traverseObjects1(parent, ::Dynamic(format->__Field(HX_("objects",d4,68,4f,82),hx::paccDynamic)),null(), ::Dynamic(new _hx_Closure_2(parent,done)));
            				}
            			}
            			HX_END_LOCAL_FUNC0((void))

            			HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_239_addScene)
HXLINE( 240)			::iron::Scene_obj::createTraits(( (::Array< ::Dynamic>)(format->__Field(HX_("traits",e5,c0,81,45),hx::paccDynamic)) ),parent);
HXLINE( 241)			_gthis->loadEmbeddedData(( (::Array< ::String >)(format->__Field(HX_("embedded_datas",54,33,7c,a7),hx::paccDynamic)) ), ::Dynamic(new _hx_Closure_3(parent,_gthis,done,format)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_234_addScene)
HXDLIN( 234)		 ::iron::Scene _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 235)		if (hx::IsNull( parent )) {
HXLINE( 236)			parent = this->addObject(null());
HXLINE( 237)			parent->name = sceneName;
            		}
HXLINE( 239)		::iron::data::Data_obj::getSceneRaw(sceneName, ::Dynamic(new _hx_Closure_4(_gthis,parent,done)));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Scene_obj,addScene,(void))

int Scene_obj::getObjectsCount(::Array< ::Dynamic> objects,hx::Null< bool >  __o_discardNoSpawn){
bool discardNoSpawn = __o_discardNoSpawn.Default(true);
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_294_getObjectsCount)
HXLINE( 295)		if (hx::IsNull( objects )) {
HXLINE( 295)			return (int)0;
            		}
HXLINE( 296)		int result = objects->length;
HXLINE( 297)		{
HXLINE( 297)			int _g = (int)0;
HXDLIN( 297)			while((_g < objects->length)){
HXLINE( 297)				 ::Dynamic o = objects->__get(_g);
HXDLIN( 297)				_g = (_g + (int)1);
HXLINE( 298)				bool _hx_tmp;
HXDLIN( 298)				bool _hx_tmp1;
HXDLIN( 298)				if (discardNoSpawn) {
HXLINE( 298)					_hx_tmp1 = hx::IsNotNull( o->__Field(HX_("spawn",3b,9e,66,81),hx::paccDynamic) );
            				}
            				else {
HXLINE( 298)					_hx_tmp1 = false;
            				}
HXDLIN( 298)				if (_hx_tmp1) {
HXLINE( 298)					_hx_tmp = hx::IsEq( o->__Field(HX_("spawn",3b,9e,66,81),hx::paccDynamic),false );
            				}
            				else {
HXLINE( 298)					_hx_tmp = false;
            				}
HXDLIN( 298)				if (_hx_tmp) {
HXLINE( 298)					continue;
            				}
HXLINE( 299)				if (hx::IsNotNull( ( (::Array< ::Dynamic>)(o->__Field(HX_("children",3f,19,6a,70),hx::paccDynamic)) ) )) {
HXLINE( 299)					result = (result + this->getObjectsCount(( (::Array< ::Dynamic>)(o->__Field(HX_("children",3f,19,6a,70),hx::paccDynamic)) ),null()));
            				}
            			}
            		}
HXLINE( 301)		return result;
            	}


HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,getObjectsCount,return )

void Scene_obj::spawnObject(::String name, ::iron::object::Object parent, ::Dynamic done,hx::Null< bool >  __o_spawnChildren){
            		HX_BEGIN_LOCAL_FUNC_S5(hx::LocalFunc,_hx_Closure_1,int,objectsCount, ::iron::Scene,_gthis,::Array< int >,objectsTraversed,::Array< ::Dynamic>,spawnObjectTree,bool,spawnChildren) HXARGC(3)
            		void _hx_run( ::Dynamic obj1, ::iron::object::Object parent1, ::Dynamic done1){
            			HX_BEGIN_LOCAL_FUNC_S6(hx::LocalFunc,_hx_Closure_0,int,objectsCount,::Array< int >,objectsTraversed, ::Dynamic,done1, ::Dynamic,obj1,::Array< ::Dynamic>,spawnObjectTree,bool,spawnChildren) HXARGC(1)
            			void _hx_run( ::iron::object::Object object){
            				HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_309_spawnObject)
HXLINE( 310)				bool _hx_tmp;
HXDLIN( 310)				if (spawnChildren) {
HXLINE( 310)					_hx_tmp = hx::IsNotNull( ( (::Array< ::Dynamic>)(obj1->__Field(HX_("children",3f,19,6a,70),hx::paccDynamic)) ) );
            				}
            				else {
HXLINE( 310)					_hx_tmp = false;
            				}
HXDLIN( 310)				if (_hx_tmp) {
HXLINE( 311)					int _g = (int)0;
HXDLIN( 311)					::Array< ::Dynamic> _g1 = ( (::Array< ::Dynamic>)(obj1->__Field(HX_("children",3f,19,6a,70),hx::paccDynamic)) );
HXDLIN( 311)					while((_g < _g1->length)){
HXLINE( 311)						 ::Dynamic child = _g1->__get(_g);
HXDLIN( 311)						_g = (_g + (int)1);
HXDLIN( 311)						spawnObjectTree->__get((int)0)(child,object,done1);
            					}
            				}
HXLINE( 313)				bool _hx_tmp1;
HXDLIN( 313)				if ((++objectsTraversed[(int)0] == objectsCount)) {
HXLINE( 313)					_hx_tmp1 = hx::IsNotNull( done1 );
            				}
            				else {
HXLINE( 313)					_hx_tmp1 = false;
            				}
HXDLIN( 313)				if (_hx_tmp1) {
HXLINE( 313)					done1(object);
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_309_spawnObject)
HXLINE( 309)			_gthis->createObject(obj1,_gthis->raw,parent1,null(), ::Dynamic(new _hx_Closure_0(objectsCount,objectsTraversed,done1,obj1,spawnObjectTree,spawnChildren)));
            		}
            		HX_END_LOCAL_FUNC3((void))

bool spawnChildren = __o_spawnChildren.Default(true);
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_304_spawnObject)
HXDLIN( 304)		 ::iron::Scene _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 305)		::Array< int > objectsTraversed = ::Array_obj< int >::fromData( _hx_array_data_e98e5186_46,1);
HXLINE( 306)		 ::Dynamic obj = this->getObj(this->raw,name);
HXLINE( 307)		int objectsCount;
HXDLIN( 307)		if (spawnChildren) {
HXLINE( 307)			objectsCount = this->getObjectsCount(::Array_obj< ::Dynamic>::__new(1)->init(0,obj),false);
            		}
            		else {
HXLINE( 307)			objectsCount = (int)1;
            		}
HXLINE( 308)		::Array< ::Dynamic> spawnObjectTree = ::Array_obj< ::Dynamic>::__new(1)->init(0,null());
HXDLIN( 308)		spawnObjectTree[(int)0] =  ::Dynamic(new _hx_Closure_1(objectsCount,_gthis,objectsTraversed,spawnObjectTree,spawnChildren));
HXDLIN( 308)		 ::Dynamic spawnObjectTree1 = spawnObjectTree->__get((int)0);
HXLINE( 316)		spawnObjectTree1(obj,parent,done);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Scene_obj,spawnObject,(void))

void Scene_obj::parseObject(::String sceneName,::String objectName, ::iron::object::Object parent, ::Dynamic done){
            		HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_0, ::iron::object::Object,parent, ::iron::Scene,_gthis,::String,objectName, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::Dynamic format){
            			HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_320_parseObject)
HXLINE( 321)			 ::Dynamic o = _gthis->getObj(format,objectName);
HXLINE( 322)			if (hx::IsNull( o )) {
HXLINE( 322)				done(null());
            			}
HXLINE( 323)			_gthis->createObject(o,format,parent,null(),done);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_319_parseObject)
HXDLIN( 319)		 ::iron::Scene _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 320)		::iron::data::Data_obj::getSceneRaw(sceneName, ::Dynamic(new _hx_Closure_0(parent,_gthis,objectName,done)));
            	}


HX_DEFINE_DYNAMIC_FUNC4(Scene_obj,parseObject,(void))

 ::Dynamic Scene_obj::getObj( ::Dynamic format,::String name){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_328_getObj)
HXDLIN( 328)		return this->traverseObjs(( (::Array< ::Dynamic>)(format->__Field(HX_("objects",d4,68,4f,82),hx::paccDynamic)) ),name);
            	}


HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,getObj,return )

 ::Dynamic Scene_obj::traverseObjs(::Array< ::Dynamic> children,::String name){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_331_traverseObjs)
HXLINE( 332)		{
HXLINE( 332)			int _g = (int)0;
HXDLIN( 332)			while((_g < children->length)){
HXLINE( 332)				 ::Dynamic o = children->__get(_g);
HXDLIN( 332)				_g = (_g + (int)1);
HXLINE( 333)				if ((( (::String)(o->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) ) == name)) {
HXLINE( 333)					return o;
            				}
HXLINE( 334)				if (hx::IsNotNull( ( (::Array< ::Dynamic>)(o->__Field(HX_("children",3f,19,6a,70),hx::paccDynamic)) ) )) {
HXLINE( 335)					 ::Dynamic res = this->traverseObjs(( (::Array< ::Dynamic>)(o->__Field(HX_("children",3f,19,6a,70),hx::paccDynamic)) ),name);
HXLINE( 336)					if (hx::IsNotNull( res )) {
HXLINE( 336)						return res;
            					}
            				}
            			}
            		}
HXLINE( 339)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,traverseObjs,return )

void Scene_obj::createObject( ::Dynamic o, ::Dynamic format, ::iron::object::Object parent, ::Dynamic parentObject, ::Dynamic done){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_342_createObject)
HXDLIN( 342)		 ::iron::Scene _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 344)		::String sceneName = ( (::String)(format->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) );
HXLINE( 345)		if ((( (::String)(o->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("camera_object",59,98,62,be))) {
            			HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_0, ::iron::object::Object,parent, ::iron::Scene,_gthis, ::Dynamic,done, ::Dynamic,o) HXARGC(1)
            			void _hx_run( ::iron::data::CameraData b){
            				HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_346_createObject)
HXLINE( 347)				 ::iron::object::CameraObject object = _gthis->addCameraObject(b,parent);
HXLINE( 348)				_gthis->returnObject(object,o,done);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 346)			::iron::data::Data_obj::getCamera(sceneName,( (::String)(o->__Field(HX_("data_ref",7e,d1,bc,93),hx::paccDynamic)) ), ::Dynamic(new _hx_Closure_0(parent,_gthis,done,o)));
            		}
            		else {
HXLINE( 351)			if ((( (::String)(o->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("lamp_object",46,de,9e,94))) {
            				HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_1, ::iron::object::Object,parent, ::iron::Scene,_gthis, ::Dynamic,done, ::Dynamic,o) HXARGC(1)
            				void _hx_run( ::iron::data::LampData b1){
            					HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_352_createObject)
HXLINE( 353)					 ::iron::object::LampObject object1 = _gthis->addLampObject(b1,parent);
HXLINE( 354)					_gthis->returnObject(object1,o,done);
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 352)				::iron::data::Data_obj::getLamp(sceneName,( (::String)(o->__Field(HX_("data_ref",7e,d1,bc,93),hx::paccDynamic)) ), ::Dynamic(new _hx_Closure_1(parent,_gthis,done,o)));
            			}
            			else {
HXLINE( 357)				if ((( (::String)(o->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("mesh_object",11,0e,bc,3e))) {
HXLINE( 358)					bool _hx_tmp;
HXDLIN( 358)					if (hx::IsNotNull( ( (::Array< ::String >)(o->__Field(HX_("material_refs",98,d1,be,32),hx::paccDynamic)) ) )) {
HXLINE( 358)						_hx_tmp = (( (::Array< ::String >)(o->__Field(HX_("material_refs",98,d1,be,32),hx::paccDynamic)) )->length == (int)0);
            					}
            					else {
HXLINE( 358)						_hx_tmp = true;
            					}
HXDLIN( 358)					if (_hx_tmp) {
HXLINE( 360)						 ::iron::object::Object object2 = this->addObject(parent);
HXLINE( 361)						this->returnObject(object2,o,done);
            					}
            					else {
HXLINE( 365)						::Array< ::Dynamic> this1 = ::Array_obj< ::Dynamic>::__new(( (::Array< ::String >)(o->__Field(HX_("material_refs",98,d1,be,32),hx::paccDynamic)) )->length);
HXDLIN( 365)						::Array< ::Dynamic> materials = this1;
HXLINE( 366)						::Array< int > materialsLoaded = ::Array_obj< int >::fromData( _hx_array_data_e98e5186_58,1);
HXLINE( 368)						{
HXLINE( 368)							int _g1 = (int)0;
HXDLIN( 368)							int _g = ( (::Array< ::String >)(o->__Field(HX_("material_refs",98,d1,be,32),hx::paccDynamic)) )->length;
HXDLIN( 368)							while((_g1 < _g)){
            								HX_BEGIN_LOCAL_FUNC_S9(hx::LocalFunc,_hx_Closure_3, ::iron::Scene,_gthis, ::iron::object::Object,parent,::Array< int >,materialsLoaded,::Array< ::Dynamic>,materials, ::Dynamic,parentObject,::String,sceneName, ::Dynamic,done, ::Dynamic,o,int,i) HXARGC(1)
            								void _hx_run( ::iron::data::MaterialData mat){
            									HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_370_createObject)
HXLINE( 371)									materials->__unsafe_set(i,mat);
HXLINE( 372)									materialsLoaded[(int)0]++;
HXLINE( 374)									if ((materialsLoaded->__get((int)0) == ( (::Array< ::String >)(o->__Field(HX_("material_refs",98,d1,be,32),hx::paccDynamic)) )->length)) {
HXLINE( 377)										::Array< ::String > ref1 = ( (::String)(o->__Field(HX_("data_ref",7e,d1,bc,93),hx::paccDynamic)) ).split(HX_("/",2f,00,00,00));
HXLINE( 378)										::String object_file = HX_("",00,00,00,00);
HXLINE( 379)										::String data_ref = HX_("",00,00,00,00);
HXLINE( 380)										if ((ref1->length == (int)2)) {
HXLINE( 381)											object_file = ref1->__get((int)0);
HXLINE( 382)											data_ref = ref1->__get((int)1);
            										}
            										else {
HXLINE( 385)											object_file = sceneName;
HXLINE( 386)											data_ref = ( (::String)(o->__Field(HX_("data_ref",7e,d1,bc,93),hx::paccDynamic)) );
            										}
HXLINE( 390)										bool _hx_tmp1;
HXDLIN( 390)										if (hx::IsNotNull( parentObject )) {
HXLINE( 390)											_hx_tmp1 = hx::IsNotNull( ( (::Array< ::String >)(parentObject->__Field(HX_("bone_actions",c2,c4,dc,85),hx::paccDynamic)) ) );
            										}
            										else {
HXLINE( 390)											_hx_tmp1 = false;
            										}
HXDLIN( 390)										if (_hx_tmp1) {
HXLINE( 391)											::Array< ::Dynamic> bactions = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 392)											{
HXLINE( 392)												int _g2 = (int)0;
HXDLIN( 392)												::Array< ::String > _g3 = ( (::Array< ::String >)(parentObject->__Field(HX_("bone_actions",c2,c4,dc,85),hx::paccDynamic)) );
HXDLIN( 392)												while((_g2 < _g3->length)){
            													HX_BEGIN_LOCAL_FUNC_S10(hx::LocalFunc,_hx_Closure_2,::String,data_ref, ::iron::object::Object,parent, ::iron::Scene,_gthis,::Array< ::Dynamic>,materials,::String,object_file,::String,sceneName, ::Dynamic,parentObject,::Array< ::Dynamic>,bactions, ::Dynamic,done, ::Dynamic,o) HXARGC(1)
            													void _hx_run( ::Dynamic action){
            														HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_393_createObject)
HXLINE( 394)														bactions->push(action);
HXLINE( 395)														if ((bactions->length == ( (::Array< ::String >)(parentObject->__Field(HX_("bone_actions",c2,c4,dc,85),hx::paccDynamic)) )->length)) {
HXLINE( 396)															 ::iron::data::Armature armature =  ::iron::data::Armature_obj::__alloc( HX_CTX , ::Dynamic(parentObject->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)),bactions);
HXLINE( 397)															_gthis->armatures->push(armature);
HXLINE( 401)															_gthis->returnMeshObject(object_file,data_ref,sceneName,armature,materials,parent,o,done);
            														}
            													}
            													HX_END_LOCAL_FUNC1((void))

HXLINE( 392)													::String ref2 = _g3->__get(_g2);
HXDLIN( 392)													_g2 = (_g2 + (int)1);
HXLINE( 393)													::iron::data::Data_obj::getSceneRaw(ref2, ::Dynamic(new _hx_Closure_2(data_ref,parent,_gthis,materials,object_file,sceneName,parentObject,bactions,done,o)));
            												}
            											}
            										}
            										else {
HXLINE( 412)											_gthis->returnMeshObject(object_file,data_ref,sceneName,null(),materials,parent,o,done);
            										}
            									}
            								}
            								HX_END_LOCAL_FUNC1((void))

HXLINE( 368)								_g1 = (_g1 + (int)1);
HXDLIN( 368)								int i = (_g1 - (int)1);
HXLINE( 369)								::String ref = ( (::String)( ::Dynamic(o->__Field(HX_("material_refs",98,d1,be,32),hx::paccDynamic))->__GetItem(i)) );
HXLINE( 370)								::iron::data::Data_obj::getMaterial(sceneName,ref, ::Dynamic(new _hx_Closure_3(_gthis,parent,materialsLoaded,materials,parentObject,sceneName,done,o,i)));
            							}
            						}
            					}
            				}
            				else {
HXLINE( 421)					if ((( (::String)(o->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("speaker_object",3f,29,6c,51))) {
HXLINE( 422)						 ::Dynamic object3 = ::iron::data::Data_obj::getSpeakerRawByName(( (::Array< ::Dynamic>)(format->__Field(HX_("speaker_datas",89,34,fc,dd),hx::paccDynamic)) ),( (::String)(o->__Field(HX_("data_ref",7e,d1,bc,93),hx::paccDynamic)) ));
HXDLIN( 422)						 ::iron::object::SpeakerObject object4 = this->addSpeakerObject(object3,parent);
HXLINE( 423)						this->returnObject(object4,o,done);
            					}
            					else {
HXLINE( 425)						if ((( (::String)(o->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("decal_object",d1,fc,ca,75))) {
HXLINE( 426)							bool _hx_tmp2;
HXDLIN( 426)							if (hx::IsNotNull( ( (::Array< ::String >)(o->__Field(HX_("material_refs",98,d1,be,32),hx::paccDynamic)) ) )) {
HXLINE( 426)								_hx_tmp2 = (( (::Array< ::String >)(o->__Field(HX_("material_refs",98,d1,be,32),hx::paccDynamic)) )->length > (int)0);
            							}
            							else {
HXLINE( 426)								_hx_tmp2 = false;
            							}
HXDLIN( 426)							if (_hx_tmp2) {
            								HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_4, ::iron::object::Object,parent, ::iron::Scene,_gthis, ::Dynamic,done, ::Dynamic,o) HXARGC(1)
            								void _hx_run( ::iron::data::MaterialData material){
            									HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_427_createObject)
HXLINE( 428)									 ::iron::object::DecalObject object5 = _gthis->addDecalObject(material,parent);
HXLINE( 429)									_gthis->returnObject(object5,o,done);
            								}
            								HX_END_LOCAL_FUNC1((void))

HXLINE( 427)								::iron::data::Data_obj::getMaterial(sceneName,( (::String)( ::Dynamic(o->__Field(HX_("material_refs",98,d1,be,32),hx::paccDynamic))->__GetItem((int)0)) ), ::Dynamic(new _hx_Closure_4(parent,_gthis,done,o)));
            							}
            							else {
HXLINE( 433)								 ::iron::object::DecalObject object6 = this->addDecalObject(null(),parent);
HXLINE( 434)								this->returnObject(object6,o,done);
            							}
            						}
            						else {
HXLINE( 437)							if ((( (::String)(o->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("object",bf,7e,3f,15))) {
            								HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_6, ::iron::Scene,_gthis, ::Dynamic,done, ::Dynamic,o) HXARGC(1)
            								void _hx_run( ::iron::object::Object ro){
            									HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_440_createObject)
HXLINE( 440)									if (hx::IsNotNull( ( (::String)(o->__Field(HX_("group_ref",13,dd,2a,e3),hx::paccDynamic)) ) )) {
HXLINE( 441)										::Array< int > spawned = ::Array_obj< int >::fromData( _hx_array_data_e98e5186_63,1);
HXLINE( 442)										::Array< ::String > object_refs = _gthis->getGroupObjectRefs(( (::String)(o->__Field(HX_("group_ref",13,dd,2a,e3),hx::paccDynamic)) ));
HXLINE( 443)										if ((object_refs->length == (int)0)) {
HXLINE( 443)											done(ro);
            										}
            										else {
HXLINE( 445)											int _g4 = (int)0;
HXDLIN( 445)											while((_g4 < object_refs->length)){
            												HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_5,::Array< int >,spawned, ::iron::object::Object,ro, ::Dynamic,done,::Array< ::String >,object_refs) HXARGC(1)
            												void _hx_run( ::iron::object::Object so){
            													HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_447_createObject)
HXLINE( 447)													if ((++spawned[(int)0] == object_refs->length)) {
HXLINE( 447)														done(ro);
            													}
            												}
            												HX_END_LOCAL_FUNC1((void))

HXLINE( 445)												::String s = object_refs->__get(_g4);
HXDLIN( 445)												_g4 = (_g4 + (int)1);
HXLINE( 446)												_gthis->spawnObject(s,ro, ::Dynamic(new _hx_Closure_5(spawned,ro,done,object_refs)),null());
            											}
            										}
            									}
            									else {
HXLINE( 452)										done(ro);
            									}
            								}
            								HX_END_LOCAL_FUNC1((void))

HXLINE( 438)								 ::iron::object::Object object7 = this->addObject(parent);
HXLINE( 439)								this->returnObject(object7,o, ::Dynamic(new _hx_Closure_6(_gthis,done,o)));
            							}
            							else {
HXLINE( 455)								done(null());
            							}
            						}
            					}
            				}
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC5(Scene_obj,createObject,(void))

::Array< ::String > Scene_obj::getGroupObjectRefs(::String group_ref){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_458_getGroupObjectRefs)
HXLINE( 459)		{
HXLINE( 459)			int _g = (int)0;
HXDLIN( 459)			::Array< ::Dynamic> _g1 = ( (::Array< ::Dynamic>)(this->raw->__Field(HX_("groups",54,24,28,1c),hx::paccDynamic)) );
HXDLIN( 459)			while((_g < _g1->length)){
HXLINE( 459)				 ::Dynamic g = _g1->__get(_g);
HXDLIN( 459)				_g = (_g + (int)1);
HXDLIN( 459)				if ((( (::String)(g->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) ) == group_ref)) {
HXLINE( 459)					return ( (::Array< ::String >)(g->__Field(HX_("object_refs",80,18,ba,da),hx::paccDynamic)) );
            				}
            			}
            		}
HXLINE( 460)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,getGroupObjectRefs,return )

void Scene_obj::returnMeshObject(::String object_file,::String data_ref,::String sceneName, ::iron::data::Armature armature,::Array< ::Dynamic> materials, ::iron::object::Object parent, ::Dynamic o, ::Dynamic done){
            		HX_BEGIN_LOCAL_FUNC_S7(hx::LocalFunc,_hx_Closure_0, ::iron::object::Object,parent, ::iron::Scene,_gthis,::Array< ::Dynamic>,materials, ::iron::data::Armature,armature,::String,sceneName, ::Dynamic,done, ::Dynamic,o) HXARGC(1)
            		void _hx_run( ::iron::data::MeshData mesh){
            			HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_480_returnMeshObject)
HXLINE( 481)			if (mesh->isSkinned) {
HXLINE( 482)				 ::iron::data::Geometry g = mesh->geom;
HXLINE( 483)				if (hx::IsNotNull( armature )) {
HXLINE( 483)					g->addArmature(armature);
            				}
            				else {
HXLINE( 483)					g->addAction(( (::Array< ::Dynamic>)(mesh->format->__Field(HX_("objects",d4,68,4f,82),hx::paccDynamic)) ),HX_("none",b8,12,0a,49));
            				}
            			}
HXLINE( 485)			 ::iron::object::MeshObject object = _gthis->addMeshObject(mesh,materials,parent);
HXLINE( 488)			if (hx::IsNotNull( ( (::Array< ::Dynamic>)(o->__Field(HX_("particle_refs",99,af,e1,81),hx::paccDynamic)) ) )) {
HXLINE( 489)				int _g = (int)0;
HXDLIN( 489)				::Array< ::Dynamic> _g1 = ( (::Array< ::Dynamic>)(o->__Field(HX_("particle_refs",99,af,e1,81),hx::paccDynamic)) );
HXDLIN( 489)				while((_g < _g1->length)){
HXLINE( 489)					 ::Dynamic ref = _g1->__get(_g);
HXDLIN( 489)					_g = (_g + (int)1);
HXDLIN( 489)					object->setupParticleSystem(sceneName,ref);
            				}
            			}
HXLINE( 492)			if (hx::IsNotNull( ( (::String)(o->__Field(HX_("tilesheet_ref",85,9b,84,a0),hx::paccDynamic)) ) )) {
HXLINE( 493)				object->setupTilesheet(sceneName,( (::String)(o->__Field(HX_("tilesheet_ref",85,9b,84,a0),hx::paccDynamic)) ),( (::String)(o->__Field(HX_("tilesheet_action_ref",18,35,58,35),hx::paccDynamic)) ));
            			}
HXLINE( 495)			_gthis->returnObject(object,o,done);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_479_returnMeshObject)
HXDLIN( 479)		 ::iron::Scene _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 480)		::iron::data::Data_obj::getMesh(object_file,data_ref, ::Dynamic(new _hx_Closure_0(parent,_gthis,materials,armature,sceneName,done,o)));
            	}


HX_DEFINE_DYNAMIC_FUNC8(Scene_obj,returnMeshObject,(void))

void Scene_obj::returnObject( ::iron::object::Object object, ::Dynamic o, ::Dynamic done){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_499_returnObject)
HXDLIN( 499)		 ::iron::Scene _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 501)		bool _hx_tmp;
HXDLIN( 501)		if (hx::IsNotNull( object )) {
HXLINE( 501)			_hx_tmp = hx::IsNotNull( ( (::Array< ::String >)(o->__Field(HX_("object_actions",3d,33,f1,c0),hx::paccDynamic)) ) );
            		}
            		else {
HXLINE( 501)			_hx_tmp = false;
            		}
HXDLIN( 501)		if (_hx_tmp) {
HXLINE( 502)			::Array< ::Dynamic> oactions = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 503)			while((oactions->length < ( (::Array< ::String >)(o->__Field(HX_("object_actions",3d,33,f1,c0),hx::paccDynamic)) )->length)){
HXLINE( 503)				oactions->push(null());
            			}
HXLINE( 504)			::Array< int > actionsLoaded = ::Array_obj< int >::fromData( _hx_array_data_e98e5186_73,1);
HXLINE( 505)			{
HXLINE( 505)				int _g1 = (int)0;
HXDLIN( 505)				int _g = ( (::Array< ::String >)(o->__Field(HX_("object_actions",3d,33,f1,c0),hx::paccDynamic)) )->length;
HXDLIN( 505)				while((_g1 < _g)){
            					HX_BEGIN_LOCAL_FUNC_S7(hx::LocalFunc,_hx_Closure_0,::Array< ::Dynamic>,oactions, ::iron::Scene,_gthis, ::iron::object::Object,object,::Array< int >,actionsLoaded, ::Dynamic,done, ::Dynamic,o,int,i) HXARGC(1)
            					void _hx_run( ::Dynamic action){
            						HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_508_returnObject)
HXLINE( 509)						oactions[i] = action;
HXLINE( 510)						actionsLoaded[(int)0]++;
HXLINE( 511)						if ((actionsLoaded->__get((int)0) == ( (::Array< ::String >)(o->__Field(HX_("object_actions",3d,33,f1,c0),hx::paccDynamic)) )->length)) {
HXLINE( 512)							_gthis->returnObjectLoaded(object,o,oactions,done);
            						}
            					}
            					HX_END_LOCAL_FUNC1((void))

HXLINE( 505)					_g1 = (_g1 + (int)1);
HXDLIN( 505)					int i = (_g1 - (int)1);
HXLINE( 506)					::String ref = ( (::String)( ::Dynamic(o->__Field(HX_("object_actions",3d,33,f1,c0),hx::paccDynamic))->__GetItem(i)) );
HXLINE( 507)					if ((ref == HX_("null",87,9e,0e,49))) {
HXLINE( 507)						actionsLoaded[(int)0]++;
HXDLIN( 507)						continue;
            					}
HXLINE( 508)					::iron::data::Data_obj::getSceneRaw(ref, ::Dynamic(new _hx_Closure_0(oactions,_gthis,object,actionsLoaded,done,o,i)));
            				}
            			}
            		}
            		else {
HXLINE( 517)			this->returnObjectLoaded(object,o,null(),done);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC3(Scene_obj,returnObject,(void))

void Scene_obj::returnObjectLoaded( ::iron::object::Object object, ::Dynamic o,::Array< ::Dynamic> oactions, ::Dynamic done){
            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_520_returnObjectLoaded)
HXLINE( 521)		if (hx::IsNotNull( object )) {
HXLINE( 522)			object->raw = o;
HXLINE( 523)			object->name = ( (::String)(o->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) );
HXLINE( 524)			if (hx::IsNotNull( o->__Field(HX_("visible",72,78,24,a3),hx::paccDynamic) )) {
HXLINE( 524)				object->visible = ( (bool)(o->__Field(HX_("visible",72,78,24,a3),hx::paccDynamic)) );
            			}
HXLINE( 525)			if (hx::IsNotNull( o->__Field(HX_("visible_mesh",1a,10,c2,dd),hx::paccDynamic) )) {
HXLINE( 525)				object->visibleMesh = ( (bool)(o->__Field(HX_("visible_mesh",1a,10,c2,dd),hx::paccDynamic)) );
            			}
HXLINE( 526)			if (hx::IsNotNull( o->__Field(HX_("visible_shadow",4d,33,e9,72),hx::paccDynamic) )) {
HXLINE( 526)				object->visibleShadow = ( (bool)(o->__Field(HX_("visible_shadow",4d,33,e9,72),hx::paccDynamic)) );
            			}
HXLINE( 527)			::iron::Scene_obj::createConstraints(( (::Array< ::Dynamic>)(o->__Field(HX_("constraints",76,51,b4,17),hx::paccDynamic)) ),object);
HXLINE( 528)			::iron::Scene_obj::generateTransform(o,object->transform);
HXLINE( 529)			object->setupAnimation(oactions);
HXLINE( 530)			if (hx::IsNotNull( ( (::Array< ::String >)(o->__Field(HX_("groups",54,24,28,1c),hx::paccDynamic)) ) )) {
HXLINE( 531)				if (hx::IsNull( this->groups )) {
HXLINE( 531)					this->groups =  ::haxe::ds::StringMap_obj::__alloc( HX_CTX );
            				}
HXLINE( 532)				{
HXLINE( 532)					int _g = (int)0;
HXDLIN( 532)					::Array< ::String > _g1 = ( (::Array< ::String >)(o->__Field(HX_("groups",54,24,28,1c),hx::paccDynamic)) );
HXDLIN( 532)					while((_g < _g1->length)){
HXLINE( 532)						::String gname = _g1->__get(_g);
HXDLIN( 532)						_g = (_g + (int)1);
HXLINE( 533)						::Array< ::Dynamic> g = ( (::Array< ::Dynamic>)(this->groups->get(gname)) );
HXLINE( 534)						if (hx::IsNull( g )) {
HXLINE( 534)							g = ::Array_obj< ::Dynamic>::__new(0);
HXDLIN( 534)							this->groups->set(gname,g);
            						}
HXLINE( 535)						g->push(object);
            					}
            				}
            			}
HXLINE( 538)			::iron::Scene_obj::createTraits(( (::Array< ::Dynamic>)(o->__Field(HX_("traits",e5,c0,81,45),hx::paccDynamic)) ),object);
            		}
HXLINE( 540)		done(object);
            	}


HX_DEFINE_DYNAMIC_FUNC4(Scene_obj,returnObjectLoaded,(void))

void Scene_obj::loadEmbeddedData(::Array< ::String > datas, ::Dynamic done){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_622_loadEmbeddedData)
HXDLIN( 622)		 ::iron::Scene _gthis = hx::ObjectPtr<OBJ_>(this);
HXLINE( 623)		if (hx::IsNull( datas )) {
HXLINE( 623)			done();
HXDLIN( 623)			return;
            		}
HXLINE( 624)		::Array< int > loaded = ::Array_obj< int >::fromData( _hx_array_data_e98e5186_79,1);
HXLINE( 625)		{
HXLINE( 625)			int _g = (int)0;
HXDLIN( 625)			while((_g < datas->length)){
            				HX_BEGIN_LOCAL_FUNC_S5(hx::LocalFunc,_hx_Closure_0, ::iron::Scene,_gthis,::Array< ::String >,datas,::String,file,::Array< int >,loaded, ::Dynamic,done) HXARGC(1)
            				void _hx_run( ::kha::Image image){
            					HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_626_loadEmbeddedData)
HXLINE( 627)					_gthis->embedded->set(file,image);
HXLINE( 628)					loaded[(int)0]++;
HXLINE( 629)					if ((loaded->__get((int)0) == datas->length)) {
HXLINE( 629)						done();
            					}
            				}
            				HX_END_LOCAL_FUNC1((void))

HXLINE( 625)				::String file = datas->__get(_g);
HXDLIN( 625)				_g = (_g + (int)1);
HXLINE( 626)				::iron::data::Data_obj::getImage(file, ::Dynamic(new _hx_Closure_0(_gthis,datas,file,loaded,done)),null(),null());
            			}
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,loadEmbeddedData,(void))

void Scene_obj::notifyOnInit( ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_636_notifyOnInit)
HXDLIN( 636)		if (this->ready) {
HXDLIN( 636)			f();
            		}
            		else {
HXLINE( 637)			this->traitInits->push(f);
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,notifyOnInit,(void))

void Scene_obj::removeInit( ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_641_removeInit)
HXDLIN( 641)		this->traitInits->remove(f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,removeInit,(void))

void Scene_obj::notifyOnRemove( ::Dynamic f){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_645_notifyOnRemove)
HXDLIN( 645)		this->traitRemoves->push(f);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,notifyOnRemove,(void))

::String Scene_obj::toString(){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_649_toString)
HXDLIN( 649)		return (HX_("Scene ",74,bd,60,73) + ( (::String)(this->raw->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) ));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Scene_obj,toString,return )

 ::iron::Scene Scene_obj::active;

 ::iron::object::Object Scene_obj::global;

int Scene_obj::uidCounter;

void Scene_obj::create( ::Dynamic format, ::Dynamic done){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1, ::Dynamic,done, ::Dynamic,format) HXARGC(1)
            		void _hx_run( ::iron::data::WorldData world){
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,done, ::Dynamic,format) HXARGC(1)
            			void _hx_run( ::iron::object::Object sceneObject){
            				HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_73_create)
HXLINE(  75)				if ((::iron::Scene_obj::active->cameras->length == (int)0)) {
HXLINE(  76)					 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN(  76)					_hx_tmp(((HX_("No camera found for scene \"",bd,92,36,34) + ( (::String)(format->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) )) + HX_("\"",22,00,00,00)),hx::SourceInfo(HX_("Scene.hx",12,fd,2c,9b),76,HX_("iron.Scene",86,51,8e,e9),HX_("create",fc,66,0f,7c)));
            				}
HXLINE(  79)				::iron::Scene_obj::active->camera = ::iron::Scene_obj::active->getCamera(( (::String)(format->__Field(HX_("camera_ref",79,1b,67,ba),hx::paccDynamic)) ));
HXLINE(  80)				::iron::Scene_obj::active->ready = true;
HXLINE(  82)				{
HXLINE(  82)					int _g = (int)0;
HXDLIN(  82)					::Array< ::Dynamic> _g1 = ::iron::Scene_obj::active->traitInits;
HXDLIN(  82)					while((_g < _g1->length)){
HXLINE(  82)						 ::Dynamic f = _g1->__get(_g);
HXDLIN(  82)						_g = (_g + (int)1);
HXDLIN(  82)						f();
            					}
            				}
HXLINE(  83)				::iron::Scene_obj::active->traitInits = ::Array_obj< ::Dynamic>::__new(0);
HXLINE(  85)				done(sceneObject);
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_69_create)
HXLINE(  70)			::iron::Scene_obj::active->world = world;
HXLINE(  73)			::iron::Scene_obj::active->addScene(( (::String)(format->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) ),null(), ::Dynamic(new _hx_Closure_0(done,format)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_64_create)
HXLINE(  65)		::iron::Scene_obj::active =  ::iron::Scene_obj::__alloc( HX_CTX );
HXLINE(  66)		::iron::Scene_obj::active->ready = false;
HXLINE(  67)		::iron::Scene_obj::active->raw = format;
HXLINE(  69)		::iron::data::Data_obj::getWorld(( (::String)(format->__Field(HX_("name",4b,72,ff,48),hx::paccDynamic)) ),( (::String)(format->__Field(HX_("world_ref",a6,45,65,61),hx::paccDynamic)) ), ::Dynamic(new _hx_Closure_1(done,format)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,create,(void))

bool Scene_obj::framePassed;

void Scene_obj::setActive(::String sceneName, ::Dynamic done){
            		HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_1, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::Dynamic format){
            			HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_0, ::Dynamic,done) HXARGC(1)
            			void _hx_run( ::iron::object::Object o){
            				HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_110_setActive)
HXLINE( 110)				if (hx::IsNotNull( done )) {
HXLINE( 110)					done(o);
            				}
            			}
            			HX_END_LOCAL_FUNC1((void))

            			HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_109_setActive)
HXLINE( 109)			::iron::Scene_obj::create(format, ::Dynamic(new _hx_Closure_0(done)));
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_104_setActive)
HXLINE( 105)		if (!(::iron::Scene_obj::framePassed)) {
HXLINE( 105)			return;
            		}
HXLINE( 106)		::iron::Scene_obj::framePassed = false;
HXLINE( 107)		if (hx::IsNotNull( ::iron::Scene_obj::active )) {
HXLINE( 107)			::iron::Scene_obj::active->remove();
            		}
HXLINE( 108)		::iron::data::Data_obj::getSceneRaw(sceneName, ::Dynamic(new _hx_Closure_1(done)));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,setActive,(void))

void Scene_obj::generateTransform( ::Dynamic object, ::iron::object::Transform transform){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_543_generateTransform)
HXLINE( 544)		 ::iron::math::Mat4 _hx_tmp;
HXDLIN( 544)		if (hx::IsNotNull( object->__Field(HX_("transform",6c,2d,93,45),hx::paccDynamic) )) {
HXLINE( 544)			_hx_tmp = ::iron::math::Mat4_obj::fromFloat32Array(( ( ::kha::arrays::Float32ArrayPrivate)( ::Dynamic(object->__Field(HX_("transform",6c,2d,93,45),hx::paccDynamic))->__Field(HX_("values",e2,03,b7,4f),hx::paccDynamic)) ),null());
            		}
            		else {
HXLINE( 544)			_hx_tmp = ::iron::math::Mat4_obj::identity();
            		}
HXDLIN( 544)		transform->world = _hx_tmp;
HXLINE( 545)		transform->world->decompose(transform->loc,transform->rot,transform->scale);
HXLINE( 547)		if (hx::IsNotNull( object->__Field(HX_("local_transform_only",f3,1b,f3,4f),hx::paccDynamic) )) {
HXLINE( 547)			transform->localOnly = ( (bool)(object->__Field(HX_("local_transform_only",f3,1b,f3,4f),hx::paccDynamic)) );
            		}
HXLINE( 548)		if (hx::IsNotNull( transform->object->parent )) {
HXLINE( 548)			transform->update();
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,generateTransform,(void))

void Scene_obj::createTraits(::Array< ::Dynamic> traits, ::iron::object::Object object){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_551_createTraits)
HXLINE( 552)		if (hx::IsNull( traits )) {
HXLINE( 552)			return;
            		}
HXLINE( 553)		{
HXLINE( 553)			int _g = (int)0;
HXDLIN( 553)			while((_g < traits->length)){
HXLINE( 553)				 ::Dynamic t = traits->__get(_g);
HXDLIN( 553)				_g = (_g + (int)1);
HXLINE( 554)				if ((( (::String)(t->__Field(HX_("type",ba,f2,08,4d),hx::paccDynamic)) ) == HX_("Script",2b,c2,f4,7b))) {
HXLINE( 556)					::cpp::VirtualArray args = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 557)					if (hx::IsNotNull( ( (::Array< ::String >)(t->__Field(HX_("parameters",aa,be,7e,51),hx::paccDynamic)) ) )) {
HXLINE( 558)						int _g1 = (int)0;
HXDLIN( 558)						::Array< ::String > _g2 = ( (::Array< ::String >)(t->__Field(HX_("parameters",aa,be,7e,51),hx::paccDynamic)) );
HXDLIN( 558)						while((_g1 < _g2->length)){
HXLINE( 558)							::String param = _g2->__get(_g1);
HXDLIN( 558)							_g1 = (_g1 + (int)1);
HXLINE( 559)							args->push(::iron::Scene_obj::parseArg(param));
            						}
            					}
HXLINE( 562)					 ::iron::Trait traitInst = ( ( ::iron::Trait)(::iron::Scene_obj::createTraitClassInstance(( (::String)(t->__Field(HX_("class_name",f2,4a,01,ac),hx::paccDynamic)) ),args)) );
HXLINE( 563)					if (hx::IsNull( traitInst )) {
HXLINE( 564)						 ::Dynamic _hx_tmp = ::haxe::Log_obj::trace;
HXDLIN( 564)						_hx_tmp(((((HX_("Error: Trait '",a7,04,a0,9b) + ( (::String)(t->__Field(HX_("class_name",f2,4a,01,ac),hx::paccDynamic)) )) + HX_("' referenced in object '",93,54,24,c2)) + object->name) + HX_("' not found",3c,4a,88,c3)),hx::SourceInfo(HX_("Scene.hx",12,fd,2c,9b),564,HX_("iron.Scene",86,51,8e,e9),HX_("createTraits",01,01,d7,67)));
HXLINE( 565)						continue;
            					}
HXLINE( 567)					if (hx::IsNotNull( ( (::Array< ::String >)(t->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic)) ) )) {
HXLINE( 568)						int _g21 = (int)0;
HXDLIN( 568)						int _g11 = ::Std_obj::_hx_int(((Float)( (::Array< ::String >)(t->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic)) )->length / (Float)(int)2));
HXDLIN( 568)						while((_g21 < _g11)){
HXLINE( 568)							_g21 = (_g21 + (int)1);
HXDLIN( 568)							int i = (_g21 - (int)1);
HXLINE( 569)							::Array< ::String > t1 = ( (::Array< ::String >)(t->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic)) );
HXDLIN( 569)							::String pname = t1->__get((i * (int)2));
HXLINE( 570)							::Array< ::String > t2 = ( (::Array< ::String >)(t->__Field(HX_("props",70,e7,8f,c8),hx::paccDynamic)) );
HXDLIN( 570)							::String pval = t2->__get(((i * (int)2) + (int)1));
HXLINE( 571)							bool _hx_tmp1;
HXDLIN( 571)							if ((pval != HX_("",00,00,00,00))) {
HXLINE( 571)								_hx_tmp1 = hx::IsNotNull( ::Reflect_obj::field(traitInst,pname) );
            							}
            							else {
HXLINE( 571)								_hx_tmp1 = false;
            							}
HXDLIN( 571)							if (_hx_tmp1) {
HXLINE( 572)								::Reflect_obj::setProperty(traitInst,pname,::iron::Scene_obj::parseArg(pval));
            							}
            						}
            					}
HXLINE( 576)					object->addTrait(traitInst);
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,createTraits,(void))

 ::Dynamic Scene_obj::parseArg(::String str){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_582_parseArg)
HXDLIN( 582)		if ((str == HX_("true",4e,a7,03,4d))) {
HXDLIN( 582)			return true;
            		}
            		else {
HXLINE( 583)			if ((str == HX_("false",a3,35,4f,fb))) {
HXLINE( 583)				return false;
            			}
            			else {
HXLINE( 584)				if ((str == HX_("null",87,9e,0e,49))) {
HXLINE( 584)					return null();
            				}
            				else {
HXLINE( 585)					if ((str.charAt((int)0) == HX_("'",27,00,00,00))) {
HXLINE( 585)						return ::StringTools_obj::replace(str,HX_("'",27,00,00,00),HX_("",00,00,00,00));
            					}
            					else {
HXLINE( 586)						if ((str.charAt((int)0) == HX_("\"",22,00,00,00))) {
HXLINE( 586)							return ::StringTools_obj::replace(str,HX_("\"",22,00,00,00),HX_("",00,00,00,00));
            						}
            						else {
HXLINE( 587)							if ((str.charAt((int)0) == HX_("[",5b,00,00,00))) {
HXLINE( 590)								str = ::StringTools_obj::replace(str,HX_("[",5b,00,00,00),HX_("",00,00,00,00));
HXLINE( 591)								str = ::StringTools_obj::replace(str,HX_("]",5d,00,00,00),HX_("",00,00,00,00));
HXLINE( 592)								str = ::StringTools_obj::replace(str,HX_(" ",20,00,00,00),HX_("",00,00,00,00));
HXLINE( 593)								 ::Dynamic ar = ::cpp::VirtualArray_obj::__new(0);
HXLINE( 594)								::Array< ::String > s = str.split(HX_(",",2c,00,00,00));
HXLINE( 595)								{
HXLINE( 595)									int _g = (int)0;
HXDLIN( 595)									while((_g < s->length)){
HXLINE( 595)										::String childStr = s->__get(_g);
HXDLIN( 595)										_g = (_g + (int)1);
HXLINE( 596)										 ::Dynamic ar1 =  ::Dynamic(ar->__Field(HX_("push",da,11,61,4a),hx::paccDynamic));
HXDLIN( 596)										ar1(::iron::Scene_obj::parseArg(childStr));
            									}
            								}
HXLINE( 598)								return ar;
            							}
            							else {
HXLINE( 601)								Float f = ::Std_obj::parseFloat(str);
HXLINE( 602)								 ::Dynamic i = ::Std_obj::parseInt(str);
HXLINE( 603)								if (hx::IsEq( f,i )) {
HXLINE( 603)									return i;
            								}
            								else {
HXLINE( 603)									return f;
            								}
            							}
            						}
            					}
            				}
            			}
            		}
HXLINE( 582)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Scene_obj,parseArg,return )

void Scene_obj::createConstraints(::Array< ::Dynamic> constraints, ::iron::object::Object object){
            	HX_GC_STACKFRAME(&_hx_pos_3ce623fd85856c5b_607_createConstraints)
HXLINE( 608)		if (hx::IsNull( constraints )) {
HXLINE( 608)			return;
            		}
HXLINE( 609)		object->constraints = ::Array_obj< ::Dynamic>::__new(0);
HXLINE( 610)		{
HXLINE( 610)			int _g = (int)0;
HXDLIN( 610)			while((_g < constraints->length)){
HXLINE( 610)				 ::Dynamic c = constraints->__get(_g);
HXDLIN( 610)				_g = (_g + (int)1);
HXLINE( 611)				 ::iron::object::Constraint constr =  ::iron::object::Constraint_obj::__alloc( HX_CTX ,c);
HXLINE( 612)				object->constraints->push(constr);
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,createConstraints,(void))

 ::Dynamic Scene_obj::createTraitClassInstance(::String traitName,::cpp::VirtualArray args){
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_616_createTraitClassInstance)
HXLINE( 617)		hx::Class cname = ::Type_obj::resolveClass(traitName);
HXLINE( 618)		if (hx::IsNull( cname )) {
HXLINE( 618)			return null();
            		}
HXLINE( 619)		return ::Type_obj::createInstance(cname,args);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Scene_obj,createTraitClassInstance,return )


hx::ObjectPtr< Scene_obj > Scene_obj::__new() {
	hx::ObjectPtr< Scene_obj > __this = new Scene_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Scene_obj > Scene_obj::__alloc(hx::Ctx *_hx_ctx) {
	Scene_obj *__this = (Scene_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Scene_obj), true, "iron.Scene"));
	*(void **)__this = Scene_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Scene_obj::Scene_obj()
{
}

void Scene_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Scene);
	HX_MARK_MEMBER_NAME(uid,"uid");
	HX_MARK_MEMBER_NAME(raw,"raw");
	HX_MARK_MEMBER_NAME(root,"root");
	HX_MARK_MEMBER_NAME(camera,"camera");
	HX_MARK_MEMBER_NAME(world,"world");
	HX_MARK_MEMBER_NAME(meshBatch,"meshBatch");
	HX_MARK_MEMBER_NAME(sceneStream,"sceneStream");
	HX_MARK_MEMBER_NAME(meshes,"meshes");
	HX_MARK_MEMBER_NAME(lamps,"lamps");
	HX_MARK_MEMBER_NAME(cameras,"cameras");
	HX_MARK_MEMBER_NAME(speakers,"speakers");
	HX_MARK_MEMBER_NAME(decals,"decals");
	HX_MARK_MEMBER_NAME(empties,"empties");
	HX_MARK_MEMBER_NAME(animations,"animations");
	HX_MARK_MEMBER_NAME(armatures,"armatures");
	HX_MARK_MEMBER_NAME(groups,"groups");
	HX_MARK_MEMBER_NAME(embedded,"embedded");
	HX_MARK_MEMBER_NAME(ready,"ready");
	HX_MARK_MEMBER_NAME(traitInits,"traitInits");
	HX_MARK_MEMBER_NAME(traitRemoves,"traitRemoves");
	HX_MARK_END_CLASS();
}

void Scene_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(uid,"uid");
	HX_VISIT_MEMBER_NAME(raw,"raw");
	HX_VISIT_MEMBER_NAME(root,"root");
	HX_VISIT_MEMBER_NAME(camera,"camera");
	HX_VISIT_MEMBER_NAME(world,"world");
	HX_VISIT_MEMBER_NAME(meshBatch,"meshBatch");
	HX_VISIT_MEMBER_NAME(sceneStream,"sceneStream");
	HX_VISIT_MEMBER_NAME(meshes,"meshes");
	HX_VISIT_MEMBER_NAME(lamps,"lamps");
	HX_VISIT_MEMBER_NAME(cameras,"cameras");
	HX_VISIT_MEMBER_NAME(speakers,"speakers");
	HX_VISIT_MEMBER_NAME(decals,"decals");
	HX_VISIT_MEMBER_NAME(empties,"empties");
	HX_VISIT_MEMBER_NAME(animations,"animations");
	HX_VISIT_MEMBER_NAME(armatures,"armatures");
	HX_VISIT_MEMBER_NAME(groups,"groups");
	HX_VISIT_MEMBER_NAME(embedded,"embedded");
	HX_VISIT_MEMBER_NAME(ready,"ready");
	HX_VISIT_MEMBER_NAME(traitInits,"traitInits");
	HX_VISIT_MEMBER_NAME(traitRemoves,"traitRemoves");
}

hx::Val Scene_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"uid") ) { return hx::Val( uid ); }
		if (HX_FIELD_EQ(inName,"raw") ) { return hx::Val( raw ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"root") ) { return hx::Val( root ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"world") ) { return hx::Val( world ); }
		if (HX_FIELD_EQ(inName,"lamps") ) { return hx::Val( lamps ); }
		if (HX_FIELD_EQ(inName,"ready") ) { return hx::Val( ready ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"camera") ) { return hx::Val( camera ); }
		if (HX_FIELD_EQ(inName,"meshes") ) { return hx::Val( meshes ); }
		if (HX_FIELD_EQ(inName,"decals") ) { return hx::Val( decals ); }
		if (HX_FIELD_EQ(inName,"groups") ) { return hx::Val( groups ); }
		if (HX_FIELD_EQ(inName,"remove") ) { return hx::Val( remove_dyn() ); }
		if (HX_FIELD_EQ(inName,"getObj") ) { return hx::Val( getObj_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"cameras") ) { return hx::Val( cameras ); }
		if (HX_FIELD_EQ(inName,"empties") ) { return hx::Val( empties ); }
		if (HX_FIELD_EQ(inName,"getMesh") ) { return hx::Val( getMesh_dyn() ); }
		if (HX_FIELD_EQ(inName,"getLamp") ) { return hx::Val( getLamp_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"speakers") ) { return hx::Val( speakers ); }
		if (HX_FIELD_EQ(inName,"embedded") ) { return hx::Val( embedded ); }
		if (HX_FIELD_EQ(inName,"getChild") ) { return hx::Val( getChild_dyn() ); }
		if (HX_FIELD_EQ(inName,"getTrait") ) { return hx::Val( getTrait_dyn() ); }
		if (HX_FIELD_EQ(inName,"getEmpty") ) { return hx::Val( getEmpty_dyn() ); }
		if (HX_FIELD_EQ(inName,"addScene") ) { return hx::Val( addScene_dyn() ); }
		if (HX_FIELD_EQ(inName,"toString") ) { return hx::Val( toString_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"meshBatch") ) { return hx::Val( meshBatch ); }
		if (HX_FIELD_EQ(inName,"armatures") ) { return hx::Val( armatures ); }
		if (HX_FIELD_EQ(inName,"addObject") ) { return hx::Val( addObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"getCamera") ) { return hx::Val( getCamera_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"animations") ) { return hx::Val( animations ); }
		if (HX_FIELD_EQ(inName,"traitInits") ) { return hx::Val( traitInits ); }
		if (HX_FIELD_EQ(inName,"getSpeaker") ) { return hx::Val( getSpeaker_dyn() ); }
		if (HX_FIELD_EQ(inName,"removeInit") ) { return hx::Val( removeInit_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"sceneStream") ) { return hx::Val( sceneStream ); }
		if (HX_FIELD_EQ(inName,"updateFrame") ) { return hx::Val( updateFrame_dyn() ); }
		if (HX_FIELD_EQ(inName,"renderFrame") ) { return hx::Val( renderFrame_dyn() ); }
		if (HX_FIELD_EQ(inName,"spawnObject") ) { return hx::Val( spawnObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"parseObject") ) { return hx::Val( parseObject_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"traitRemoves") ) { return hx::Val( traitRemoves ); }
		if (HX_FIELD_EQ(inName,"traverseObjs") ) { return hx::Val( traverseObjs_dyn() ); }
		if (HX_FIELD_EQ(inName,"createObject") ) { return hx::Val( createObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"returnObject") ) { return hx::Val( returnObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"notifyOnInit") ) { return hx::Val( notifyOnInit_dyn() ); }
		break;
	case 13:
		if (HX_FIELD_EQ(inName,"addMeshObject") ) { return hx::Val( addMeshObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"addLampObject") ) { return hx::Val( addLampObject_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"addDecalObject") ) { return hx::Val( addDecalObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"notifyOnRemove") ) { return hx::Val( notifyOnRemove_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"addCameraObject") ) { return hx::Val( addCameraObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"getObjectsCount") ) { return hx::Val( getObjectsCount_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"addSpeakerObject") ) { return hx::Val( addSpeakerObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"returnMeshObject") ) { return hx::Val( returnMeshObject_dyn() ); }
		if (HX_FIELD_EQ(inName,"loadEmbeddedData") ) { return hx::Val( loadEmbeddedData_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"getGroupObjectRefs") ) { return hx::Val( getGroupObjectRefs_dyn() ); }
		if (HX_FIELD_EQ(inName,"returnObjectLoaded") ) { return hx::Val( returnObjectLoaded_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Scene_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"active") ) { outValue = ( active ); return true; }
		if (HX_FIELD_EQ(inName,"global") ) { outValue = ( global ); return true; }
		if (HX_FIELD_EQ(inName,"create") ) { outValue = create_dyn(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"parseArg") ) { outValue = parseArg_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"setActive") ) { outValue = setActive_dyn(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"uidCounter") ) { outValue = ( uidCounter ); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"framePassed") ) { outValue = ( framePassed ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"createTraits") ) { outValue = createTraits_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"generateTransform") ) { outValue = generateTransform_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"createConstraints") ) { outValue = createConstraints_dyn(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"createTraitClassInstance") ) { outValue = createTraitClassInstance_dyn(); return true; }
	}
	return false;
}

hx::Val Scene_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"uid") ) { uid=inValue.Cast< int >(); return inValue; }
		if (HX_FIELD_EQ(inName,"raw") ) { raw=inValue.Cast<  ::Dynamic >(); return inValue; }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"root") ) { root=inValue.Cast<  ::iron::object::Object >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"world") ) { world=inValue.Cast<  ::iron::data::WorldData >(); return inValue; }
		if (HX_FIELD_EQ(inName,"lamps") ) { lamps=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"ready") ) { ready=inValue.Cast< bool >(); return inValue; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"camera") ) { camera=inValue.Cast<  ::iron::object::CameraObject >(); return inValue; }
		if (HX_FIELD_EQ(inName,"meshes") ) { meshes=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"decals") ) { decals=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"groups") ) { groups=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"cameras") ) { cameras=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"empties") ) { empties=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"speakers") ) { speakers=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"embedded") ) { embedded=inValue.Cast<  ::haxe::ds::StringMap >(); return inValue; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"meshBatch") ) { meshBatch=inValue.Cast<  ::iron::data::MeshBatch >(); return inValue; }
		if (HX_FIELD_EQ(inName,"armatures") ) { armatures=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"animations") ) { animations=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		if (HX_FIELD_EQ(inName,"traitInits") ) { traitInits=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"sceneStream") ) { sceneStream=inValue.Cast<  ::iron::data::SceneStream >(); return inValue; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"traitRemoves") ) { traitRemoves=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Scene_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 6:
		if (HX_FIELD_EQ(inName,"active") ) { active=ioValue.Cast<  ::iron::Scene >(); return true; }
		if (HX_FIELD_EQ(inName,"global") ) { global=ioValue.Cast<  ::iron::object::Object >(); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"uidCounter") ) { uidCounter=ioValue.Cast< int >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"framePassed") ) { framePassed=ioValue.Cast< bool >(); return true; }
	}
	return false;
}

void Scene_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("uid","\x90","\x23","\x59","\x00"));
	outFields->push(HX_HCSTRING("raw","\xe8","\xd5","\x56","\x00"));
	outFields->push(HX_HCSTRING("root","\x22","\xee","\xae","\x4b"));
	outFields->push(HX_HCSTRING("camera","\xa5","\x46","\x8c","\xb7"));
	outFields->push(HX_HCSTRING("world","\x52","\x96","\x64","\xce"));
	outFields->push(HX_HCSTRING("meshBatch","\x8d","\xf2","\xda","\xe5"));
	outFields->push(HX_HCSTRING("sceneStream","\xec","\x62","\x5b","\xbb"));
	outFields->push(HX_HCSTRING("meshes","\x9b","\xb7","\xb1","\x08"));
	outFields->push(HX_HCSTRING("lamps","\x5b","\x70","\xb7","\x6f"));
	outFields->push(HX_HCSTRING("cameras","\x2e","\x8a","\x31","\xe3"));
	outFields->push(HX_HCSTRING("speakers","\x94","\xca","\xfd","\x65"));
	outFields->push(HX_HCSTRING("decals","\xa6","\xc4","\xe2","\x64"));
	outFields->push(HX_HCSTRING("empties","\x2b","\xec","\xbb","\xc6"));
	outFields->push(HX_HCSTRING("animations","\xef","\x34","\x1c","\x83"));
	outFields->push(HX_HCSTRING("armatures","\xda","\x45","\x59","\xfb"));
	outFields->push(HX_HCSTRING("groups","\x54","\x24","\x28","\x1c"));
	outFields->push(HX_HCSTRING("embedded","\x8a","\x19","\x62","\xde"));
	outFields->push(HX_HCSTRING("ready","\x63","\xa0","\xba","\xe6"));
	outFields->push(HX_HCSTRING("traitInits","\xb5","\xc4","\x55","\x7e"));
	outFields->push(HX_HCSTRING("traitRemoves","\x81","\xe9","\x31","\x3a"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Scene_obj_sMemberStorageInfo[] = {
	{hx::fsInt,(int)offsetof(Scene_obj,uid),HX_HCSTRING("uid","\x90","\x23","\x59","\x00")},
	{hx::fsObject /*Dynamic*/ ,(int)offsetof(Scene_obj,raw),HX_HCSTRING("raw","\xe8","\xd5","\x56","\x00")},
	{hx::fsObject /*::iron::object::Object*/ ,(int)offsetof(Scene_obj,root),HX_HCSTRING("root","\x22","\xee","\xae","\x4b")},
	{hx::fsObject /*::iron::object::CameraObject*/ ,(int)offsetof(Scene_obj,camera),HX_HCSTRING("camera","\xa5","\x46","\x8c","\xb7")},
	{hx::fsObject /*::iron::data::WorldData*/ ,(int)offsetof(Scene_obj,world),HX_HCSTRING("world","\x52","\x96","\x64","\xce")},
	{hx::fsObject /*::iron::data::MeshBatch*/ ,(int)offsetof(Scene_obj,meshBatch),HX_HCSTRING("meshBatch","\x8d","\xf2","\xda","\xe5")},
	{hx::fsObject /*::iron::data::SceneStream*/ ,(int)offsetof(Scene_obj,sceneStream),HX_HCSTRING("sceneStream","\xec","\x62","\x5b","\xbb")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Scene_obj,meshes),HX_HCSTRING("meshes","\x9b","\xb7","\xb1","\x08")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Scene_obj,lamps),HX_HCSTRING("lamps","\x5b","\x70","\xb7","\x6f")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Scene_obj,cameras),HX_HCSTRING("cameras","\x2e","\x8a","\x31","\xe3")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Scene_obj,speakers),HX_HCSTRING("speakers","\x94","\xca","\xfd","\x65")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Scene_obj,decals),HX_HCSTRING("decals","\xa6","\xc4","\xe2","\x64")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Scene_obj,empties),HX_HCSTRING("empties","\x2b","\xec","\xbb","\xc6")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Scene_obj,animations),HX_HCSTRING("animations","\xef","\x34","\x1c","\x83")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Scene_obj,armatures),HX_HCSTRING("armatures","\xda","\x45","\x59","\xfb")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Scene_obj,groups),HX_HCSTRING("groups","\x54","\x24","\x28","\x1c")},
	{hx::fsObject /*::haxe::ds::StringMap*/ ,(int)offsetof(Scene_obj,embedded),HX_HCSTRING("embedded","\x8a","\x19","\x62","\xde")},
	{hx::fsBool,(int)offsetof(Scene_obj,ready),HX_HCSTRING("ready","\x63","\xa0","\xba","\xe6")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Scene_obj,traitInits),HX_HCSTRING("traitInits","\xb5","\xc4","\x55","\x7e")},
	{hx::fsObject /*cpp::ArrayBase*/ ,(int)offsetof(Scene_obj,traitRemoves),HX_HCSTRING("traitRemoves","\x81","\xe9","\x31","\x3a")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Scene_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::iron::Scene*/ ,(void *) &Scene_obj::active,HX_HCSTRING("active","\xc6","\x41","\x46","\x16")},
	{hx::fsObject /*::iron::object::Object*/ ,(void *) &Scene_obj::global,HX_HCSTRING("global","\x63","\x31","\xb2","\xa7")},
	{hx::fsInt,(void *) &Scene_obj::uidCounter,HX_HCSTRING("uidCounter","\x4c","\x45","\x6c","\xa9")},
	{hx::fsBool,(void *) &Scene_obj::framePassed,HX_HCSTRING("framePassed","\x7d","\x9f","\x79","\xcc")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Scene_obj_sMemberFields[] = {
	HX_HCSTRING("uid","\x90","\x23","\x59","\x00"),
	HX_HCSTRING("raw","\xe8","\xd5","\x56","\x00"),
	HX_HCSTRING("root","\x22","\xee","\xae","\x4b"),
	HX_HCSTRING("camera","\xa5","\x46","\x8c","\xb7"),
	HX_HCSTRING("world","\x52","\x96","\x64","\xce"),
	HX_HCSTRING("meshBatch","\x8d","\xf2","\xda","\xe5"),
	HX_HCSTRING("sceneStream","\xec","\x62","\x5b","\xbb"),
	HX_HCSTRING("meshes","\x9b","\xb7","\xb1","\x08"),
	HX_HCSTRING("lamps","\x5b","\x70","\xb7","\x6f"),
	HX_HCSTRING("cameras","\x2e","\x8a","\x31","\xe3"),
	HX_HCSTRING("speakers","\x94","\xca","\xfd","\x65"),
	HX_HCSTRING("decals","\xa6","\xc4","\xe2","\x64"),
	HX_HCSTRING("empties","\x2b","\xec","\xbb","\xc6"),
	HX_HCSTRING("animations","\xef","\x34","\x1c","\x83"),
	HX_HCSTRING("armatures","\xda","\x45","\x59","\xfb"),
	HX_HCSTRING("groups","\x54","\x24","\x28","\x1c"),
	HX_HCSTRING("embedded","\x8a","\x19","\x62","\xde"),
	HX_HCSTRING("ready","\x63","\xa0","\xba","\xe6"),
	HX_HCSTRING("traitInits","\xb5","\xc4","\x55","\x7e"),
	HX_HCSTRING("traitRemoves","\x81","\xe9","\x31","\x3a"),
	HX_HCSTRING("remove","\x44","\x9c","\x88","\x04"),
	HX_HCSTRING("updateFrame","\x64","\xe1","\x1b","\xec"),
	HX_HCSTRING("renderFrame","\xf7","\xa4","\x34","\xd2"),
	HX_HCSTRING("addObject","\xc0","\xb3","\x63","\xcd"),
	HX_HCSTRING("getChild","\x26","\xb9","\x90","\xa5"),
	HX_HCSTRING("getTrait","\x58","\xa3","\xf6","\x75"),
	HX_HCSTRING("getMesh","\xa3","\xf9","\xdb","\x1a"),
	HX_HCSTRING("getLamp","\xce","\xb4","\x2f","\x1a"),
	HX_HCSTRING("getCamera","\xdb","\xcf","\xe2","\x33"),
	HX_HCSTRING("getSpeaker","\x09","\x1b","\x66","\x2d"),
	HX_HCSTRING("getEmpty","\x17","\x4a","\xb1","\xcf"),
	HX_HCSTRING("addMeshObject","\x0d","\x36","\x72","\x63"),
	HX_HCSTRING("addLampObject","\x78","\x23","\xdf","\x4c"),
	HX_HCSTRING("addCameraObject","\x05","\xaf","\x7d","\x64"),
	HX_HCSTRING("addSpeakerObject","\x3d","\xae","\x8f","\x56"),
	HX_HCSTRING("addDecalObject","\x2b","\x1d","\x75","\xde"),
	HX_HCSTRING("addScene","\x6b","\xff","\x2e","\xf2"),
	HX_HCSTRING("getObjectsCount","\x11","\x21","\xfb","\xa0"),
	HX_HCSTRING("spawnObject","\x5a","\x6f","\x77","\xb0"),
	HX_HCSTRING("parseObject","\x52","\x2b","\x7c","\x90"),
	HX_HCSTRING("getObj","\x01","\xc9","\x23","\xa3"),
	HX_HCSTRING("traverseObjs","\x6e","\xd3","\xc2","\xb1"),
	HX_HCSTRING("createObject","\xdb","\xbe","\x94","\x37"),
	HX_HCSTRING("getGroupObjectRefs","\x48","\x42","\x05","\xc6"),
	HX_HCSTRING("returnMeshObject","\x5c","\x51","\xe6","\x28"),
	HX_HCSTRING("returnObject","\x8f","\x3b","\x96","\x49"),
	HX_HCSTRING("returnObjectLoaded","\xf4","\x8c","\xf5","\xd7"),
	HX_HCSTRING("loadEmbeddedData","\x1a","\xb0","\xc6","\xca"),
	HX_HCSTRING("notifyOnInit","\x78","\x4f","\x0c","\x56"),
	HX_HCSTRING("removeInit","\x74","\x75","\xda","\xc2"),
	HX_HCSTRING("notifyOnRemove","\xac","\x9a","\x95","\x9a"),
	HX_HCSTRING("toString","\xac","\xd0","\x6e","\x38"),
	::String(null()) };

static void Scene_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Scene_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Scene_obj::active,"active");
	HX_MARK_MEMBER_NAME(Scene_obj::global,"global");
	HX_MARK_MEMBER_NAME(Scene_obj::uidCounter,"uidCounter");
	HX_MARK_MEMBER_NAME(Scene_obj::framePassed,"framePassed");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Scene_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Scene_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Scene_obj::active,"active");
	HX_VISIT_MEMBER_NAME(Scene_obj::global,"global");
	HX_VISIT_MEMBER_NAME(Scene_obj::uidCounter,"uidCounter");
	HX_VISIT_MEMBER_NAME(Scene_obj::framePassed,"framePassed");
};

#endif

hx::Class Scene_obj::__mClass;

static ::String Scene_obj_sStaticFields[] = {
	HX_HCSTRING("active","\xc6","\x41","\x46","\x16"),
	HX_HCSTRING("global","\x63","\x31","\xb2","\xa7"),
	HX_HCSTRING("uidCounter","\x4c","\x45","\x6c","\xa9"),
	HX_HCSTRING("create","\xfc","\x66","\x0f","\x7c"),
	HX_HCSTRING("framePassed","\x7d","\x9f","\x79","\xcc"),
	HX_HCSTRING("setActive","\x08","\xb7","\xed","\x75"),
	HX_HCSTRING("generateTransform","\x77","\x9f","\x6a","\x3b"),
	HX_HCSTRING("createTraits","\x01","\x01","\xd7","\x67"),
	HX_HCSTRING("parseArg","\xe3","\x07","\x6c","\xd6"),
	HX_HCSTRING("createConstraints","\xda","\x2b","\x55","\x6a"),
	HX_HCSTRING("createTraitClassInstance","\x5b","\x39","\xff","\x28"),
	::String(null())
};

void Scene_obj::__register()
{
	hx::Object *dummy = new Scene_obj;
	Scene_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("iron.Scene","\x86","\x51","\x8e","\xe9");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Scene_obj::__GetStatic;
	__mClass->mSetStaticField = &Scene_obj::__SetStatic;
	__mClass->mMarkFunc = Scene_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Scene_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Scene_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Scene_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Scene_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Scene_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Scene_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Scene_obj::__boot()
{
{
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_11_boot)
HXDLIN(  11)		active = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_12_boot)
HXDLIN(  12)		global = null();
            	}
{
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_13_boot)
HXDLIN(  13)		uidCounter = (int)0;
            	}
{
            	HX_STACKFRAME(&_hx_pos_3ce623fd85856c5b_103_boot)
HXDLIN( 103)		framePassed = true;
            	}
}

} // end namespace iron
