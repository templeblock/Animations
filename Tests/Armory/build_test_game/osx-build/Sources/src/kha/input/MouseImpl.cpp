// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_kha_SystemImpl
#include <kha/SystemImpl.h>
#endif
#ifndef INCLUDED_kha_input_Mouse
#include <kha/input/Mouse.h>
#endif
#ifndef INCLUDED_kha_input_MouseImpl
#include <kha/input/MouseImpl.h>
#endif
#ifndef INCLUDED_kha_network_Controller
#include <kha/network/Controller.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_7_new,"kha.input.MouseImpl","new",0x6e75e649,"kha.input.MouseImpl.new","kha/input/MouseImpl.hx",7,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_11_lock,"kha.input.MouseImpl","lock",0x3768b1e2,"kha.input.MouseImpl.lock","kha/input/MouseImpl.hx",11,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_15_unlock,"kha.input.MouseImpl","unlock",0x7428647b,"kha.input.MouseImpl.unlock","kha/input/MouseImpl.hx",15,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_19_canLock,"kha.input.MouseImpl","canLock",0x1fbd4284,"kha.input.MouseImpl.canLock","kha/input/MouseImpl.hx",19,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_23_isLocked,"kha.input.MouseImpl","isLocked",0x70897e0b,"kha.input.MouseImpl.isLocked","kha/input/MouseImpl.hx",23,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_27_notifyOnLockChange,"kha.input.MouseImpl","notifyOnLockChange",0x3d7c2e5a,"kha.input.MouseImpl.notifyOnLockChange","kha/input/MouseImpl.hx",27,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_31_removeFromLockChange,"kha.input.MouseImpl","removeFromLockChange",0xea7d8920,"kha.input.MouseImpl.removeFromLockChange","kha/input/MouseImpl.hx",31,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_35_hideSystemCursor,"kha.input.MouseImpl","hideSystemCursor",0xcdb13f7e,"kha.input.MouseImpl.hideSystemCursor","kha/input/MouseImpl.hx",35,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_eb17ac0a90a664aa_39_showSystemCursor,"kha.input.MouseImpl","showSystemCursor",0x0cc2cc39,"kha.input.MouseImpl.showSystemCursor","kha/input/MouseImpl.hx",39,0x95eac709)
HX_LOCAL_STACK_FRAME(_hx_pos_887932511ef165e6_117__receive,"kha.input.MouseImpl","_receive",0x226998db,"kha.input.MouseImpl._receive","kha/network/ControllerBuilder.hx",117,0x77f946ab)
namespace kha{
namespace input{

void MouseImpl_obj::__construct(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_7_new)
HXDLIN(   7)		super::__construct();
            	}

Dynamic MouseImpl_obj::__CreateEmpty() { return new MouseImpl_obj; }

void *MouseImpl_obj::_hx_vtable = 0;

Dynamic MouseImpl_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< MouseImpl_obj > _hx_result = new MouseImpl_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool MouseImpl_obj::_hx_isInstanceOf(int inClassId) {
	if (inClassId<=(int)0x0aafe25f) {
		if (inClassId<=(int)0x00eda8df) {
			return inClassId==(int)0x00000001 || inClassId==(int)0x00eda8df;
		} else {
			return inClassId==(int)0x0aafe25f;
		}
	} else {
		return inClassId==(int)0x473abfc6;
	}
}

void MouseImpl_obj::lock(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_11_lock)
HXDLIN(  11)		::kha::SystemImpl_obj::lockMouse(null());
            	}


void MouseImpl_obj::unlock(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_15_unlock)
HXDLIN(  15)		::kha::SystemImpl_obj::unlockMouse(null());
            	}


bool MouseImpl_obj::canLock(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_19_canLock)
HXDLIN(  19)		return ::kha::SystemImpl_obj::canLockMouse(null());
            	}


bool MouseImpl_obj::isLocked(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_23_isLocked)
HXDLIN(  23)		return ::kha::SystemImpl_obj::isMouseLocked(null());
            	}


void MouseImpl_obj::notifyOnLockChange( ::Dynamic func, ::Dynamic error){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_27_notifyOnLockChange)
HXDLIN(  27)		::kha::SystemImpl_obj::notifyOfMouseLockChange(func,error,null());
            	}


void MouseImpl_obj::removeFromLockChange( ::Dynamic func, ::Dynamic error){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_31_removeFromLockChange)
HXDLIN(  31)		::kha::SystemImpl_obj::removeFromMouseLockChange(func,error,null());
            	}


void MouseImpl_obj::hideSystemCursor(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_35_hideSystemCursor)
HXDLIN(  35)		::kha::SystemImpl_obj::hideSystemCursor();
            	}


void MouseImpl_obj::showSystemCursor(){
            	HX_STACKFRAME(&_hx_pos_eb17ac0a90a664aa_39_showSystemCursor)
HXDLIN(  39)		::kha::SystemImpl_obj::showSystemCursor();
            	}


void MouseImpl_obj::_receive( ::haxe::io::Bytes bytes){
            	HX_STACKFRAME(&_hx_pos_887932511ef165e6_117__receive)
HXDLIN( 117)		int bytes1 = bytes->b->__get((int)0);
HXDLIN( 117)		int funcindex = ((int)bytes1 | (int)((int)bytes->b->__get((int)1) << (int)(int)8));
HXDLIN( 117)		int funcindex1 = ((int)funcindex | (int)((int)bytes->b->__get((int)2) << (int)(int)16));
HXDLIN( 117)		int funcindex2 = ((int)funcindex1 | (int)((int)bytes->b->__get((int)3) << (int)(int)24));
            	}



hx::ObjectPtr< MouseImpl_obj > MouseImpl_obj::__new() {
	hx::ObjectPtr< MouseImpl_obj > __this = new MouseImpl_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< MouseImpl_obj > MouseImpl_obj::__alloc(hx::Ctx *_hx_ctx) {
	MouseImpl_obj *__this = (MouseImpl_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(MouseImpl_obj), true, "kha.input.MouseImpl"));
	*(void **)__this = MouseImpl_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

MouseImpl_obj::MouseImpl_obj()
{
}

hx::Val MouseImpl_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"lock") ) { return hx::Val( lock_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"unlock") ) { return hx::Val( unlock_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"canLock") ) { return hx::Val( canLock_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"isLocked") ) { return hx::Val( isLocked_dyn() ); }
		if (HX_FIELD_EQ(inName,"_receive") ) { return hx::Val( _receive_dyn() ); }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"hideSystemCursor") ) { return hx::Val( hideSystemCursor_dyn() ); }
		if (HX_FIELD_EQ(inName,"showSystemCursor") ) { return hx::Val( showSystemCursor_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"notifyOnLockChange") ) { return hx::Val( notifyOnLockChange_dyn() ); }
		break;
	case 20:
		if (HX_FIELD_EQ(inName,"removeFromLockChange") ) { return hx::Val( removeFromLockChange_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *MouseImpl_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *MouseImpl_obj_sStaticStorageInfo = 0;
#endif

static ::String MouseImpl_obj_sMemberFields[] = {
	HX_HCSTRING("lock","\xeb","\x9b","\xb7","\x47"),
	HX_HCSTRING("unlock","\xc4","\xa2","\x8c","\x65"),
	HX_HCSTRING("canLock","\x1b","\x84","\x0f","\x66"),
	HX_HCSTRING("isLocked","\x94","\xa0","\x30","\xb2"),
	HX_HCSTRING("notifyOnLockChange","\x23","\x36","\x29","\x37"),
	HX_HCSTRING("removeFromLockChange","\x29","\xd5","\x52","\x6f"),
	HX_HCSTRING("hideSystemCursor","\x07","\x93","\x7b","\x81"),
	HX_HCSTRING("showSystemCursor","\xc2","\x1f","\x8d","\xc0"),
	HX_HCSTRING("_receive","\x64","\xbb","\x10","\x64"),
	::String(null()) };

static void MouseImpl_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(MouseImpl_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void MouseImpl_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(MouseImpl_obj::__mClass,"__mClass");
};

#endif

hx::Class MouseImpl_obj::__mClass;

void MouseImpl_obj::__register()
{
	hx::Object *dummy = new MouseImpl_obj;
	MouseImpl_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.input.MouseImpl","\xd7","\x0d","\x89","\xd6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = MouseImpl_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(MouseImpl_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< MouseImpl_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = MouseImpl_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = MouseImpl_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = MouseImpl_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
} // end namespace input
