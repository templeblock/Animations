// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_kha_KoreStorageFile
#include <kha/KoreStorageFile.h>
#endif
#ifndef INCLUDED_kha_Storage
#include <kha/Storage.h>
#endif
#ifndef INCLUDED_kha_StorageFile
#include <kha/StorageFile.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_4f1c382d0a574771_58_namedFile,"kha.Storage","namedFile",0x04de4cf8,"kha.Storage.namedFile","kha/Storage.hx",58,0xdfc36dce)
HX_LOCAL_STACK_FRAME(_hx_pos_4f1c382d0a574771_65_defaultFile,"kha.Storage","defaultFile",0x32a5c8c0,"kha.Storage.defaultFile","kha/Storage.hx",65,0xdfc36dce)
namespace kha{

void Storage_obj::__construct() { }

Dynamic Storage_obj::__CreateEmpty() { return new Storage_obj; }

void *Storage_obj::_hx_vtable = 0;

Dynamic Storage_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Storage_obj > _hx_result = new Storage_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Storage_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x0211887f;
}

 ::kha::StorageFile Storage_obj::namedFile(::String name){
            	HX_GC_STACKFRAME(&_hx_pos_4f1c382d0a574771_58_namedFile)
HXLINE(  59)		name = ::StringTools_obj::replace(name,HX_("\\",5c,00,00,00),HX_(".",2e,00,00,00));
HXLINE(  60)		name = ::StringTools_obj::replace(name,HX_("/",2f,00,00,00),HX_(".",2e,00,00,00));
HXLINE(  61)		return  ::kha::KoreStorageFile_obj::__alloc( HX_CTX ,name);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(Storage_obj,namedFile,return )

 ::kha::StorageFile Storage_obj::defaultFile(){
            	HX_STACKFRAME(&_hx_pos_4f1c382d0a574771_65_defaultFile)
HXDLIN(  65)		return ::kha::Storage_obj::namedFile(HX_("default.kha",f7,29,9f,05));
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Storage_obj,defaultFile,return )


Storage_obj::Storage_obj()
{
}

bool Storage_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 9:
		if (HX_FIELD_EQ(inName,"namedFile") ) { outValue = namedFile_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"defaultFile") ) { outValue = defaultFile_dyn(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Storage_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *Storage_obj_sStaticStorageInfo = 0;
#endif

static void Storage_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Storage_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Storage_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Storage_obj::__mClass,"__mClass");
};

#endif

hx::Class Storage_obj::__mClass;

static ::String Storage_obj_sStaticFields[] = {
	HX_HCSTRING("namedFile","\xd5","\x5a","\x2e","\x29"),
	HX_HCSTRING("defaultFile","\xdd","\xc7","\x7a","\x15"),
	::String(null())
};

void Storage_obj::__register()
{
	hx::Object *dummy = new Storage_obj;
	Storage_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.Storage","\xd1","\xd8","\xba","\x41");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Storage_obj::__GetStatic;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = Storage_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Storage_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Storage_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Storage_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Storage_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Storage_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
