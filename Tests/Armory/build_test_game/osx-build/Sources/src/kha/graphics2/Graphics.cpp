// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_95f339a1d026d52c
#define INCLUDED_95f339a1d026d52c
#include "hxMath.h"
#endif
#ifndef INCLUDED_kha_Canvas
#include <kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <kha/Image.h>
#endif
#ifndef INCLUDED_kha_Kravur
#include <kha/Kravur.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif
#ifndef INCLUDED_kha_Video
#include <kha/Video.h>
#endif
#ifndef INCLUDED_kha_graphics2_Graphics
#include <kha/graphics2/Graphics.h>
#endif
#ifndef INCLUDED_kha_graphics2_ImageScaleQuality
#include <kha/graphics2/ImageScaleQuality.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineState
#include <kha/graphics4/PipelineState.h>
#endif
#ifndef INCLUDED_kha_graphics4_PipelineStateBase
#include <kha/graphics4/PipelineStateBase.h>
#endif
#ifndef INCLUDED_kha_math_FastMatrix3
#include <kha/math/FastMatrix3.h>
#endif

HX_DEFINE_STACK_FRAME(_hx_pos_5f2685bf915bf9af_247_new,"kha.graphics2.Graphics","new",0xbe5bae2e,"kha.graphics2.Graphics.new","kha/graphics2/Graphics.hx",247,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_11_begin,"kha.graphics2.Graphics","begin",0xe66b5777,"kha.graphics2.Graphics.begin","kha/graphics2/Graphics.hx",11,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_15_end,"kha.graphics2.Graphics","end",0xbe54e1a9,"kha.graphics2.Graphics.end","kha/graphics2/Graphics.hx",15,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_19_flush,"kha.graphics2.Graphics","flush",0x38b0d012,"kha.graphics2.Graphics.flush","kha/graphics2/Graphics.hx",19,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_26_clear,"kha.graphics2.Graphics","clear",0x7e70dedb,"kha.graphics2.Graphics.clear","kha/graphics2/Graphics.hx",26,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_31_drawImage,"kha.graphics2.Graphics","drawImage",0x80858105,"kha.graphics2.Graphics.drawImage","kha/graphics2/Graphics.hx",31,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_35_drawSubImage,"kha.graphics2.Graphics","drawSubImage",0xd6fcfa51,"kha.graphics2.Graphics.drawSubImage","kha/graphics2/Graphics.hx",35,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_39_drawScaledImage,"kha.graphics2.Graphics","drawScaledImage",0x4311f38b,"kha.graphics2.Graphics.drawScaledImage","kha/graphics2/Graphics.hx",39,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_42_drawScaledSubImage,"kha.graphics2.Graphics","drawScaledSubImage",0xe6d65f8b,"kha.graphics2.Graphics.drawScaledSubImage","kha/graphics2/Graphics.hx",42,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_46_drawRect,"kha.graphics2.Graphics","drawRect",0xa4ec4eba,"kha.graphics2.Graphics.drawRect","kha/graphics2/Graphics.hx",46,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_50_fillRect,"kha.graphics2.Graphics","fillRect",0xb1949cb9,"kha.graphics2.Graphics.fillRect","kha/graphics2/Graphics.hx",50,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_54_drawString,"kha.graphics2.Graphics","drawString",0x06e93be7,"kha.graphics2.Graphics.drawString","kha/graphics2/Graphics.hx",54,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_58_drawCharacters,"kha.graphics2.Graphics","drawCharacters",0x63ddaec0,"kha.graphics2.Graphics.drawCharacters","kha/graphics2/Graphics.hx",58,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_62_drawLine,"kha.graphics2.Graphics","drawLine",0xa0f8198a,"kha.graphics2.Graphics.drawLine","kha/graphics2/Graphics.hx",62,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_66_drawVideo,"kha.graphics2.Graphics","drawVideo",0xfa187625,"kha.graphics2.Graphics.drawVideo","kha/graphics2/Graphics.hx",66,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_70_fillTriangle,"kha.graphics2.Graphics","fillTriangle",0x60bafcdd,"kha.graphics2.Graphics.fillTriangle","kha/graphics2/Graphics.hx",70,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_79_get_imageScaleQuality,"kha.graphics2.Graphics","get_imageScaleQuality",0x1aa79775,"kha.graphics2.Graphics.get_imageScaleQuality","kha/graphics2/Graphics.hx",79,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_83_set_imageScaleQuality,"kha.graphics2.Graphics","set_imageScaleQuality",0x6eb06581,"kha.graphics2.Graphics.set_imageScaleQuality","kha/graphics2/Graphics.hx",83,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_87_get_mipmapScaleQuality,"kha.graphics2.Graphics","get_mipmapScaleQuality",0x2d557d38,"kha.graphics2.Graphics.get_mipmapScaleQuality","kha/graphics2/Graphics.hx",87,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_91_set_mipmapScaleQuality,"kha.graphics2.Graphics","set_mipmapScaleQuality",0x6100f9ac,"kha.graphics2.Graphics.set_mipmapScaleQuality","kha/graphics2/Graphics.hx",91,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_100_get_color,"kha.graphics2.Graphics","get_color",0x8916fa08,"kha.graphics2.Graphics.get_color","kha/graphics2/Graphics.hx",100,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_104_set_color,"kha.graphics2.Graphics","set_color",0x6c67e614,"kha.graphics2.Graphics.set_color","kha/graphics2/Graphics.hx",104,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_110_get_font,"kha.graphics2.Graphics","get_font",0x085670ca,"kha.graphics2.Graphics.get_font","kha/graphics2/Graphics.hx",110,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_114_set_font,"kha.graphics2.Graphics","set_font",0xb6b3ca3e,"kha.graphics2.Graphics.set_font","kha/graphics2/Graphics.hx",114,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_120_get_fontSize,"kha.graphics2.Graphics","get_fontSize",0x526c6aab,"kha.graphics2.Graphics.get_fontSize","kha/graphics2/Graphics.hx",120,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_124_set_fontSize,"kha.graphics2.Graphics","set_fontSize",0x67658e1f,"kha.graphics2.Graphics.set_fontSize","kha/graphics2/Graphics.hx",124,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_132_get_fontGlyphs,"kha.graphics2.Graphics","get_fontGlyphs",0x03a791b1,"kha.graphics2.Graphics.get_fontGlyphs","kha/graphics2/Graphics.hx",132,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_136_set_fontGlyphs,"kha.graphics2.Graphics","set_fontGlyphs",0x23c77a25,"kha.graphics2.Graphics.set_fontGlyphs","kha/graphics2/Graphics.hx",136,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_141_pushTransformation,"kha.graphics2.Graphics","pushTransformation",0x98a20735,"kha.graphics2.Graphics.pushTransformation","kha/graphics2/Graphics.hx",141,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_148_popTransformation,"kha.graphics2.Graphics","popTransformation",0x42d41588,"kha.graphics2.Graphics.popTransformation","kha/graphics2/Graphics.hx",148,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_155_get_transformation,"kha.graphics2.Graphics","get_transformation",0xa3e37884,"kha.graphics2.Graphics.get_transformation","kha/graphics2/Graphics.hx",155,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_158_set_transformation,"kha.graphics2.Graphics","set_transformation",0x8092aaf8,"kha.graphics2.Graphics.set_transformation","kha/graphics2/Graphics.hx",158,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_165_translation,"kha.graphics2.Graphics","translation",0x4d918cbf,"kha.graphics2.Graphics.translation","kha/graphics2/Graphics.hx",165,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_169_translate,"kha.graphics2.Graphics","translate",0x4491039c,"kha.graphics2.Graphics.translate","kha/graphics2/Graphics.hx",169,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_173_pushTranslation,"kha.graphics2.Graphics","pushTranslation",0x1b230c05,"kha.graphics2.Graphics.pushTranslation","kha/graphics2/Graphics.hx",173,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_177_rotation,"kha.graphics2.Graphics","rotation",0x4d6194b0,"kha.graphics2.Graphics.rotation","kha/graphics2/Graphics.hx",177,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_180_rotate,"kha.graphics2.Graphics","rotate",0xe7ca7d4d,"kha.graphics2.Graphics.rotate","kha/graphics2/Graphics.hx",180,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_195_pushRotation,"kha.graphics2.Graphics","pushRotation",0x6da66daa,"kha.graphics2.Graphics.pushRotation","kha/graphics2/Graphics.hx",195,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_200_pushOpacity,"kha.graphics2.Graphics","pushOpacity",0xbdee1edf,"kha.graphics2.Graphics.pushOpacity","kha/graphics2/Graphics.hx",200,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_205_popOpacity,"kha.graphics2.Graphics","popOpacity",0x09ff042c,"kha.graphics2.Graphics.popOpacity","kha/graphics2/Graphics.hx",205,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_212_get_opacity,"kha.graphics2.Graphics","get_opacity",0x344f19b0,"kha.graphics2.Graphics.get_opacity","kha/graphics2/Graphics.hx",212,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_215_set_opacity,"kha.graphics2.Graphics","set_opacity",0x3ebc20bc,"kha.graphics2.Graphics.set_opacity","kha/graphics2/Graphics.hx",215,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_220_scissor,"kha.graphics2.Graphics","scissor",0xfd2d04ea,"kha.graphics2.Graphics.scissor","kha/graphics2/Graphics.hx",220,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_224_disableScissor,"kha.graphics2.Graphics","disableScissor",0x2d6bec06,"kha.graphics2.Graphics.disableScissor","kha/graphics2/Graphics.hx",224,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_234_get_pipeline,"kha.graphics2.Graphics","get_pipeline",0xcf1e679d,"kha.graphics2.Graphics.get_pipeline","kha/graphics2/Graphics.hx",234,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_237_set_pipeline,"kha.graphics2.Graphics","set_pipeline",0xe4178b11,"kha.graphics2.Graphics.set_pipeline","kha/graphics2/Graphics.hx",237,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_258_setTransformation,"kha.graphics2.Graphics","setTransformation",0x57bc6f59,"kha.graphics2.Graphics.setTransformation","kha/graphics2/Graphics.hx",258,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_262_setOpacity,"kha.graphics2.Graphics","setOpacity",0xf23a1a3b,"kha.graphics2.Graphics.setOpacity","kha/graphics2/Graphics.hx",262,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_266_setPipeline,"kha.graphics2.Graphics","setPipeline",0x3ed3e0b2,"kha.graphics2.Graphics.setPipeline","kha/graphics2/Graphics.hx",266,0x8ef16900)
HX_LOCAL_STACK_FRAME(_hx_pos_5f2685bf915bf9af_129_boot,"kha.graphics2.Graphics","boot",0xc9f5baa4,"kha.graphics2.Graphics.boot","kha/graphics2/Graphics.hx",129,0x8ef16900)
namespace kha{
namespace graphics2{

void Graphics_obj::__construct(){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_247_new)
HXLINE( 248)		this->transformations = ::Array_obj< ::Dynamic>::__new();
HXLINE( 249)		::Array< ::Dynamic> _hx_tmp = this->transformations;
HXDLIN( 249)		_hx_tmp->push( ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,(int)1,(int)0,(int)0,(int)0,(int)1,(int)0,(int)0,(int)0,(int)1));
HXLINE( 250)		this->opacities = ::Array_obj< Float >::__new();
HXLINE( 251)		this->opacities->push((int)1);
HXLINE( 252)		this->myFontSize = (int)12;
HXLINE( 254)		this->pipe = null();
            	}

Dynamic Graphics_obj::__CreateEmpty() { return new Graphics_obj; }

void *Graphics_obj::_hx_vtable = 0;

Dynamic Graphics_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Graphics_obj > _hx_result = new Graphics_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Graphics_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x3f458a72;
}

void Graphics_obj::begin(hx::Null< bool >  __o_clear, ::Dynamic clearColor){
bool clear = __o_clear.Default(true);
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_11_begin)
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,begin,(void))

void Graphics_obj::end(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_15_end)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,end,(void))

void Graphics_obj::flush(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_19_flush)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,flush,(void))

void Graphics_obj::clear( ::Dynamic color){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_26_clear)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,clear,(void))

void Graphics_obj::drawImage( ::kha::Image img,float x,float y){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_31_drawImage)
HXDLIN(  31)		int _hx_tmp = img->get_width();
HXDLIN(  31)		this->drawSubImage(img,x,y,(int)0,(int)0,_hx_tmp,img->get_height());
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawImage,(void))

void Graphics_obj::drawSubImage( ::kha::Image img,float x,float y,float sx,float sy,float sw,float sh){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_35_drawSubImage)
HXDLIN(  35)		this->drawScaledSubImage(img,sx,sy,sw,sh,x,y,sw,sh);
            	}


HX_DEFINE_DYNAMIC_FUNC7(Graphics_obj,drawSubImage,(void))

void Graphics_obj::drawScaledImage( ::kha::Image img,float dx,float dy,float dw,float dh){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_39_drawScaledImage)
HXDLIN(  39)		int _hx_tmp = img->get_width();
HXDLIN(  39)		this->drawScaledSubImage(img,(int)0,(int)0,_hx_tmp,img->get_height(),dx,dy,dw,dh);
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawScaledImage,(void))

void Graphics_obj::drawScaledSubImage( ::kha::Image image,float sx,float sy,float sw,float sh,float dx,float dy,float dw,float dh){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_42_drawScaledSubImage)
            	}


HX_DEFINE_DYNAMIC_FUNC9(Graphics_obj,drawScaledSubImage,(void))

void Graphics_obj::drawRect(Float x,Float y,Float width,Float height,hx::Null< Float >  __o_strength){
Float strength = __o_strength.Default(((Float)1.0));
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_46_drawRect)
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawRect,(void))

void Graphics_obj::fillRect(Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_50_fillRect)
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,fillRect,(void))

void Graphics_obj::drawString(::String text,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_54_drawString)
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,drawString,(void))

void Graphics_obj::drawCharacters(::Array< int > text,int start,int length,Float x,Float y){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_58_drawCharacters)
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawCharacters,(void))

void Graphics_obj::drawLine(Float x1,Float y1,Float x2,Float y2,hx::Null< Float >  __o_strength){
Float strength = __o_strength.Default(((Float)1.0));
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_62_drawLine)
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawLine,(void))

void Graphics_obj::drawVideo( ::kha::Video video,Float x,Float y,Float width,Float height){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_66_drawVideo)
            	}


HX_DEFINE_DYNAMIC_FUNC5(Graphics_obj,drawVideo,(void))

void Graphics_obj::fillTriangle(Float x1,Float y1,Float x2,Float y2,Float x3,Float y3){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_70_fillTriangle)
            	}


HX_DEFINE_DYNAMIC_FUNC6(Graphics_obj,fillTriangle,(void))

 ::kha::graphics2::ImageScaleQuality Graphics_obj::get_imageScaleQuality(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_79_get_imageScaleQuality)
HXDLIN(  79)		return ::kha::graphics2::ImageScaleQuality_obj::Low_dyn();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_imageScaleQuality,return )

 ::kha::graphics2::ImageScaleQuality Graphics_obj::set_imageScaleQuality( ::kha::graphics2::ImageScaleQuality value){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_83_set_imageScaleQuality)
HXDLIN(  83)		return ::kha::graphics2::ImageScaleQuality_obj::High_dyn();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_imageScaleQuality,return )

 ::kha::graphics2::ImageScaleQuality Graphics_obj::get_mipmapScaleQuality(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_87_get_mipmapScaleQuality)
HXDLIN(  87)		return ::kha::graphics2::ImageScaleQuality_obj::Low_dyn();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_mipmapScaleQuality,return )

 ::kha::graphics2::ImageScaleQuality Graphics_obj::set_mipmapScaleQuality( ::kha::graphics2::ImageScaleQuality value){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_91_set_mipmapScaleQuality)
HXDLIN(  91)		return ::kha::graphics2::ImageScaleQuality_obj::High_dyn();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_mipmapScaleQuality,return )

int Graphics_obj::get_color(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_100_get_color)
HXDLIN( 100)		return (int)-16777216;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_color,return )

int Graphics_obj::set_color(int color){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_104_set_color)
HXDLIN( 104)		return (int)-16777216;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_color,return )

 ::kha::Kravur Graphics_obj::get_font(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_110_get_font)
HXDLIN( 110)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_font,return )

 ::kha::Kravur Graphics_obj::set_font( ::kha::Kravur font){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_114_set_font)
HXDLIN( 114)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_font,return )

int Graphics_obj::get_fontSize(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_120_get_fontSize)
HXDLIN( 120)		return this->myFontSize;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_fontSize,return )

int Graphics_obj::set_fontSize(int value){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_124_set_fontSize)
HXDLIN( 124)		return (this->myFontSize = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_fontSize,return )

::Array< int > Graphics_obj::get_fontGlyphs(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_132_get_fontGlyphs)
HXDLIN( 132)		return ::kha::graphics2::Graphics_obj::_glyphs;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_fontGlyphs,return )

::Array< int > Graphics_obj::set_fontGlyphs(::Array< int > value){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_136_set_fontGlyphs)
HXDLIN( 136)		return (::kha::graphics2::Graphics_obj::_glyphs = value);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_fontGlyphs,return )

void Graphics_obj::pushTransformation( ::kha::math::FastMatrix3 transformation){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_141_pushTransformation)
HXLINE( 142)		 ::kha::math::FastMatrix3 trans =  ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,(int)1,(int)0,(int)0,(int)0,(int)1,(int)0,(int)0,(int)0,(int)1);
HXLINE( 143)		{
HXLINE( 143)			trans->_00 = transformation->_00;
HXDLIN( 143)			trans->_10 = transformation->_10;
HXDLIN( 143)			trans->_20 = transformation->_20;
HXDLIN( 143)			trans->_01 = transformation->_01;
HXDLIN( 143)			trans->_11 = transformation->_11;
HXDLIN( 143)			trans->_21 = transformation->_21;
HXDLIN( 143)			trans->_02 = transformation->_02;
HXDLIN( 143)			trans->_12 = transformation->_12;
HXDLIN( 143)			trans->_22 = transformation->_22;
            		}
HXLINE( 144)		this->setTransformation(trans);
HXLINE( 145)		this->transformations->push(trans);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,pushTransformation,(void))

 ::kha::math::FastMatrix3 Graphics_obj::popTransformation(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_148_popTransformation)
HXLINE( 149)		 ::kha::math::FastMatrix3 ret = this->transformations->pop().StaticCast<  ::kha::math::FastMatrix3 >();
HXLINE( 150)		::Array< ::Dynamic> _hx_tmp = this->transformations;
HXDLIN( 150)		this->setTransformation(_hx_tmp->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >());
HXLINE( 151)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,popTransformation,return )

 ::kha::math::FastMatrix3 Graphics_obj::get_transformation(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_155_get_transformation)
HXDLIN( 155)		::Array< ::Dynamic> _hx_tmp = this->transformations;
HXDLIN( 155)		return _hx_tmp->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_transformation,return )

 ::kha::math::FastMatrix3 Graphics_obj::set_transformation( ::kha::math::FastMatrix3 transformation){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_158_set_transformation)
HXLINE( 159)		this->setTransformation(transformation);
HXLINE( 160)		{
HXLINE( 160)			::Array< ::Dynamic> _this = this->transformations;
HXDLIN( 160)			 ::kha::math::FastMatrix3 _this1 = _this->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 160)			_this1->_00 = transformation->_00;
HXDLIN( 160)			_this1->_10 = transformation->_10;
HXDLIN( 160)			_this1->_20 = transformation->_20;
HXDLIN( 160)			_this1->_01 = transformation->_01;
HXDLIN( 160)			_this1->_11 = transformation->_11;
HXDLIN( 160)			_this1->_21 = transformation->_21;
HXDLIN( 160)			_this1->_02 = transformation->_02;
HXDLIN( 160)			_this1->_12 = transformation->_12;
HXDLIN( 160)			_this1->_22 = transformation->_22;
            		}
HXLINE( 161)		return transformation;
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_transformation,return )

 ::kha::math::FastMatrix3 Graphics_obj::translation(float tx,float ty){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_165_translation)
HXDLIN( 165)		float _this__22;
HXDLIN( 165)		float _this__21;
HXDLIN( 165)		float _this__20;
HXDLIN( 165)		float _this__12;
HXDLIN( 165)		float _this__11;
HXDLIN( 165)		float _this__10;
HXDLIN( 165)		float _this__02;
HXDLIN( 165)		float _this__01;
HXDLIN( 165)		float _this__00 = (int)1;
HXDLIN( 165)		_this__10 = (int)0;
HXDLIN( 165)		_this__20 = tx;
HXDLIN( 165)		_this__01 = (int)0;
HXDLIN( 165)		_this__11 = (int)1;
HXDLIN( 165)		_this__21 = ty;
HXDLIN( 165)		_this__02 = (int)0;
HXDLIN( 165)		_this__12 = (int)0;
HXDLIN( 165)		_this__22 = (int)1;
HXDLIN( 165)		::Array< ::Dynamic> m = this->transformations;
HXDLIN( 165)		 ::kha::math::FastMatrix3 m1 = m->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 165)		float _hx_tmp = (_this__00 * m1->_00);
HXDLIN( 165)		float _hx_tmp1 = (_hx_tmp + (_this__10 * m1->_01));
HXDLIN( 165)		float _hx_tmp2 = (_hx_tmp1 + (_this__20 * m1->_02));
HXDLIN( 165)		float _hx_tmp3 = (_this__00 * m1->_10);
HXDLIN( 165)		float _hx_tmp4 = (_hx_tmp3 + (_this__10 * m1->_11));
HXDLIN( 165)		float _hx_tmp5 = (_hx_tmp4 + (_this__20 * m1->_12));
HXDLIN( 165)		float _hx_tmp6 = (_this__00 * m1->_20);
HXDLIN( 165)		float _hx_tmp7 = (_hx_tmp6 + (_this__10 * m1->_21));
HXDLIN( 165)		float _hx_tmp8 = (_hx_tmp7 + (_this__20 * m1->_22));
HXDLIN( 165)		float _hx_tmp9 = (_this__01 * m1->_00);
HXDLIN( 165)		float _hx_tmp10 = (_hx_tmp9 + (_this__11 * m1->_01));
HXDLIN( 165)		float _hx_tmp11 = (_hx_tmp10 + (_this__21 * m1->_02));
HXDLIN( 165)		float _hx_tmp12 = (_this__01 * m1->_10);
HXDLIN( 165)		float _hx_tmp13 = (_hx_tmp12 + (_this__11 * m1->_11));
HXDLIN( 165)		float _hx_tmp14 = (_hx_tmp13 + (_this__21 * m1->_12));
HXDLIN( 165)		float _hx_tmp15 = (_this__01 * m1->_20);
HXDLIN( 165)		float _hx_tmp16 = (_hx_tmp15 + (_this__11 * m1->_21));
HXDLIN( 165)		float _hx_tmp17 = (_hx_tmp16 + (_this__21 * m1->_22));
HXDLIN( 165)		float _hx_tmp18 = (_this__02 * m1->_00);
HXDLIN( 165)		float _hx_tmp19 = (_hx_tmp18 + (_this__12 * m1->_01));
HXDLIN( 165)		float _hx_tmp20 = (_hx_tmp19 + (_this__22 * m1->_02));
HXDLIN( 165)		float _hx_tmp21 = (_this__02 * m1->_10);
HXDLIN( 165)		float _hx_tmp22 = (_hx_tmp21 + (_this__12 * m1->_11));
HXDLIN( 165)		float _hx_tmp23 = (_hx_tmp22 + (_this__22 * m1->_12));
HXDLIN( 165)		float _hx_tmp24 = (_this__02 * m1->_20);
HXDLIN( 165)		float _hx_tmp25 = (_hx_tmp24 + (_this__12 * m1->_21));
HXDLIN( 165)		return  ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,_hx_tmp2,_hx_tmp5,_hx_tmp8,_hx_tmp11,_hx_tmp14,_hx_tmp17,_hx_tmp20,_hx_tmp23,(_hx_tmp25 + (_this__22 * m1->_22)));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,translation,return )

void Graphics_obj::translate(float tx,float ty){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_169_translate)
HXDLIN( 169)		float _this__22;
HXDLIN( 169)		float _this__21;
HXDLIN( 169)		float _this__20;
HXDLIN( 169)		float _this__12;
HXDLIN( 169)		float _this__11;
HXDLIN( 169)		float _this__10;
HXDLIN( 169)		float _this__02;
HXDLIN( 169)		float _this__01;
HXDLIN( 169)		float _this__00 = (int)1;
HXDLIN( 169)		_this__10 = (int)0;
HXDLIN( 169)		_this__20 = tx;
HXDLIN( 169)		_this__01 = (int)0;
HXDLIN( 169)		_this__11 = (int)1;
HXDLIN( 169)		_this__21 = ty;
HXDLIN( 169)		_this__02 = (int)0;
HXDLIN( 169)		_this__12 = (int)0;
HXDLIN( 169)		_this__22 = (int)1;
HXDLIN( 169)		::Array< ::Dynamic> m = this->transformations;
HXDLIN( 169)		 ::kha::math::FastMatrix3 m1 = m->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 169)		float transformation = (_this__00 * m1->_00);
HXDLIN( 169)		float transformation1 = (transformation + (_this__10 * m1->_01));
HXDLIN( 169)		float transformation2 = (transformation1 + (_this__20 * m1->_02));
HXDLIN( 169)		float transformation3 = (_this__00 * m1->_10);
HXDLIN( 169)		float transformation4 = (transformation3 + (_this__10 * m1->_11));
HXDLIN( 169)		float transformation5 = (transformation4 + (_this__20 * m1->_12));
HXDLIN( 169)		float transformation6 = (_this__00 * m1->_20);
HXDLIN( 169)		float transformation7 = (transformation6 + (_this__10 * m1->_21));
HXDLIN( 169)		float transformation8 = (transformation7 + (_this__20 * m1->_22));
HXDLIN( 169)		float transformation9 = (_this__01 * m1->_00);
HXDLIN( 169)		float transformation10 = (transformation9 + (_this__11 * m1->_01));
HXDLIN( 169)		float transformation11 = (transformation10 + (_this__21 * m1->_02));
HXDLIN( 169)		float transformation12 = (_this__01 * m1->_10);
HXDLIN( 169)		float transformation13 = (transformation12 + (_this__11 * m1->_11));
HXDLIN( 169)		float transformation14 = (transformation13 + (_this__21 * m1->_12));
HXDLIN( 169)		float transformation15 = (_this__01 * m1->_20);
HXDLIN( 169)		float transformation16 = (transformation15 + (_this__11 * m1->_21));
HXDLIN( 169)		float transformation17 = (transformation16 + (_this__21 * m1->_22));
HXDLIN( 169)		float transformation18 = (_this__02 * m1->_00);
HXDLIN( 169)		float transformation19 = (transformation18 + (_this__12 * m1->_01));
HXDLIN( 169)		float transformation20 = (transformation19 + (_this__22 * m1->_02));
HXDLIN( 169)		float transformation21 = (_this__02 * m1->_10);
HXDLIN( 169)		float transformation22 = (transformation21 + (_this__12 * m1->_11));
HXDLIN( 169)		float transformation23 = (transformation22 + (_this__22 * m1->_12));
HXDLIN( 169)		float transformation24 = (_this__02 * m1->_20);
HXDLIN( 169)		float transformation25 = (transformation24 + (_this__12 * m1->_21));
HXDLIN( 169)		 ::kha::math::FastMatrix3 transformation26 =  ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,transformation2,transformation5,transformation8,transformation11,transformation14,transformation17,transformation20,transformation23,(transformation25 + (_this__22 * m1->_22)));
HXDLIN( 169)		this->setTransformation(transformation26);
HXDLIN( 169)		{
HXDLIN( 169)			::Array< ::Dynamic> _this = this->transformations;
HXDLIN( 169)			 ::kha::math::FastMatrix3 _this1 = _this->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 169)			_this1->_00 = transformation26->_00;
HXDLIN( 169)			_this1->_10 = transformation26->_10;
HXDLIN( 169)			_this1->_20 = transformation26->_20;
HXDLIN( 169)			_this1->_01 = transformation26->_01;
HXDLIN( 169)			_this1->_11 = transformation26->_11;
HXDLIN( 169)			_this1->_21 = transformation26->_21;
HXDLIN( 169)			_this1->_02 = transformation26->_02;
HXDLIN( 169)			_this1->_12 = transformation26->_12;
HXDLIN( 169)			_this1->_22 = transformation26->_22;
            		}
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,translate,(void))

void Graphics_obj::pushTranslation(float tx,float ty){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_173_pushTranslation)
HXDLIN( 173)		float _this__22;
HXDLIN( 173)		float _this__21;
HXDLIN( 173)		float _this__20;
HXDLIN( 173)		float _this__12;
HXDLIN( 173)		float _this__11;
HXDLIN( 173)		float _this__10;
HXDLIN( 173)		float _this__02;
HXDLIN( 173)		float _this__01;
HXDLIN( 173)		float _this__00 = (int)1;
HXDLIN( 173)		_this__10 = (int)0;
HXDLIN( 173)		_this__20 = tx;
HXDLIN( 173)		_this__01 = (int)0;
HXDLIN( 173)		_this__11 = (int)1;
HXDLIN( 173)		_this__21 = ty;
HXDLIN( 173)		_this__02 = (int)0;
HXDLIN( 173)		_this__12 = (int)0;
HXDLIN( 173)		_this__22 = (int)1;
HXDLIN( 173)		::Array< ::Dynamic> m = this->transformations;
HXDLIN( 173)		 ::kha::math::FastMatrix3 m1 = m->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 173)		float _hx_tmp = (_this__00 * m1->_00);
HXDLIN( 173)		float _hx_tmp1 = (_hx_tmp + (_this__10 * m1->_01));
HXDLIN( 173)		float _hx_tmp2 = (_hx_tmp1 + (_this__20 * m1->_02));
HXDLIN( 173)		float _hx_tmp3 = (_this__00 * m1->_10);
HXDLIN( 173)		float _hx_tmp4 = (_hx_tmp3 + (_this__10 * m1->_11));
HXDLIN( 173)		float _hx_tmp5 = (_hx_tmp4 + (_this__20 * m1->_12));
HXDLIN( 173)		float _hx_tmp6 = (_this__00 * m1->_20);
HXDLIN( 173)		float _hx_tmp7 = (_hx_tmp6 + (_this__10 * m1->_21));
HXDLIN( 173)		float _hx_tmp8 = (_hx_tmp7 + (_this__20 * m1->_22));
HXDLIN( 173)		float _hx_tmp9 = (_this__01 * m1->_00);
HXDLIN( 173)		float _hx_tmp10 = (_hx_tmp9 + (_this__11 * m1->_01));
HXDLIN( 173)		float _hx_tmp11 = (_hx_tmp10 + (_this__21 * m1->_02));
HXDLIN( 173)		float _hx_tmp12 = (_this__01 * m1->_10);
HXDLIN( 173)		float _hx_tmp13 = (_hx_tmp12 + (_this__11 * m1->_11));
HXDLIN( 173)		float _hx_tmp14 = (_hx_tmp13 + (_this__21 * m1->_12));
HXDLIN( 173)		float _hx_tmp15 = (_this__01 * m1->_20);
HXDLIN( 173)		float _hx_tmp16 = (_hx_tmp15 + (_this__11 * m1->_21));
HXDLIN( 173)		float _hx_tmp17 = (_hx_tmp16 + (_this__21 * m1->_22));
HXDLIN( 173)		float _hx_tmp18 = (_this__02 * m1->_00);
HXDLIN( 173)		float _hx_tmp19 = (_hx_tmp18 + (_this__12 * m1->_01));
HXDLIN( 173)		float _hx_tmp20 = (_hx_tmp19 + (_this__22 * m1->_02));
HXDLIN( 173)		float _hx_tmp21 = (_this__02 * m1->_10);
HXDLIN( 173)		float _hx_tmp22 = (_hx_tmp21 + (_this__12 * m1->_11));
HXDLIN( 173)		float _hx_tmp23 = (_hx_tmp22 + (_this__22 * m1->_12));
HXDLIN( 173)		float _hx_tmp24 = (_this__02 * m1->_20);
HXDLIN( 173)		float _hx_tmp25 = (_hx_tmp24 + (_this__12 * m1->_21));
HXDLIN( 173)		this->pushTransformation( ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,_hx_tmp2,_hx_tmp5,_hx_tmp8,_hx_tmp11,_hx_tmp14,_hx_tmp17,_hx_tmp20,_hx_tmp23,(_hx_tmp25 + (_this__22 * m1->_22))));
            	}


HX_DEFINE_DYNAMIC_FUNC2(Graphics_obj,pushTranslation,(void))

 ::kha::math::FastMatrix3 Graphics_obj::rotation(float angle,float centerx,float centery){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_177_rotation)
HXDLIN( 177)		float _this__22;
HXDLIN( 177)		float _this__21;
HXDLIN( 177)		float _this__20;
HXDLIN( 177)		float _this__12;
HXDLIN( 177)		float _this__11;
HXDLIN( 177)		float _this__10;
HXDLIN( 177)		float _this__02;
HXDLIN( 177)		float _this__01;
HXDLIN( 177)		float _this__00;
HXDLIN( 177)		float _this__221;
HXDLIN( 177)		float _this__211;
HXDLIN( 177)		float _this__201;
HXDLIN( 177)		float _this__121;
HXDLIN( 177)		float _this__111;
HXDLIN( 177)		float _this__101;
HXDLIN( 177)		float _this__021;
HXDLIN( 177)		float _this__011;
HXDLIN( 177)		float _this__001;
HXDLIN( 177)		float _this__222;
HXDLIN( 177)		float _this__212;
HXDLIN( 177)		float _this__202;
HXDLIN( 177)		float _this__122;
HXDLIN( 177)		float _this__112;
HXDLIN( 177)		float _this__102;
HXDLIN( 177)		float _this__022;
HXDLIN( 177)		float _this__012;
HXDLIN( 177)		float _this__002 = (int)1;
HXDLIN( 177)		_this__102 = (int)0;
HXDLIN( 177)		_this__202 = centerx;
HXDLIN( 177)		_this__012 = (int)0;
HXDLIN( 177)		_this__112 = (int)1;
HXDLIN( 177)		_this__212 = centery;
HXDLIN( 177)		_this__022 = (int)0;
HXDLIN( 177)		_this__122 = (int)0;
HXDLIN( 177)		_this__222 = (int)1;
HXDLIN( 177)		float m__22;
HXDLIN( 177)		float m__21;
HXDLIN( 177)		float m__20;
HXDLIN( 177)		float m__12;
HXDLIN( 177)		float m__11;
HXDLIN( 177)		float m__10;
HXDLIN( 177)		float m__02;
HXDLIN( 177)		float m__01;
HXDLIN( 177)		float m__00 = ::Math_obj::cos(angle);
HXDLIN( 177)		m__10 = -(::Math_obj::sin(angle));
HXDLIN( 177)		m__20 = (int)0;
HXDLIN( 177)		m__01 = ::Math_obj::sin(angle);
HXDLIN( 177)		m__11 = ::Math_obj::cos(angle);
HXDLIN( 177)		m__21 = (int)0;
HXDLIN( 177)		m__02 = (int)0;
HXDLIN( 177)		m__12 = (int)0;
HXDLIN( 177)		m__22 = (int)1;
HXDLIN( 177)		_this__001 = (((_this__002 * m__00) + (_this__102 * m__01)) + (_this__202 * m__02));
HXDLIN( 177)		_this__101 = (((_this__002 * m__10) + (_this__102 * m__11)) + (_this__202 * m__12));
HXDLIN( 177)		_this__201 = (((_this__002 * m__20) + (_this__102 * m__21)) + (_this__202 * m__22));
HXDLIN( 177)		_this__011 = (((_this__012 * m__00) + (_this__112 * m__01)) + (_this__212 * m__02));
HXDLIN( 177)		_this__111 = (((_this__012 * m__10) + (_this__112 * m__11)) + (_this__212 * m__12));
HXDLIN( 177)		_this__211 = (((_this__012 * m__20) + (_this__112 * m__21)) + (_this__212 * m__22));
HXDLIN( 177)		_this__021 = (((_this__022 * m__00) + (_this__122 * m__01)) + (_this__222 * m__02));
HXDLIN( 177)		_this__121 = (((_this__022 * m__10) + (_this__122 * m__11)) + (_this__222 * m__12));
HXDLIN( 177)		_this__221 = (((_this__022 * m__20) + (_this__122 * m__21)) + (_this__222 * m__22));
HXDLIN( 177)		float m__221;
HXDLIN( 177)		float m__211;
HXDLIN( 177)		float m__201;
HXDLIN( 177)		float m__121;
HXDLIN( 177)		float m__111;
HXDLIN( 177)		float m__101;
HXDLIN( 177)		float m__021;
HXDLIN( 177)		float m__011;
HXDLIN( 177)		float m__001 = (int)1;
HXDLIN( 177)		m__101 = (int)0;
HXDLIN( 177)		m__201 = -(centerx);
HXDLIN( 177)		m__011 = (int)0;
HXDLIN( 177)		m__111 = (int)1;
HXDLIN( 177)		m__211 = -(centery);
HXDLIN( 177)		m__021 = (int)0;
HXDLIN( 177)		m__121 = (int)0;
HXDLIN( 177)		m__221 = (int)1;
HXDLIN( 177)		_this__00 = (((_this__001 * m__001) + (_this__101 * m__011)) + (_this__201 * m__021));
HXDLIN( 177)		_this__10 = (((_this__001 * m__101) + (_this__101 * m__111)) + (_this__201 * m__121));
HXDLIN( 177)		_this__20 = (((_this__001 * m__201) + (_this__101 * m__211)) + (_this__201 * m__221));
HXDLIN( 177)		_this__01 = (((_this__011 * m__001) + (_this__111 * m__011)) + (_this__211 * m__021));
HXDLIN( 177)		_this__11 = (((_this__011 * m__101) + (_this__111 * m__111)) + (_this__211 * m__121));
HXDLIN( 177)		_this__21 = (((_this__011 * m__201) + (_this__111 * m__211)) + (_this__211 * m__221));
HXDLIN( 177)		_this__02 = (((_this__021 * m__001) + (_this__121 * m__011)) + (_this__221 * m__021));
HXDLIN( 177)		_this__12 = (((_this__021 * m__101) + (_this__121 * m__111)) + (_this__221 * m__121));
HXDLIN( 177)		_this__22 = (((_this__021 * m__201) + (_this__121 * m__211)) + (_this__221 * m__221));
HXDLIN( 177)		::Array< ::Dynamic> m = this->transformations;
HXDLIN( 177)		 ::kha::math::FastMatrix3 m1 = m->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 177)		float _hx_tmp = (_this__00 * m1->_00);
HXDLIN( 177)		float _hx_tmp1 = (_hx_tmp + (_this__10 * m1->_01));
HXDLIN( 177)		float _hx_tmp2 = (_hx_tmp1 + (_this__20 * m1->_02));
HXDLIN( 177)		float _hx_tmp3 = (_this__00 * m1->_10);
HXDLIN( 177)		float _hx_tmp4 = (_hx_tmp3 + (_this__10 * m1->_11));
HXDLIN( 177)		float _hx_tmp5 = (_hx_tmp4 + (_this__20 * m1->_12));
HXDLIN( 177)		float _hx_tmp6 = (_this__00 * m1->_20);
HXDLIN( 177)		float _hx_tmp7 = (_hx_tmp6 + (_this__10 * m1->_21));
HXDLIN( 177)		float _hx_tmp8 = (_hx_tmp7 + (_this__20 * m1->_22));
HXDLIN( 177)		float _hx_tmp9 = (_this__01 * m1->_00);
HXDLIN( 177)		float _hx_tmp10 = (_hx_tmp9 + (_this__11 * m1->_01));
HXDLIN( 177)		float _hx_tmp11 = (_hx_tmp10 + (_this__21 * m1->_02));
HXDLIN( 177)		float _hx_tmp12 = (_this__01 * m1->_10);
HXDLIN( 177)		float _hx_tmp13 = (_hx_tmp12 + (_this__11 * m1->_11));
HXDLIN( 177)		float _hx_tmp14 = (_hx_tmp13 + (_this__21 * m1->_12));
HXDLIN( 177)		float _hx_tmp15 = (_this__01 * m1->_20);
HXDLIN( 177)		float _hx_tmp16 = (_hx_tmp15 + (_this__11 * m1->_21));
HXDLIN( 177)		float _hx_tmp17 = (_hx_tmp16 + (_this__21 * m1->_22));
HXDLIN( 177)		float _hx_tmp18 = (_this__02 * m1->_00);
HXDLIN( 177)		float _hx_tmp19 = (_hx_tmp18 + (_this__12 * m1->_01));
HXDLIN( 177)		float _hx_tmp20 = (_hx_tmp19 + (_this__22 * m1->_02));
HXDLIN( 177)		float _hx_tmp21 = (_this__02 * m1->_10);
HXDLIN( 177)		float _hx_tmp22 = (_hx_tmp21 + (_this__12 * m1->_11));
HXDLIN( 177)		float _hx_tmp23 = (_hx_tmp22 + (_this__22 * m1->_12));
HXDLIN( 177)		float _hx_tmp24 = (_this__02 * m1->_20);
HXDLIN( 177)		float _hx_tmp25 = (_hx_tmp24 + (_this__12 * m1->_21));
HXDLIN( 177)		return  ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,_hx_tmp2,_hx_tmp5,_hx_tmp8,_hx_tmp11,_hx_tmp14,_hx_tmp17,_hx_tmp20,_hx_tmp23,(_hx_tmp25 + (_this__22 * m1->_22)));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,rotation,return )

void Graphics_obj::rotate(float angle,float centerx,float centery){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_180_rotate)
HXLINE( 181)		float temp__22;
HXDLIN( 181)		float temp__21;
HXDLIN( 181)		float temp__20;
HXDLIN( 181)		float temp__12;
HXDLIN( 181)		float temp__11;
HXDLIN( 181)		float temp__10;
HXDLIN( 181)		float temp__02;
HXDLIN( 181)		float temp__01;
HXDLIN( 181)		float temp__00;
HXDLIN( 181)		float _this__22;
HXDLIN( 181)		float _this__21;
HXDLIN( 181)		float _this__20;
HXDLIN( 181)		float _this__12;
HXDLIN( 181)		float _this__11;
HXDLIN( 181)		float _this__10;
HXDLIN( 181)		float _this__02;
HXDLIN( 181)		float _this__01;
HXDLIN( 181)		float _this__00;
HXDLIN( 181)		float _this__221;
HXDLIN( 181)		float _this__211;
HXDLIN( 181)		float _this__201;
HXDLIN( 181)		float _this__121;
HXDLIN( 181)		float _this__111;
HXDLIN( 181)		float _this__101;
HXDLIN( 181)		float _this__021;
HXDLIN( 181)		float _this__011;
HXDLIN( 181)		float _this__001;
HXDLIN( 181)		float _this__222;
HXDLIN( 181)		float _this__212;
HXDLIN( 181)		float _this__202;
HXDLIN( 181)		float _this__122;
HXDLIN( 181)		float _this__112;
HXDLIN( 181)		float _this__102;
HXDLIN( 181)		float _this__022;
HXDLIN( 181)		float _this__012;
HXDLIN( 181)		float _this__002 = (int)1;
HXDLIN( 181)		_this__102 = (int)0;
HXDLIN( 181)		_this__202 = centerx;
HXDLIN( 181)		_this__012 = (int)0;
HXDLIN( 181)		_this__112 = (int)1;
HXDLIN( 181)		_this__212 = centery;
HXDLIN( 181)		_this__022 = (int)0;
HXDLIN( 181)		_this__122 = (int)0;
HXDLIN( 181)		_this__222 = (int)1;
HXDLIN( 181)		float m__22;
HXDLIN( 181)		float m__21;
HXDLIN( 181)		float m__20;
HXDLIN( 181)		float m__12;
HXDLIN( 181)		float m__11;
HXDLIN( 181)		float m__10;
HXDLIN( 181)		float m__02;
HXDLIN( 181)		float m__01;
HXDLIN( 181)		float m__00 = ::Math_obj::cos(angle);
HXDLIN( 181)		m__10 = -(::Math_obj::sin(angle));
HXDLIN( 181)		m__20 = (int)0;
HXDLIN( 181)		m__01 = ::Math_obj::sin(angle);
HXDLIN( 181)		m__11 = ::Math_obj::cos(angle);
HXDLIN( 181)		m__21 = (int)0;
HXDLIN( 181)		m__02 = (int)0;
HXDLIN( 181)		m__12 = (int)0;
HXDLIN( 181)		m__22 = (int)1;
HXDLIN( 181)		_this__001 = (((_this__002 * m__00) + (_this__102 * m__01)) + (_this__202 * m__02));
HXDLIN( 181)		_this__101 = (((_this__002 * m__10) + (_this__102 * m__11)) + (_this__202 * m__12));
HXDLIN( 181)		_this__201 = (((_this__002 * m__20) + (_this__102 * m__21)) + (_this__202 * m__22));
HXDLIN( 181)		_this__011 = (((_this__012 * m__00) + (_this__112 * m__01)) + (_this__212 * m__02));
HXDLIN( 181)		_this__111 = (((_this__012 * m__10) + (_this__112 * m__11)) + (_this__212 * m__12));
HXDLIN( 181)		_this__211 = (((_this__012 * m__20) + (_this__112 * m__21)) + (_this__212 * m__22));
HXDLIN( 181)		_this__021 = (((_this__022 * m__00) + (_this__122 * m__01)) + (_this__222 * m__02));
HXDLIN( 181)		_this__121 = (((_this__022 * m__10) + (_this__122 * m__11)) + (_this__222 * m__12));
HXDLIN( 181)		_this__221 = (((_this__022 * m__20) + (_this__122 * m__21)) + (_this__222 * m__22));
HXDLIN( 181)		float m__221;
HXDLIN( 181)		float m__211;
HXDLIN( 181)		float m__201;
HXDLIN( 181)		float m__121;
HXDLIN( 181)		float m__111;
HXDLIN( 181)		float m__101;
HXDLIN( 181)		float m__021;
HXDLIN( 181)		float m__011;
HXDLIN( 181)		float m__001 = (int)1;
HXDLIN( 181)		m__101 = (int)0;
HXDLIN( 181)		m__201 = -(centerx);
HXDLIN( 181)		m__011 = (int)0;
HXDLIN( 181)		m__111 = (int)1;
HXDLIN( 181)		m__211 = -(centery);
HXDLIN( 181)		m__021 = (int)0;
HXDLIN( 181)		m__121 = (int)0;
HXDLIN( 181)		m__221 = (int)1;
HXDLIN( 181)		_this__00 = (((_this__001 * m__001) + (_this__101 * m__011)) + (_this__201 * m__021));
HXDLIN( 181)		_this__10 = (((_this__001 * m__101) + (_this__101 * m__111)) + (_this__201 * m__121));
HXDLIN( 181)		_this__20 = (((_this__001 * m__201) + (_this__101 * m__211)) + (_this__201 * m__221));
HXDLIN( 181)		_this__01 = (((_this__011 * m__001) + (_this__111 * m__011)) + (_this__211 * m__021));
HXDLIN( 181)		_this__11 = (((_this__011 * m__101) + (_this__111 * m__111)) + (_this__211 * m__121));
HXDLIN( 181)		_this__21 = (((_this__011 * m__201) + (_this__111 * m__211)) + (_this__211 * m__221));
HXDLIN( 181)		_this__02 = (((_this__021 * m__001) + (_this__121 * m__011)) + (_this__221 * m__021));
HXDLIN( 181)		_this__12 = (((_this__021 * m__101) + (_this__121 * m__111)) + (_this__221 * m__121));
HXDLIN( 181)		_this__22 = (((_this__021 * m__201) + (_this__121 * m__211)) + (_this__221 * m__221));
HXDLIN( 181)		::Array< ::Dynamic> m = this->transformations;
HXDLIN( 181)		 ::kha::math::FastMatrix3 m1 = m->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 181)		float _00 = (_this__00 * m1->_00);
HXDLIN( 181)		float _001 = (_00 + (_this__10 * m1->_01));
HXDLIN( 181)		float _10 = (_this__00 * m1->_10);
HXDLIN( 181)		float _101 = (_10 + (_this__10 * m1->_11));
HXDLIN( 181)		float _20 = (_this__00 * m1->_20);
HXDLIN( 181)		float _201 = (_20 + (_this__10 * m1->_21));
HXDLIN( 181)		float _01 = (_this__01 * m1->_00);
HXDLIN( 181)		float _011 = (_01 + (_this__11 * m1->_01));
HXDLIN( 181)		float _11 = (_this__01 * m1->_10);
HXDLIN( 181)		float _111 = (_11 + (_this__11 * m1->_11));
HXDLIN( 181)		float _21 = (_this__01 * m1->_20);
HXDLIN( 181)		float _211 = (_21 + (_this__11 * m1->_21));
HXDLIN( 181)		float _02 = (_this__02 * m1->_00);
HXDLIN( 181)		float _021 = (_02 + (_this__12 * m1->_01));
HXDLIN( 181)		float _12 = (_this__02 * m1->_10);
HXDLIN( 181)		float _121 = (_12 + (_this__12 * m1->_11));
HXDLIN( 181)		float _22 = (_this__02 * m1->_20);
HXDLIN( 181)		float _221 = (_22 + (_this__12 * m1->_21));
HXDLIN( 181)		temp__00 = (_001 + (_this__20 * m1->_02));
HXDLIN( 181)		temp__10 = (_101 + (_this__20 * m1->_12));
HXDLIN( 181)		temp__20 = (_201 + (_this__20 * m1->_22));
HXDLIN( 181)		temp__01 = (_011 + (_this__21 * m1->_02));
HXDLIN( 181)		temp__11 = (_111 + (_this__21 * m1->_12));
HXDLIN( 181)		temp__21 = (_211 + (_this__21 * m1->_22));
HXDLIN( 181)		temp__02 = (_021 + (_this__22 * m1->_02));
HXDLIN( 181)		temp__12 = (_121 + (_this__22 * m1->_12));
HXDLIN( 181)		temp__22 = (_221 + (_this__22 * m1->_22));
HXLINE( 183)		::Array< ::Dynamic> _hx_tmp = this->transformations;
HXDLIN( 183)		_hx_tmp->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >()->_00 = temp__00;
HXLINE( 184)		::Array< ::Dynamic> _hx_tmp1 = this->transformations;
HXDLIN( 184)		_hx_tmp1->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >()->_01 = temp__01;
HXLINE( 185)		::Array< ::Dynamic> _hx_tmp2 = this->transformations;
HXDLIN( 185)		_hx_tmp2->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >()->_02 = temp__02;
HXLINE( 186)		::Array< ::Dynamic> _hx_tmp3 = this->transformations;
HXDLIN( 186)		_hx_tmp3->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >()->_10 = temp__10;
HXLINE( 187)		::Array< ::Dynamic> _hx_tmp4 = this->transformations;
HXDLIN( 187)		_hx_tmp4->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >()->_11 = temp__11;
HXLINE( 188)		::Array< ::Dynamic> _hx_tmp5 = this->transformations;
HXDLIN( 188)		_hx_tmp5->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >()->_12 = temp__12;
HXLINE( 189)		::Array< ::Dynamic> _hx_tmp6 = this->transformations;
HXDLIN( 189)		_hx_tmp6->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >()->_20 = temp__20;
HXLINE( 190)		::Array< ::Dynamic> _hx_tmp7 = this->transformations;
HXDLIN( 190)		_hx_tmp7->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >()->_21 = temp__21;
HXLINE( 191)		::Array< ::Dynamic> _hx_tmp8 = this->transformations;
HXDLIN( 191)		_hx_tmp8->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >()->_22 = temp__22;
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,rotate,(void))

void Graphics_obj::pushRotation(float angle,float centerx,float centery){
            	HX_GC_STACKFRAME(&_hx_pos_5f2685bf915bf9af_195_pushRotation)
HXDLIN( 195)		float _this__22;
HXDLIN( 195)		float _this__21;
HXDLIN( 195)		float _this__20;
HXDLIN( 195)		float _this__12;
HXDLIN( 195)		float _this__11;
HXDLIN( 195)		float _this__10;
HXDLIN( 195)		float _this__02;
HXDLIN( 195)		float _this__01;
HXDLIN( 195)		float _this__00;
HXDLIN( 195)		float _this__221;
HXDLIN( 195)		float _this__211;
HXDLIN( 195)		float _this__201;
HXDLIN( 195)		float _this__121;
HXDLIN( 195)		float _this__111;
HXDLIN( 195)		float _this__101;
HXDLIN( 195)		float _this__021;
HXDLIN( 195)		float _this__011;
HXDLIN( 195)		float _this__001;
HXDLIN( 195)		float _this__222;
HXDLIN( 195)		float _this__212;
HXDLIN( 195)		float _this__202;
HXDLIN( 195)		float _this__122;
HXDLIN( 195)		float _this__112;
HXDLIN( 195)		float _this__102;
HXDLIN( 195)		float _this__022;
HXDLIN( 195)		float _this__012;
HXDLIN( 195)		float _this__002 = (int)1;
HXDLIN( 195)		_this__102 = (int)0;
HXDLIN( 195)		_this__202 = centerx;
HXDLIN( 195)		_this__012 = (int)0;
HXDLIN( 195)		_this__112 = (int)1;
HXDLIN( 195)		_this__212 = centery;
HXDLIN( 195)		_this__022 = (int)0;
HXDLIN( 195)		_this__122 = (int)0;
HXDLIN( 195)		_this__222 = (int)1;
HXDLIN( 195)		float m__22;
HXDLIN( 195)		float m__21;
HXDLIN( 195)		float m__20;
HXDLIN( 195)		float m__12;
HXDLIN( 195)		float m__11;
HXDLIN( 195)		float m__10;
HXDLIN( 195)		float m__02;
HXDLIN( 195)		float m__01;
HXDLIN( 195)		float m__00 = ::Math_obj::cos(angle);
HXDLIN( 195)		m__10 = -(::Math_obj::sin(angle));
HXDLIN( 195)		m__20 = (int)0;
HXDLIN( 195)		m__01 = ::Math_obj::sin(angle);
HXDLIN( 195)		m__11 = ::Math_obj::cos(angle);
HXDLIN( 195)		m__21 = (int)0;
HXDLIN( 195)		m__02 = (int)0;
HXDLIN( 195)		m__12 = (int)0;
HXDLIN( 195)		m__22 = (int)1;
HXDLIN( 195)		_this__001 = (((_this__002 * m__00) + (_this__102 * m__01)) + (_this__202 * m__02));
HXDLIN( 195)		_this__101 = (((_this__002 * m__10) + (_this__102 * m__11)) + (_this__202 * m__12));
HXDLIN( 195)		_this__201 = (((_this__002 * m__20) + (_this__102 * m__21)) + (_this__202 * m__22));
HXDLIN( 195)		_this__011 = (((_this__012 * m__00) + (_this__112 * m__01)) + (_this__212 * m__02));
HXDLIN( 195)		_this__111 = (((_this__012 * m__10) + (_this__112 * m__11)) + (_this__212 * m__12));
HXDLIN( 195)		_this__211 = (((_this__012 * m__20) + (_this__112 * m__21)) + (_this__212 * m__22));
HXDLIN( 195)		_this__021 = (((_this__022 * m__00) + (_this__122 * m__01)) + (_this__222 * m__02));
HXDLIN( 195)		_this__121 = (((_this__022 * m__10) + (_this__122 * m__11)) + (_this__222 * m__12));
HXDLIN( 195)		_this__221 = (((_this__022 * m__20) + (_this__122 * m__21)) + (_this__222 * m__22));
HXDLIN( 195)		float m__221;
HXDLIN( 195)		float m__211;
HXDLIN( 195)		float m__201;
HXDLIN( 195)		float m__121;
HXDLIN( 195)		float m__111;
HXDLIN( 195)		float m__101;
HXDLIN( 195)		float m__021;
HXDLIN( 195)		float m__011;
HXDLIN( 195)		float m__001 = (int)1;
HXDLIN( 195)		m__101 = (int)0;
HXDLIN( 195)		m__201 = -(centerx);
HXDLIN( 195)		m__011 = (int)0;
HXDLIN( 195)		m__111 = (int)1;
HXDLIN( 195)		m__211 = -(centery);
HXDLIN( 195)		m__021 = (int)0;
HXDLIN( 195)		m__121 = (int)0;
HXDLIN( 195)		m__221 = (int)1;
HXDLIN( 195)		_this__00 = (((_this__001 * m__001) + (_this__101 * m__011)) + (_this__201 * m__021));
HXDLIN( 195)		_this__10 = (((_this__001 * m__101) + (_this__101 * m__111)) + (_this__201 * m__121));
HXDLIN( 195)		_this__20 = (((_this__001 * m__201) + (_this__101 * m__211)) + (_this__201 * m__221));
HXDLIN( 195)		_this__01 = (((_this__011 * m__001) + (_this__111 * m__011)) + (_this__211 * m__021));
HXDLIN( 195)		_this__11 = (((_this__011 * m__101) + (_this__111 * m__111)) + (_this__211 * m__121));
HXDLIN( 195)		_this__21 = (((_this__011 * m__201) + (_this__111 * m__211)) + (_this__211 * m__221));
HXDLIN( 195)		_this__02 = (((_this__021 * m__001) + (_this__121 * m__011)) + (_this__221 * m__021));
HXDLIN( 195)		_this__12 = (((_this__021 * m__101) + (_this__121 * m__111)) + (_this__221 * m__121));
HXDLIN( 195)		_this__22 = (((_this__021 * m__201) + (_this__121 * m__211)) + (_this__221 * m__221));
HXDLIN( 195)		::Array< ::Dynamic> m = this->transformations;
HXDLIN( 195)		 ::kha::math::FastMatrix3 m1 = m->__get((this->transformations->length - (int)1)).StaticCast<  ::kha::math::FastMatrix3 >();
HXDLIN( 195)		float _hx_tmp = (_this__00 * m1->_00);
HXDLIN( 195)		float _hx_tmp1 = (_hx_tmp + (_this__10 * m1->_01));
HXDLIN( 195)		float _hx_tmp2 = (_hx_tmp1 + (_this__20 * m1->_02));
HXDLIN( 195)		float _hx_tmp3 = (_this__00 * m1->_10);
HXDLIN( 195)		float _hx_tmp4 = (_hx_tmp3 + (_this__10 * m1->_11));
HXDLIN( 195)		float _hx_tmp5 = (_hx_tmp4 + (_this__20 * m1->_12));
HXDLIN( 195)		float _hx_tmp6 = (_this__00 * m1->_20);
HXDLIN( 195)		float _hx_tmp7 = (_hx_tmp6 + (_this__10 * m1->_21));
HXDLIN( 195)		float _hx_tmp8 = (_hx_tmp7 + (_this__20 * m1->_22));
HXDLIN( 195)		float _hx_tmp9 = (_this__01 * m1->_00);
HXDLIN( 195)		float _hx_tmp10 = (_hx_tmp9 + (_this__11 * m1->_01));
HXDLIN( 195)		float _hx_tmp11 = (_hx_tmp10 + (_this__21 * m1->_02));
HXDLIN( 195)		float _hx_tmp12 = (_this__01 * m1->_10);
HXDLIN( 195)		float _hx_tmp13 = (_hx_tmp12 + (_this__11 * m1->_11));
HXDLIN( 195)		float _hx_tmp14 = (_hx_tmp13 + (_this__21 * m1->_12));
HXDLIN( 195)		float _hx_tmp15 = (_this__01 * m1->_20);
HXDLIN( 195)		float _hx_tmp16 = (_hx_tmp15 + (_this__11 * m1->_21));
HXDLIN( 195)		float _hx_tmp17 = (_hx_tmp16 + (_this__21 * m1->_22));
HXDLIN( 195)		float _hx_tmp18 = (_this__02 * m1->_00);
HXDLIN( 195)		float _hx_tmp19 = (_hx_tmp18 + (_this__12 * m1->_01));
HXDLIN( 195)		float _hx_tmp20 = (_hx_tmp19 + (_this__22 * m1->_02));
HXDLIN( 195)		float _hx_tmp21 = (_this__02 * m1->_10);
HXDLIN( 195)		float _hx_tmp22 = (_hx_tmp21 + (_this__12 * m1->_11));
HXDLIN( 195)		float _hx_tmp23 = (_hx_tmp22 + (_this__22 * m1->_12));
HXDLIN( 195)		float _hx_tmp24 = (_this__02 * m1->_20);
HXDLIN( 195)		float _hx_tmp25 = (_hx_tmp24 + (_this__12 * m1->_21));
HXDLIN( 195)		this->pushTransformation( ::kha::math::FastMatrix3_obj::__alloc( HX_CTX ,_hx_tmp2,_hx_tmp5,_hx_tmp8,_hx_tmp11,_hx_tmp14,_hx_tmp17,_hx_tmp20,_hx_tmp23,(_hx_tmp25 + (_this__22 * m1->_22))));
            	}


HX_DEFINE_DYNAMIC_FUNC3(Graphics_obj,pushRotation,(void))

void Graphics_obj::pushOpacity(Float opacity){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_200_pushOpacity)
HXLINE( 201)		this->setOpacity(opacity);
HXLINE( 202)		this->opacities->push(opacity);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,pushOpacity,(void))

Float Graphics_obj::popOpacity(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_205_popOpacity)
HXLINE( 206)		 ::Dynamic ret = this->opacities->pop();
HXLINE( 207)		this->setOpacity(this->get_opacity());
HXLINE( 208)		return ret;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,popOpacity,return )

Float Graphics_obj::get_opacity(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_212_get_opacity)
HXDLIN( 212)		::Array< Float > _hx_tmp = this->opacities;
HXDLIN( 212)		return _hx_tmp->__get((this->opacities->length - (int)1));
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_opacity,return )

Float Graphics_obj::set_opacity(Float opacity){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_215_set_opacity)
HXLINE( 216)		this->setOpacity(opacity);
HXLINE( 217)		::Array< Float > _hx_tmp = this->opacities;
HXDLIN( 217)		return (_hx_tmp[(this->opacities->length - (int)1)] = opacity);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_opacity,return )

void Graphics_obj::scissor(int x,int y,int width,int height){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_220_scissor)
            	}


HX_DEFINE_DYNAMIC_FUNC4(Graphics_obj,scissor,(void))

void Graphics_obj::disableScissor(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_224_disableScissor)
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,disableScissor,(void))

 ::kha::graphics4::PipelineState Graphics_obj::get_pipeline(){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_234_get_pipeline)
HXDLIN( 234)		return this->pipe;
            	}


HX_DEFINE_DYNAMIC_FUNC0(Graphics_obj,get_pipeline,return )

 ::kha::graphics4::PipelineState Graphics_obj::set_pipeline( ::kha::graphics4::PipelineState pipeline){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_237_set_pipeline)
HXLINE( 238)		this->setPipeline(pipeline);
HXLINE( 239)		return (this->pipe = pipeline);
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,set_pipeline,return )

void Graphics_obj::setTransformation( ::kha::math::FastMatrix3 transformation){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_258_setTransformation)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setTransformation,(void))

void Graphics_obj::setOpacity(Float opacity){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_262_setOpacity)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setOpacity,(void))

void Graphics_obj::setPipeline( ::kha::graphics4::PipelineState pipeline){
            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_266_setPipeline)
            	}


HX_DEFINE_DYNAMIC_FUNC1(Graphics_obj,setPipeline,(void))

::Array< int > Graphics_obj::_glyphs;


hx::ObjectPtr< Graphics_obj > Graphics_obj::__new() {
	hx::ObjectPtr< Graphics_obj > __this = new Graphics_obj();
	__this->__construct();
	return __this;
}

hx::ObjectPtr< Graphics_obj > Graphics_obj::__alloc(hx::Ctx *_hx_ctx) {
	Graphics_obj *__this = (Graphics_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(Graphics_obj), true, "kha.graphics2.Graphics"));
	*(void **)__this = Graphics_obj::_hx_vtable;
	__this->__construct();
	return __this;
}

Graphics_obj::Graphics_obj()
{
}

void Graphics_obj::__Mark(HX_MARK_PARAMS)
{
	HX_MARK_BEGIN_CLASS(Graphics);
	HX_MARK_MEMBER_NAME(pipe,"pipe");
	HX_MARK_MEMBER_NAME(transformations,"transformations");
	HX_MARK_MEMBER_NAME(opacities,"opacities");
	HX_MARK_MEMBER_NAME(myFontSize,"myFontSize");
	HX_MARK_END_CLASS();
}

void Graphics_obj::__Visit(HX_VISIT_PARAMS)
{
	HX_VISIT_MEMBER_NAME(pipe,"pipe");
	HX_VISIT_MEMBER_NAME(transformations,"transformations");
	HX_VISIT_MEMBER_NAME(opacities,"opacities");
	HX_VISIT_MEMBER_NAME(myFontSize,"myFontSize");
}

hx::Val Graphics_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 3:
		if (HX_FIELD_EQ(inName,"end") ) { return hx::Val( end_dyn() ); }
		break;
	case 4:
		if (HX_FIELD_EQ(inName,"font") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_font() ); }
		if (HX_FIELD_EQ(inName,"pipe") ) { return hx::Val( pipe ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"begin") ) { return hx::Val( begin_dyn() ); }
		if (HX_FIELD_EQ(inName,"flush") ) { return hx::Val( flush_dyn() ); }
		if (HX_FIELD_EQ(inName,"clear") ) { return hx::Val( clear_dyn() ); }
		if (HX_FIELD_EQ(inName,"color") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_color() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"rotate") ) { return hx::Val( rotate_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opacity") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_opacity() ); }
		if (HX_FIELD_EQ(inName,"scissor") ) { return hx::Val( scissor_dyn() ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"drawRect") ) { return hx::Val( drawRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"fillRect") ) { return hx::Val( fillRect_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawLine") ) { return hx::Val( drawLine_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_font") ) { return hx::Val( get_font_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_font") ) { return hx::Val( set_font_dyn() ); }
		if (HX_FIELD_EQ(inName,"fontSize") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_fontSize() ); }
		if (HX_FIELD_EQ(inName,"rotation") ) { return hx::Val( rotation_dyn() ); }
		if (HX_FIELD_EQ(inName,"pipeline") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_pipeline() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"drawImage") ) { return hx::Val( drawImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"drawVideo") ) { return hx::Val( drawVideo_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_color") ) { return hx::Val( get_color_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_color") ) { return hx::Val( set_color_dyn() ); }
		if (HX_FIELD_EQ(inName,"translate") ) { return hx::Val( translate_dyn() ); }
		if (HX_FIELD_EQ(inName,"opacities") ) { return hx::Val( opacities ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"drawString") ) { return hx::Val( drawString_dyn() ); }
		if (HX_FIELD_EQ(inName,"fontGlyphs") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_fontGlyphs() ); }
		if (HX_FIELD_EQ(inName,"popOpacity") ) { return hx::Val( popOpacity_dyn() ); }
		if (HX_FIELD_EQ(inName,"myFontSize") ) { return hx::Val( myFontSize ); }
		if (HX_FIELD_EQ(inName,"setOpacity") ) { return hx::Val( setOpacity_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"translation") ) { return hx::Val( translation_dyn() ); }
		if (HX_FIELD_EQ(inName,"pushOpacity") ) { return hx::Val( pushOpacity_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_opacity") ) { return hx::Val( get_opacity_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_opacity") ) { return hx::Val( set_opacity_dyn() ); }
		if (HX_FIELD_EQ(inName,"setPipeline") ) { return hx::Val( setPipeline_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"drawSubImage") ) { return hx::Val( drawSubImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"fillTriangle") ) { return hx::Val( fillTriangle_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_fontSize") ) { return hx::Val( get_fontSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_fontSize") ) { return hx::Val( set_fontSize_dyn() ); }
		if (HX_FIELD_EQ(inName,"pushRotation") ) { return hx::Val( pushRotation_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_pipeline") ) { return hx::Val( get_pipeline_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_pipeline") ) { return hx::Val( set_pipeline_dyn() ); }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"drawCharacters") ) { return hx::Val( drawCharacters_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_fontGlyphs") ) { return hx::Val( get_fontGlyphs_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_fontGlyphs") ) { return hx::Val( set_fontGlyphs_dyn() ); }
		if (HX_FIELD_EQ(inName,"transformation") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_transformation() ); }
		if (HX_FIELD_EQ(inName,"disableScissor") ) { return hx::Val( disableScissor_dyn() ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"drawScaledImage") ) { return hx::Val( drawScaledImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"pushTranslation") ) { return hx::Val( pushTranslation_dyn() ); }
		if (HX_FIELD_EQ(inName,"transformations") ) { return hx::Val( transformations ); }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"imageScaleQuality") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_imageScaleQuality() ); }
		if (HX_FIELD_EQ(inName,"popTransformation") ) { return hx::Val( popTransformation_dyn() ); }
		if (HX_FIELD_EQ(inName,"setTransformation") ) { return hx::Val( setTransformation_dyn() ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"drawScaledSubImage") ) { return hx::Val( drawScaledSubImage_dyn() ); }
		if (HX_FIELD_EQ(inName,"mipmapScaleQuality") ) { if (inCallProp == hx::paccAlways) return hx::Val( get_mipmapScaleQuality() ); }
		if (HX_FIELD_EQ(inName,"pushTransformation") ) { return hx::Val( pushTransformation_dyn() ); }
		if (HX_FIELD_EQ(inName,"get_transformation") ) { return hx::Val( get_transformation_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_transformation") ) { return hx::Val( set_transformation_dyn() ); }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"get_imageScaleQuality") ) { return hx::Val( get_imageScaleQuality_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_imageScaleQuality") ) { return hx::Val( set_imageScaleQuality_dyn() ); }
		break;
	case 22:
		if (HX_FIELD_EQ(inName,"get_mipmapScaleQuality") ) { return hx::Val( get_mipmapScaleQuality_dyn() ); }
		if (HX_FIELD_EQ(inName,"set_mipmapScaleQuality") ) { return hx::Val( set_mipmapScaleQuality_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

bool Graphics_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"_glyphs") ) { outValue = ( _glyphs ); return true; }
	}
	return false;
}

hx::Val Graphics_obj::__SetField(const ::String &inName,const hx::Val &inValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"font") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_font(inValue.Cast<  ::kha::Kravur >()) ); }
		if (HX_FIELD_EQ(inName,"pipe") ) { pipe=inValue.Cast<  ::kha::graphics4::PipelineState >(); return inValue; }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"color") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_color(inValue.Cast< int >()) ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"opacity") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_opacity(inValue.Cast< Float >()) ); }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"fontSize") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_fontSize(inValue.Cast< int >()) ); }
		if (HX_FIELD_EQ(inName,"pipeline") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_pipeline(inValue.Cast<  ::kha::graphics4::PipelineState >()) ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"opacities") ) { opacities=inValue.Cast< ::Array< Float > >(); return inValue; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"fontGlyphs") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_fontGlyphs(inValue.Cast< ::Array< int > >()) ); }
		if (HX_FIELD_EQ(inName,"myFontSize") ) { myFontSize=inValue.Cast< int >(); return inValue; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"transformation") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_transformation(inValue.Cast<  ::kha::math::FastMatrix3 >()) ); }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"transformations") ) { transformations=inValue.Cast< ::Array< ::Dynamic> >(); return inValue; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"imageScaleQuality") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_imageScaleQuality(inValue.Cast<  ::kha::graphics2::ImageScaleQuality >()) ); }
		break;
	case 18:
		if (HX_FIELD_EQ(inName,"mipmapScaleQuality") ) { if (inCallProp == hx::paccAlways) return hx::Val( set_mipmapScaleQuality(inValue.Cast<  ::kha::graphics2::ImageScaleQuality >()) ); }
	}
	return super::__SetField(inName,inValue,inCallProp);
}

bool Graphics_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"_glyphs") ) { _glyphs=ioValue.Cast< ::Array< int > >(); return true; }
	}
	return false;
}

void Graphics_obj::__GetFields(Array< ::String> &outFields)
{
	outFields->push(HX_HCSTRING("imageScaleQuality","\x50","\x2b","\x30","\x75"));
	outFields->push(HX_HCSTRING("mipmapScaleQuality","\xfd","\x48","\x4e","\x0a"));
	outFields->push(HX_HCSTRING("color","\x63","\x71","\x5c","\x4a"));
	outFields->push(HX_HCSTRING("font","\xcf","\x5d","\xc0","\x43"));
	outFields->push(HX_HCSTRING("fontSize","\x30","\xbe","\xd1","\xce"));
	outFields->push(HX_HCSTRING("fontGlyphs","\x76","\x90","\xac","\x62"));
	outFields->push(HX_HCSTRING("transformation","\xc9","\xbd","\x2f","\x0a"));
	outFields->push(HX_HCSTRING("opacity","\xcb","\x5d","\x65","\xeb"));
	outFields->push(HX_HCSTRING("pipe","\x2e","\xf4","\x57","\x4a"));
	outFields->push(HX_HCSTRING("pipeline","\x22","\xbb","\x83","\x4b"));
	outFields->push(HX_HCSTRING("transformations","\x8a","\x52","\x96","\xdf"));
	outFields->push(HX_HCSTRING("opacities","\xe9","\xda","\xc4","\x95"));
	outFields->push(HX_HCSTRING("myFontSize","\xbc","\x25","\x53","\x3c"));
	super::__GetFields(outFields);
};

#if HXCPP_SCRIPTABLE
static hx::StorageInfo Graphics_obj_sMemberStorageInfo[] = {
	{hx::fsObject /*::kha::graphics4::PipelineState*/ ,(int)offsetof(Graphics_obj,pipe),HX_HCSTRING("pipe","\x2e","\xf4","\x57","\x4a")},
	{hx::fsObject /*Array< ::Dynamic >*/ ,(int)offsetof(Graphics_obj,transformations),HX_HCSTRING("transformations","\x8a","\x52","\x96","\xdf")},
	{hx::fsObject /*Array< Float >*/ ,(int)offsetof(Graphics_obj,opacities),HX_HCSTRING("opacities","\xe9","\xda","\xc4","\x95")},
	{hx::fsInt,(int)offsetof(Graphics_obj,myFontSize),HX_HCSTRING("myFontSize","\xbc","\x25","\x53","\x3c")},
	{ hx::fsUnknown, 0, null()}
};
static hx::StaticInfo Graphics_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*Array< int >*/ ,(void *) &Graphics_obj::_glyphs,HX_HCSTRING("_glyphs","\xe6","\x0a","\xd0","\x1c")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static ::String Graphics_obj_sMemberFields[] = {
	HX_HCSTRING("begin","\x29","\xea","\x55","\xb0"),
	HX_HCSTRING("end","\xdb","\x03","\x4d","\x00"),
	HX_HCSTRING("flush","\xc4","\x62","\x9b","\x02"),
	HX_HCSTRING("clear","\x8d","\x71","\x5b","\x48"),
	HX_HCSTRING("drawImage","\xb7","\x54","\x74","\x85"),
	HX_HCSTRING("drawSubImage","\xdf","\x01","\x7c","\x08"),
	HX_HCSTRING("drawScaledImage","\xbd","\x98","\x4d","\xc9"),
	HX_HCSTRING("drawScaledSubImage","\x99","\x85","\xbc","\xe8"),
	HX_HCSTRING("drawRect","\x48","\xf7","\x10","\x60"),
	HX_HCSTRING("fillRect","\x47","\x45","\xb9","\x6c"),
	HX_HCSTRING("drawString","\xf5","\xa3","\xf3","\x52"),
	HX_HCSTRING("drawCharacters","\xce","\x35","\xd8","\x38"),
	HX_HCSTRING("drawLine","\x18","\xc2","\x1c","\x5c"),
	HX_HCSTRING("drawVideo","\xd7","\x49","\x07","\xff"),
	HX_HCSTRING("fillTriangle","\x6b","\x04","\x3a","\x92"),
	HX_HCSTRING("get_imageScaleQuality","\x27","\x2e","\xde","\xf3"),
	HX_HCSTRING("set_imageScaleQuality","\x33","\xfc","\xe6","\x47"),
	HX_HCSTRING("get_mipmapScaleQuality","\x46","\xc2","\xe2","\x63"),
	HX_HCSTRING("set_mipmapScaleQuality","\xba","\x3e","\x8e","\x97"),
	HX_HCSTRING("get_color","\xba","\xcd","\x05","\x8e"),
	HX_HCSTRING("set_color","\xc6","\xb9","\x56","\x71"),
	HX_HCSTRING("get_font","\x58","\x19","\x7b","\xc3"),
	HX_HCSTRING("set_font","\xcc","\x72","\xd8","\x71"),
	HX_HCSTRING("get_fontSize","\x39","\x72","\xeb","\x83"),
	HX_HCSTRING("set_fontSize","\xad","\x95","\xe4","\x98"),
	HX_HCSTRING("get_fontGlyphs","\xbf","\x18","\xa2","\xd8"),
	HX_HCSTRING("set_fontGlyphs","\x33","\x01","\xc2","\xf8"),
	HX_HCSTRING("pushTransformation","\x43","\x2d","\x88","\x9a"),
	HX_HCSTRING("popTransformation","\x3a","\xeb","\x28","\x8b"),
	HX_HCSTRING("get_transformation","\x92","\x9e","\xc9","\xa5"),
	HX_HCSTRING("set_transformation","\x06","\xd1","\x78","\x82"),
	HX_HCSTRING("translation","\xf1","\x30","\xa2","\x8a"),
	HX_HCSTRING("translate","\x4e","\xd7","\x7f","\x49"),
	HX_HCSTRING("pushTranslation","\x37","\xb1","\x5e","\xa1"),
	HX_HCSTRING("rotation","\x3e","\x3d","\x86","\x08"),
	HX_HCSTRING("rotate","\x5b","\x46","\x20","\xcb"),
	HX_HCSTRING("pushRotation","\x38","\x75","\x25","\x9f"),
	HX_HCSTRING("pushOpacity","\x11","\xc3","\xfe","\xfa"),
	HX_HCSTRING("popOpacity","\x3a","\x6c","\x09","\x56"),
	HX_HCSTRING("get_opacity","\xe2","\xbd","\x5f","\x71"),
	HX_HCSTRING("set_opacity","\xee","\xc4","\xcc","\x7b"),
	HX_HCSTRING("scissor","\x1c","\x28","\xe7","\x04"),
	HX_HCSTRING("disableScissor","\x14","\x73","\x66","\x02"),
	HX_HCSTRING("pipe","\x2e","\xf4","\x57","\x4a"),
	HX_HCSTRING("get_pipeline","\x2b","\x6f","\x9d","\x00"),
	HX_HCSTRING("set_pipeline","\x9f","\x92","\x96","\x15"),
	HX_HCSTRING("transformations","\x8a","\x52","\x96","\xdf"),
	HX_HCSTRING("opacities","\xe9","\xda","\xc4","\x95"),
	HX_HCSTRING("myFontSize","\xbc","\x25","\x53","\x3c"),
	HX_HCSTRING("setTransformation","\x0b","\x45","\x11","\xa0"),
	HX_HCSTRING("setOpacity","\x49","\x82","\x44","\x3e"),
	HX_HCSTRING("setPipeline","\xe4","\x84","\xe4","\x7b"),
	::String(null()) };

static void Graphics_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Graphics_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Graphics_obj::_glyphs,"_glyphs");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Graphics_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Graphics_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Graphics_obj::_glyphs,"_glyphs");
};

#endif

hx::Class Graphics_obj::__mClass;

static ::String Graphics_obj_sStaticFields[] = {
	HX_HCSTRING("_glyphs","\xe6","\x0a","\xd0","\x1c"),
	::String(null())
};

void Graphics_obj::__register()
{
	hx::Object *dummy = new Graphics_obj;
	Graphics_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.graphics2.Graphics","\x3c","\xbf","\x49","\x32");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Graphics_obj::__GetStatic;
	__mClass->mSetStaticField = &Graphics_obj::__SetStatic;
	__mClass->mMarkFunc = Graphics_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Graphics_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(Graphics_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< Graphics_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Graphics_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Graphics_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Graphics_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Graphics_obj::__boot()
{
{
            		HX_BEGIN_LOCAL_FUNC_S0(hx::LocalFunc,_hx_Closure_0) HXARGC(0)
            		 ::Dynamic _hx_run(){
            			HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_129_boot)
HXDLIN( 129)			::Array< int > _g = ::Array_obj< int >::__new(0);
HXDLIN( 129)			{
HXDLIN( 129)				int _g1 = (int)32;
HXDLIN( 129)				while((_g1 < (int)256)){
HXDLIN( 129)					_g1 = (_g1 + (int)1);
HXDLIN( 129)					int i = (_g1 - (int)1);
HXDLIN( 129)					_g->push(i);
            				}
            			}
HXDLIN( 129)			return _g;
            		}
            		HX_END_LOCAL_FUNC0(return)

            	HX_STACKFRAME(&_hx_pos_5f2685bf915bf9af_129_boot)
HXDLIN( 129)		_glyphs =  ::Dynamic(new _hx_Closure_0())();
            	}
}

} // end namespace kha
} // end namespace graphics2
