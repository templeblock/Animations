// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_haxe_Serializer
#include <haxe/Serializer.h>
#endif
#ifndef INCLUDED_haxe_Unserializer
#include <haxe/Unserializer.h>
#endif
#ifndef INCLUDED_haxe_io_Bytes
#include <haxe/io/Bytes.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif
#ifndef INCLUDED_kha_StorageFile
#include <kha/StorageFile.h>
#endif
#ifndef INCLUDED_kha_internal_BytesBlob
#include <kha/internal/BytesBlob.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_13_read,"kha.StorageFile","read",0x61d90f77,"kha.StorageFile.read","kha/StorageFile.hx",13,0x6d7ec4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_16_write,"kha.StorageFile","write",0x25b3459e,"kha.StorageFile.write","kha/StorageFile.hx",16,0x6d7ec4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_20_append,"kha.StorageFile","append",0xe917b03b,"kha.StorageFile.append","kha/StorageFile.hx",20,0x6d7ec4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_25_canAppend,"kha.StorageFile","canAppend",0xdec8da49,"kha.StorageFile.canAppend","kha/StorageFile.hx",25,0x6d7ec4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_29_maxSize,"kha.StorageFile","maxSize",0x8e94c004,"kha.StorageFile.maxSize","kha/StorageFile.hx",29,0x6d7ec4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_32_writeString,"kha.StorageFile","writeString",0x26f8ed0f,"kha.StorageFile.writeString","kha/StorageFile.hx",32,0x6d7ec4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_37_appendString,"kha.StorageFile","appendString",0xf132ab6c,"kha.StorageFile.appendString","kha/StorageFile.hx",37,0x6d7ec4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_42_readString,"kha.StorageFile","readString",0x26cd1fa8,"kha.StorageFile.readString","kha/StorageFile.hx",42,0x6d7ec4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_49_writeObject,"kha.StorageFile","writeObject",0x2b0842fd,"kha.StorageFile.writeObject","kha/StorageFile.hx",49,0x6d7ec4b2)
HX_LOCAL_STACK_FRAME(_hx_pos_16c5f6866bf07d89_52_readObject,"kha.StorageFile","readObject",0x2adc7596,"kha.StorageFile.readObject","kha/StorageFile.hx",52,0x6d7ec4b2)
namespace kha{

void StorageFile_obj::__construct() { }

Dynamic StorageFile_obj::__CreateEmpty() { return new StorageFile_obj; }

void *StorageFile_obj::_hx_vtable = 0;

Dynamic StorageFile_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< StorageFile_obj > _hx_result = new StorageFile_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool StorageFile_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x5d721dd3;
}

 ::kha::internal::BytesBlob StorageFile_obj::read(){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_13_read)
HXDLIN(  13)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(StorageFile_obj,read,return )

void StorageFile_obj::write( ::kha::internal::BytesBlob data){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_16_write)
            	}


HX_DEFINE_DYNAMIC_FUNC1(StorageFile_obj,write,(void))

void StorageFile_obj::append( ::kha::internal::BytesBlob data){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_20_append)
            	}


HX_DEFINE_DYNAMIC_FUNC1(StorageFile_obj,append,(void))

bool StorageFile_obj::canAppend(){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_25_canAppend)
HXDLIN(  25)		return false;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StorageFile_obj,canAppend,return )

int StorageFile_obj::maxSize(){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_29_maxSize)
HXDLIN(  29)		return (int)-1;
            	}


HX_DEFINE_DYNAMIC_FUNC0(StorageFile_obj,maxSize,return )

void StorageFile_obj::writeString(::String data){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_32_writeString)
HXLINE(  33)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::ofString(data);
HXLINE(  34)		this->write(::kha::internal::BytesBlob_obj::fromBytes(bytes));
            	}


HX_DEFINE_DYNAMIC_FUNC1(StorageFile_obj,writeString,(void))

void StorageFile_obj::appendString(::String data){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_37_appendString)
HXLINE(  38)		 ::haxe::io::Bytes bytes = ::haxe::io::Bytes_obj::ofString(data);
HXLINE(  39)		this->append(::kha::internal::BytesBlob_obj::fromBytes(bytes));
            	}


HX_DEFINE_DYNAMIC_FUNC1(StorageFile_obj,appendString,(void))

::String StorageFile_obj::readString(){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_42_readString)
HXLINE(  43)		 ::kha::internal::BytesBlob blob = this->read();
HXLINE(  44)		if (hx::IsNull( blob )) {
HXLINE(  44)			return null();
            		}
            		else {
HXLINE(  45)			return blob->toString();
            		}
HXLINE(  44)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(StorageFile_obj,readString,return )

void StorageFile_obj::writeObject( ::Dynamic object){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_49_writeObject)
HXDLIN(  49)		this->writeString(::haxe::Serializer_obj::run(object));
            	}


HX_DEFINE_DYNAMIC_FUNC1(StorageFile_obj,writeObject,(void))

 ::Dynamic StorageFile_obj::readObject(){
            	HX_STACKFRAME(&_hx_pos_16c5f6866bf07d89_52_readObject)
HXLINE(  53)		::String s = this->readString();
HXLINE(  54)		if (hx::IsNull( s )) {
HXLINE(  54)			return null();
            		}
HXLINE(  55)		try {
            			HX_STACK_CATCHABLE( ::Dynamic, 0);
HXLINE(  56)			return ::haxe::Unserializer_obj::run(s);
            		}
            		catch( ::Dynamic _hx_e){
            			if (_hx_e.IsClass<  ::Dynamic >() ){
            				HX_STACK_BEGIN_CATCH
            				 ::Dynamic e = _hx_e;
HXLINE(  59)				return null();
            			}
            			else {
            				HX_STACK_DO_THROW(_hx_e);
            			}
            		}
HXLINE(  55)		return null();
            	}


HX_DEFINE_DYNAMIC_FUNC0(StorageFile_obj,readObject,return )


StorageFile_obj::StorageFile_obj()
{
}

hx::Val StorageFile_obj::__Field(const ::String &inName,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 4:
		if (HX_FIELD_EQ(inName,"read") ) { return hx::Val( read_dyn() ); }
		break;
	case 5:
		if (HX_FIELD_EQ(inName,"write") ) { return hx::Val( write_dyn() ); }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"append") ) { return hx::Val( append_dyn() ); }
		break;
	case 7:
		if (HX_FIELD_EQ(inName,"maxSize") ) { return hx::Val( maxSize_dyn() ); }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"canAppend") ) { return hx::Val( canAppend_dyn() ); }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"readString") ) { return hx::Val( readString_dyn() ); }
		if (HX_FIELD_EQ(inName,"readObject") ) { return hx::Val( readObject_dyn() ); }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"writeString") ) { return hx::Val( writeString_dyn() ); }
		if (HX_FIELD_EQ(inName,"writeObject") ) { return hx::Val( writeObject_dyn() ); }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"appendString") ) { return hx::Val( appendString_dyn() ); }
	}
	return super::__Field(inName,inCallProp);
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *StorageFile_obj_sMemberStorageInfo = 0;
static hx::StaticInfo *StorageFile_obj_sStaticStorageInfo = 0;
#endif

static ::String StorageFile_obj_sMemberFields[] = {
	HX_HCSTRING("read","\x56","\x4b","\xa7","\x4b"),
	HX_HCSTRING("write","\xdf","\x6c","\x59","\xd0"),
	HX_HCSTRING("append","\xda","\xe1","\xd3","\x8f"),
	HX_HCSTRING("canAppend","\x0a","\x36","\x1a","\xe2"),
	HX_HCSTRING("maxSize","\x85","\xf9","\x83","\xcc"),
	HX_HCSTRING("writeString","\x10","\x7b","\x29","\xa6"),
	HX_HCSTRING("appendString","\x4b","\x5e","\x7e","\xbc"),
	HX_HCSTRING("readString","\xc7","\x0c","\xac","\x0a"),
	HX_HCSTRING("writeObject","\xfe","\xd0","\x38","\xaa"),
	HX_HCSTRING("readObject","\xb5","\x62","\xbb","\x0e"),
	::String(null()) };

static void StorageFile_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(StorageFile_obj::__mClass,"__mClass");
};

#ifdef HXCPP_VISIT_ALLOCS
static void StorageFile_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(StorageFile_obj::__mClass,"__mClass");
};

#endif

hx::Class StorageFile_obj::__mClass;

void StorageFile_obj::__register()
{
	hx::Object *dummy = new StorageFile_obj;
	StorageFile_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.StorageFile","\xed","\x0f","\x5b","\xb9");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &hx::Class_obj::GetNoStaticField;
	__mClass->mSetStaticField = &hx::Class_obj::SetNoStaticField;
	__mClass->mMarkFunc = StorageFile_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(0 /* sStaticFields */);
	__mClass->mMembers = hx::Class_obj::dupFunctions(StorageFile_obj_sMemberFields);
	__mClass->mCanCast = hx::TCanCast< StorageFile_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = StorageFile_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = StorageFile_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = StorageFile_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

} // end namespace kha
