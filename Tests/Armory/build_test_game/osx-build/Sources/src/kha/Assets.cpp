// Generated by Haxe 3.4.4
#include <hxcpp.h>

#ifndef INCLUDED_Reflect
#include <Reflect.h>
#endif
#ifndef INCLUDED_StringTools
#include <StringTools.h>
#endif
#ifndef INCLUDED_Type
#include <Type.h>
#endif
#ifndef INCLUDED_haxe_Log
#include <haxe/Log.h>
#endif
#ifndef INCLUDED_kha_Assets
#include <kha/Assets.h>
#endif
#ifndef INCLUDED_kha_Canvas
#include <kha/Canvas.h>
#endif
#ifndef INCLUDED_kha_Image
#include <kha/Image.h>
#endif
#ifndef INCLUDED_kha_Kravur
#include <kha/Kravur.h>
#endif
#ifndef INCLUDED_kha_LoaderImpl
#include <kha/LoaderImpl.h>
#endif
#ifndef INCLUDED_kha_Resource
#include <kha/Resource.h>
#endif
#ifndef INCLUDED_kha_Sound
#include <kha/Sound.h>
#endif
#ifndef INCLUDED_kha_Video
#include <kha/Video.h>
#endif
#ifndef INCLUDED_kha__Assets_BlobList
#include <kha/_Assets/BlobList.h>
#endif
#ifndef INCLUDED_kha__Assets_FontList
#include <kha/_Assets/FontList.h>
#endif
#ifndef INCLUDED_kha__Assets_ImageList
#include <kha/_Assets/ImageList.h>
#endif
#ifndef INCLUDED_kha__Assets_SoundList
#include <kha/_Assets/SoundList.h>
#endif
#ifndef INCLUDED_kha__Assets_VideoList
#include <kha/_Assets/VideoList.h>
#endif
#ifndef INCLUDED_kha_internal_BytesBlob
#include <kha/internal/BytesBlob.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_121_loadEverything,"kha.Assets","loadEverything",0x85f39fda,"kha.Assets.loadEverything","kha/Assets.hx",121,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_86_loadEverything,"kha.Assets","loadEverything",0x85f39fda,"kha.Assets.loadEverything","kha/Assets.hx",86,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_133_loadEverything,"kha.Assets","loadEverything",0x85f39fda,"kha.Assets.loadEverything","kha/Assets.hx",133,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_149_loadEverything,"kha.Assets","loadEverything",0x85f39fda,"kha.Assets.loadEverything","kha/Assets.hx",149,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_165_loadEverything,"kha.Assets","loadEverything",0x85f39fda,"kha.Assets.loadEverything","kha/Assets.hx",165,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_172_loadEverything,"kha.Assets","loadEverything",0x85f39fda,"kha.Assets.loadEverything","kha/Assets.hx",172,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_184_loadEverything,"kha.Assets","loadEverything",0x85f39fda,"kha.Assets.loadEverything","kha/Assets.hx",184,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_199_loadEverything,"kha.Assets","loadEverything",0x85f39fda,"kha.Assets.loadEverything","kha/Assets.hx",199,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_219_loadImage,"kha.Assets","loadImage",0xe6c94354,"kha.Assets.loadImage","kha/Assets.hx",219,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_217_loadImage,"kha.Assets","loadImage",0xe6c94354,"kha.Assets.loadImage","kha/Assets.hx",217,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_222_loadImage,"kha.Assets","loadImage",0xe6c94354,"kha.Assets.loadImage","kha/Assets.hx",222,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_232_loadImageFromPath,"kha.Assets","loadImageFromPath",0x3f4a27a3,"kha.Assets.loadImageFromPath","kha/Assets.hx",232,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_234_loadImageFromPath,"kha.Assets","loadImageFromPath",0x3f4a27a3,"kha.Assets.loadImageFromPath","kha/Assets.hx",234,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_240_get_imageFormats,"kha.Assets","get_imageFormats",0xb185ddab,"kha.Assets.get_imageFormats","kha/Assets.hx",240,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_245_loadBlob,"kha.Assets","loadBlob",0xeb2f7b84,"kha.Assets.loadBlob","kha/Assets.hx",245,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_243_loadBlob,"kha.Assets","loadBlob",0xeb2f7b84,"kha.Assets.loadBlob","kha/Assets.hx",243,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_248_loadBlob,"kha.Assets","loadBlob",0xeb2f7b84,"kha.Assets.loadBlob","kha/Assets.hx",248,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_251_loadBlobFromPath,"kha.Assets","loadBlobFromPath",0x75ec0fd3,"kha.Assets.loadBlobFromPath","kha/Assets.hx",251,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_253_loadBlobFromPath,"kha.Assets","loadBlobFromPath",0x75ec0fd3,"kha.Assets.loadBlobFromPath","kha/Assets.hx",253,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_258_loadSound,"kha.Assets","loadSound",0xaa2cb0c8,"kha.Assets.loadSound","kha/Assets.hx",258,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_256_loadSound,"kha.Assets","loadSound",0xaa2cb0c8,"kha.Assets.loadSound","kha/Assets.hx",256,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_261_loadSound,"kha.Assets","loadSound",0xaa2cb0c8,"kha.Assets.loadSound","kha/Assets.hx",261,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_264_loadSoundFromPath,"kha.Assets","loadSoundFromPath",0xfcc62917,"kha.Assets.loadSoundFromPath","kha/Assets.hx",264,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_266_loadSoundFromPath,"kha.Assets","loadSoundFromPath",0xfcc62917,"kha.Assets.loadSoundFromPath","kha/Assets.hx",266,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_272_get_soundFormats,"kha.Assets","get_soundFormats",0xd5f5c6b7,"kha.Assets.get_soundFormats","kha/Assets.hx",272,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_277_loadFont,"kha.Assets","loadFont",0xedd69bf6,"kha.Assets.loadFont","kha/Assets.hx",277,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_275_loadFont,"kha.Assets","loadFont",0xedd69bf6,"kha.Assets.loadFont","kha/Assets.hx",275,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_280_loadFont,"kha.Assets","loadFont",0xedd69bf6,"kha.Assets.loadFont","kha/Assets.hx",280,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_283_loadFontFromPath,"kha.Assets","loadFontFromPath",0x1433f245,"kha.Assets.loadFontFromPath","kha/Assets.hx",283,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_285_loadFontFromPath,"kha.Assets","loadFontFromPath",0x1433f245,"kha.Assets.loadFontFromPath","kha/Assets.hx",285,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_291_get_fontFormats,"kha.Assets","get_fontFormats",0xc3a68c23,"kha.Assets.get_fontFormats","kha/Assets.hx",291,0x66f27110)
static const ::String _hx_array_data_b6c313ad_41[] = {
	HX_("ttf",e6,6a,58,00),
};
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_296_loadVideo,"kha.Assets","loadVideo",0x605c3874,"kha.Assets.loadVideo","kha/Assets.hx",296,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_294_loadVideo,"kha.Assets","loadVideo",0x605c3874,"kha.Assets.loadVideo","kha/Assets.hx",294,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_299_loadVideo,"kha.Assets","loadVideo",0x605c3874,"kha.Assets.loadVideo","kha/Assets.hx",299,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_302_loadVideoFromPath,"kha.Assets","loadVideoFromPath",0x02873cc3,"kha.Assets.loadVideoFromPath","kha/Assets.hx",302,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_304_loadVideoFromPath,"kha.Assets","loadVideoFromPath",0x02873cc3,"kha.Assets.loadVideoFromPath","kha/Assets.hx",304,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_310_get_videoFormats,"kha.Assets","get_videoFormats",0xdbb9cc8b,"kha.Assets.get_videoFormats","kha/Assets.hx",310,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_314_reporter,"kha.Assets","reporter",0x170a9702,"kha.Assets.reporter","kha/Assets.hx",314,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_70_boot,"kha.Assets","boot",0x977fac93,"kha.Assets.boot","kha/Assets.hx",70,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_71_boot,"kha.Assets","boot",0x977fac93,"kha.Assets.boot","kha/Assets.hx",71,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_72_boot,"kha.Assets","boot",0x977fac93,"kha.Assets.boot","kha/Assets.hx",72,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_73_boot,"kha.Assets","boot",0x977fac93,"kha.Assets.boot","kha/Assets.hx",73,0x66f27110)
HX_LOCAL_STACK_FRAME(_hx_pos_4e1ab36908a6f223_74_boot,"kha.Assets","boot",0x977fac93,"kha.Assets.boot","kha/Assets.hx",74,0x66f27110)
namespace kha{

void Assets_obj::__construct() { }

Dynamic Assets_obj::__CreateEmpty() { return new Assets_obj; }

void *Assets_obj::_hx_vtable = 0;

Dynamic Assets_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< Assets_obj > _hx_result = new Assets_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool Assets_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x7959a1a3;
}

 ::kha::_Assets::ImageList Assets_obj::images;

 ::kha::_Assets::SoundList Assets_obj::sounds;

 ::kha::_Assets::BlobList Assets_obj::blobs;

 ::kha::_Assets::FontList Assets_obj::fonts;

 ::kha::_Assets::VideoList Assets_obj::videos;

Float Assets_obj::progress;

void Assets_obj::loadEverything( ::Dynamic callback, ::Dynamic filter, ::Dynamic uncompressSoundsFilter, ::Dynamic failed){
            		HX_BEGIN_LOCAL_FUNC_S3(hx::LocalFunc,_hx_Closure_0,int,fileCount,::Array< int >,filesLeft, ::Dynamic,callback) HXARGC(0)
            		void _hx_run(){
            			HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_121_loadEverything)
HXLINE( 122)			--filesLeft[(int)0];
HXLINE( 123)			::kha::Assets_obj::progress = ((int)1 - ((Float)filesLeft->__get((int)0) / (Float)fileCount));
HXLINE( 124)			if ((filesLeft->__get((int)0) == (int)0)) {
HXLINE( 124)				callback();
            			}
            		}
            		HX_END_LOCAL_FUNC0((void))

            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_86_loadEverything)
HXLINE(  87)		int fileCount = (int)0;
HXLINE(  88)		{
HXLINE(  88)			int _g = (int)0;
HXDLIN(  88)			::Array< ::String > _g1 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::BlobList >());
HXDLIN(  88)			while((_g < _g1->length)){
HXLINE(  88)				::String blob = _g1->__get(_g);
HXDLIN(  88)				_g = (_g + (int)1);
HXLINE(  89)				if (::StringTools_obj::endsWith(blob,HX_("Load",46,c6,90,32))) {
HXLINE(  90)					fileCount = (fileCount + (int)1);
            				}
            			}
            		}
HXLINE(  93)		{
HXLINE(  93)			int _g2 = (int)0;
HXDLIN(  93)			::Array< ::String > _g11 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::ImageList >());
HXDLIN(  93)			while((_g2 < _g11->length)){
HXLINE(  93)				::String image = _g11->__get(_g2);
HXDLIN(  93)				_g2 = (_g2 + (int)1);
HXLINE(  94)				if (::StringTools_obj::endsWith(image,HX_("Load",46,c6,90,32))) {
HXLINE(  95)					fileCount = (fileCount + (int)1);
            				}
            			}
            		}
HXLINE(  98)		{
HXLINE(  98)			int _g3 = (int)0;
HXDLIN(  98)			::Array< ::String > _g12 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::SoundList >());
HXDLIN(  98)			while((_g3 < _g12->length)){
HXLINE(  98)				::String sound = _g12->__get(_g3);
HXDLIN(  98)				_g3 = (_g3 + (int)1);
HXLINE(  99)				if (::StringTools_obj::endsWith(sound,HX_("Load",46,c6,90,32))) {
HXLINE( 100)					fileCount = (fileCount + (int)1);
            				}
            			}
            		}
HXLINE( 103)		{
HXLINE( 103)			int _g4 = (int)0;
HXDLIN( 103)			::Array< ::String > _g13 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::FontList >());
HXDLIN( 103)			while((_g4 < _g13->length)){
HXLINE( 103)				::String font = _g13->__get(_g4);
HXDLIN( 103)				_g4 = (_g4 + (int)1);
HXLINE( 104)				if (::StringTools_obj::endsWith(font,HX_("Load",46,c6,90,32))) {
HXLINE( 105)					fileCount = (fileCount + (int)1);
            				}
            			}
            		}
HXLINE( 108)		{
HXLINE( 108)			int _g5 = (int)0;
HXDLIN( 108)			::Array< ::String > _g14 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::VideoList >());
HXDLIN( 108)			while((_g5 < _g14->length)){
HXLINE( 108)				::String video = _g14->__get(_g5);
HXDLIN( 108)				_g5 = (_g5 + (int)1);
HXLINE( 109)				if (::StringTools_obj::endsWith(video,HX_("Load",46,c6,90,32))) {
HXLINE( 110)					fileCount = (fileCount + (int)1);
            				}
            			}
            		}
HXLINE( 114)		if ((fileCount == (int)0)) {
HXLINE( 115)			callback();
HXLINE( 116)			return;
            		}
HXLINE( 119)		::Array< int > filesLeft = ::Array_obj< int >::__new(1)->init(0,fileCount);
HXLINE( 121)		 ::Dynamic onLoaded =  ::Dynamic(new _hx_Closure_0(fileCount,filesLeft,callback));
HXLINE( 127)		{
HXLINE( 127)			int _g6 = (int)0;
HXDLIN( 127)			::Array< ::String > _g15 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::BlobList >());
HXDLIN( 127)			while((_g6 < _g15->length)){
HXLINE( 127)				::String blob1 = _g15->__get(_g6);
HXDLIN( 127)				_g6 = (_g6 + (int)1);
HXLINE( 128)				if (::StringTools_obj::endsWith(blob1,HX_("Load",46,c6,90,32))) {
HXLINE( 129)					::String name = blob1.substr((int)0,(blob1.length - (int)4));
HXLINE( 130)					 ::kha::_Assets::BlobList description = ::kha::Assets_obj::blobs;
HXDLIN( 130)					 ::Dynamic description1 = ::Reflect_obj::field(description,(name + HX_("Description",dc,a0,4f,43)));
HXLINE( 132)					bool _hx_tmp;
HXDLIN( 132)					if (hx::IsNotNull( filter )) {
HXLINE( 132)						_hx_tmp = ( (bool)(filter(description1)) );
            					}
            					else {
HXLINE( 132)						_hx_tmp = true;
            					}
HXDLIN( 132)					if (_hx_tmp) {
            						HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1, ::Dynamic,onLoaded, ::Dynamic,failed) HXARGC(1)
            						void _hx_run( ::Dynamic err){
            							HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_133_loadEverything)
HXLINE( 134)							{
HXLINE( 134)								 ::Dynamic custom = failed;
HXDLIN( 134)								if (hx::IsNull( custom )) {
HXLINE( 134)									 ::Dynamic f = ::haxe::Log_obj::trace;
            								}
            							}
HXLINE( 135)							onLoaded();
            						}
            						HX_END_LOCAL_FUNC1((void))

HXLINE( 133)						 ::Dynamic _hx_tmp1 = ::Reflect_obj::field(::kha::Assets_obj::blobs,blob1);
HXDLIN( 133)						_hx_tmp1(onLoaded, ::Dynamic(new _hx_Closure_1(onLoaded,failed)));
            					}
            					else {
HXLINE( 139)						onLoaded();
            					}
            				}
            			}
            		}
HXLINE( 143)		{
HXLINE( 143)			int _g7 = (int)0;
HXDLIN( 143)			::Array< ::String > _g16 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::ImageList >());
HXDLIN( 143)			while((_g7 < _g16->length)){
HXLINE( 143)				::String image1 = _g16->__get(_g7);
HXDLIN( 143)				_g7 = (_g7 + (int)1);
HXLINE( 144)				if (::StringTools_obj::endsWith(image1,HX_("Load",46,c6,90,32))) {
HXLINE( 145)					::String name1 = image1.substr((int)0,(image1.length - (int)4));
HXLINE( 146)					 ::kha::_Assets::ImageList description2 = ::kha::Assets_obj::images;
HXDLIN( 146)					 ::Dynamic description3 = ::Reflect_obj::field(description2,(name1 + HX_("Description",dc,a0,4f,43)));
HXLINE( 148)					bool _hx_tmp2;
HXDLIN( 148)					if (hx::IsNotNull( filter )) {
HXLINE( 148)						_hx_tmp2 = ( (bool)(filter(description3)) );
            					}
            					else {
HXLINE( 148)						_hx_tmp2 = true;
            					}
HXDLIN( 148)					if (_hx_tmp2) {
            						HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_2, ::Dynamic,onLoaded, ::Dynamic,failed) HXARGC(1)
            						void _hx_run( ::Dynamic err1){
            							HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_149_loadEverything)
HXLINE( 150)							{
HXLINE( 150)								 ::Dynamic custom1 = failed;
HXDLIN( 150)								if (hx::IsNull( custom1 )) {
HXLINE( 150)									 ::Dynamic f1 = ::haxe::Log_obj::trace;
            								}
            							}
HXLINE( 151)							onLoaded();
            						}
            						HX_END_LOCAL_FUNC1((void))

HXLINE( 149)						 ::Dynamic _hx_tmp3 = ::Reflect_obj::field(::kha::Assets_obj::images,image1);
HXDLIN( 149)						_hx_tmp3(onLoaded, ::Dynamic(new _hx_Closure_2(onLoaded,failed)));
            					}
            					else {
HXLINE( 155)						onLoaded();
            					}
            				}
            			}
            		}
HXLINE( 159)		{
HXLINE( 159)			int _g8 = (int)0;
HXDLIN( 159)			::Array< ::String > _g17 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::SoundList >());
HXDLIN( 159)			while((_g8 < _g17->length)){
HXLINE( 159)				::String sound1 = _g17->__get(_g8);
HXDLIN( 159)				_g8 = (_g8 + (int)1);
HXLINE( 160)				if (::StringTools_obj::endsWith(sound1,HX_("Load",46,c6,90,32))) {
HXLINE( 161)					::String name2 = sound1.substr((int)0,(sound1.length - (int)4));
HXLINE( 162)					 ::kha::_Assets::SoundList description4 = ::kha::Assets_obj::sounds;
HXDLIN( 162)					 ::Dynamic description5 = ::Reflect_obj::field(description4,(name2 + HX_("Description",dc,a0,4f,43)));
HXLINE( 163)					bool _hx_tmp4;
HXDLIN( 163)					if (hx::IsNotNull( filter )) {
HXLINE( 163)						_hx_tmp4 = ( (bool)(filter(description5)) );
            					}
            					else {
HXLINE( 163)						_hx_tmp4 = true;
            					}
HXDLIN( 163)					if (_hx_tmp4) {
            						HX_BEGIN_LOCAL_FUNC_S4(hx::LocalFunc,_hx_Closure_4,::String,sound1, ::Dynamic,onLoaded, ::Dynamic,uncompressSoundsFilter, ::Dynamic,description5) HXARGC(0)
            						void _hx_run(){
            							HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_165_loadEverything)
HXLINE( 165)							bool _hx_tmp7;
HXDLIN( 165)							if (hx::IsNotNull( uncompressSoundsFilter )) {
HXLINE( 165)								_hx_tmp7 = ( (bool)(uncompressSoundsFilter(description5)) );
            							}
            							else {
HXLINE( 165)								_hx_tmp7 = true;
            							}
HXDLIN( 165)							if (_hx_tmp7) {
HXLINE( 166)								 ::kha::_Assets::SoundList sound2 = ::kha::Assets_obj::sounds;
HXDLIN( 166)								 ::kha::Sound sound3 = ( ( ::kha::Sound)(::Reflect_obj::field(sound2,sound1.substring((int)0,(sound1.length - (int)4)))) );
HXLINE( 167)								sound3->uncompress(onLoaded);
            							}
            							else {
HXLINE( 170)								onLoaded();
            							}
            						}
            						HX_END_LOCAL_FUNC0((void))

HXLINE( 164)						 ::Dynamic _hx_tmp5 = ::Reflect_obj::field(::kha::Assets_obj::sounds,sound1);
HXLINE( 172)						 ::Dynamic custom2 = failed;
HXDLIN( 172)						 ::Dynamic _hx_tmp6;
HXDLIN( 172)						if (hx::IsNotNull( custom2 )) {
HXLINE( 172)							_hx_tmp6 = custom2;
            						}
            						else {
            							HX_BEGIN_LOCAL_FUNC_S1(hx::LocalFunc,_hx_Closure_3, ::Dynamic,f2) HXARGC(1)
            							void _hx_run( ::Dynamic v){
            								HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_172_loadEverything)
HXLINE( 172)								f2(v,hx::SourceInfo(HX_("Assets.hx",fb,cd,c6,67),172,HX_("kha.Assets",ad,13,c3,b6),HX_("loadEverything",39,d4,86,35)));
            							}
            							HX_END_LOCAL_FUNC1((void))

HXLINE( 172)							 ::Dynamic f2 = ::haxe::Log_obj::trace;
HXDLIN( 172)							_hx_tmp6 =  ::Dynamic(new _hx_Closure_3(f2));
            						}
HXLINE( 164)						_hx_tmp5( ::Dynamic(new _hx_Closure_4(sound1,onLoaded,uncompressSoundsFilter,description5)),_hx_tmp6);
            					}
            					else {
HXLINE( 175)						onLoaded();
            					}
            				}
            			}
            		}
HXLINE( 179)		{
HXLINE( 179)			int _g9 = (int)0;
HXDLIN( 179)			::Array< ::String > _g18 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::FontList >());
HXDLIN( 179)			while((_g9 < _g18->length)){
HXLINE( 179)				::String font1 = _g18->__get(_g9);
HXDLIN( 179)				_g9 = (_g9 + (int)1);
HXLINE( 180)				if (::StringTools_obj::endsWith(font1,HX_("Load",46,c6,90,32))) {
HXLINE( 181)					::String name3 = font1.substr((int)0,(font1.length - (int)4));
HXLINE( 182)					 ::kha::_Assets::FontList description6 = ::kha::Assets_obj::fonts;
HXDLIN( 182)					 ::Dynamic description7 = ::Reflect_obj::field(description6,(name3 + HX_("Description",dc,a0,4f,43)));
HXLINE( 183)					bool _hx_tmp8;
HXDLIN( 183)					if (hx::IsNotNull( filter )) {
HXLINE( 183)						_hx_tmp8 = ( (bool)(filter(description7)) );
            					}
            					else {
HXLINE( 183)						_hx_tmp8 = true;
            					}
HXDLIN( 183)					if (_hx_tmp8) {
            						HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_5, ::Dynamic,onLoaded, ::Dynamic,failed) HXARGC(1)
            						void _hx_run( ::Dynamic err2){
            							HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_184_loadEverything)
HXLINE( 185)							{
HXLINE( 185)								 ::Dynamic custom3 = failed;
HXDLIN( 185)								if (hx::IsNull( custom3 )) {
HXLINE( 185)									 ::Dynamic f3 = ::haxe::Log_obj::trace;
            								}
            							}
HXLINE( 186)							onLoaded();
            						}
            						HX_END_LOCAL_FUNC1((void))

HXLINE( 184)						 ::Dynamic _hx_tmp9 = ::Reflect_obj::field(::kha::Assets_obj::fonts,font1);
HXDLIN( 184)						_hx_tmp9(onLoaded, ::Dynamic(new _hx_Closure_5(onLoaded,failed)));
            					}
            					else {
HXLINE( 190)						onLoaded();
            					}
            				}
            			}
            		}
HXLINE( 194)		{
HXLINE( 194)			int _g10 = (int)0;
HXDLIN( 194)			::Array< ::String > _g19 = ::Type_obj::getInstanceFields(hx::ClassOf< ::kha::_Assets::VideoList >());
HXDLIN( 194)			while((_g10 < _g19->length)){
HXLINE( 194)				::String video1 = _g19->__get(_g10);
HXDLIN( 194)				_g10 = (_g10 + (int)1);
HXLINE( 195)				if (::StringTools_obj::endsWith(video1,HX_("Load",46,c6,90,32))) {
HXLINE( 196)					::String name4 = video1.substr((int)0,(video1.length - (int)4));
HXLINE( 197)					 ::kha::_Assets::VideoList description8 = ::kha::Assets_obj::videos;
HXDLIN( 197)					 ::Dynamic description9 = ::Reflect_obj::field(description8,(name4 + HX_("Description",dc,a0,4f,43)));
HXLINE( 198)					bool _hx_tmp10;
HXDLIN( 198)					if (hx::IsNotNull( filter )) {
HXLINE( 198)						_hx_tmp10 = ( (bool)(filter(description9)) );
            					}
            					else {
HXLINE( 198)						_hx_tmp10 = true;
            					}
HXDLIN( 198)					if (_hx_tmp10) {
            						HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_6, ::Dynamic,onLoaded, ::Dynamic,failed) HXARGC(1)
            						void _hx_run( ::Dynamic err3){
            							HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_199_loadEverything)
HXLINE( 200)							{
HXLINE( 200)								 ::Dynamic custom4 = failed;
HXDLIN( 200)								if (hx::IsNull( custom4 )) {
HXLINE( 200)									 ::Dynamic f4 = ::haxe::Log_obj::trace;
            								}
            							}
HXLINE( 201)							onLoaded();
            						}
            						HX_END_LOCAL_FUNC1((void))

HXLINE( 199)						 ::Dynamic _hx_tmp11 = ::Reflect_obj::field(::kha::Assets_obj::videos,video1);
HXDLIN( 199)						_hx_tmp11(onLoaded, ::Dynamic(new _hx_Closure_6(onLoaded,failed)));
            					}
            					else {
HXLINE( 205)						onLoaded();
            					}
            				}
            			}
            		}
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadEverything,(void))

void Assets_obj::loadImage(::String name, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::String,name, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::Image image){
            			HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_219_loadImage)
HXLINE( 220)			::Reflect_obj::setField(::kha::Assets_obj::images,name,image);
HXLINE( 221)			done(image);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_217_loadImage)
HXLINE( 218)		 ::kha::_Assets::ImageList description = ::kha::Assets_obj::images;
HXDLIN( 218)		 ::Dynamic description1 = ::Reflect_obj::field(description,(name + HX_("Description",dc,a0,4f,43)));
HXLINE( 222)		 ::Dynamic custom = failed;
HXDLIN( 222)		 ::Dynamic _hx_tmp;
HXDLIN( 222)		if (hx::IsNotNull( custom )) {
HXLINE( 222)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_222_loadImage)
HXLINE( 222)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 222)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 222)			 ::Dynamic a1 = pos;
HXDLIN( 222)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXLINE( 219)		::kha::LoaderImpl_obj::loadImageFromDescription(description1, ::Dynamic(new _hx_Closure_1(name,done)),_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadImage,(void))

void Assets_obj::loadImageFromPath(::String path,bool readable, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_232_loadImageFromPath)
HXLINE( 233)		 ::Dynamic description =  ::Dynamic(hx::Anon_obj::Create(2)
            			->setFixed(0,HX_("files",77,de,98,00),::Array_obj< ::String >::__new(1)->init(0,path))
            			->setFixed(1,HX_("readable",f0,1b,87,7d),readable));
HXLINE( 234)		 ::Dynamic custom = failed;
HXDLIN( 234)		 ::Dynamic _hx_tmp;
HXDLIN( 234)		if (hx::IsNotNull( custom )) {
HXLINE( 234)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_234_loadImageFromPath)
HXLINE( 234)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 234)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 234)			 ::Dynamic a1 = pos;
HXDLIN( 234)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXDLIN( 234)		::kha::LoaderImpl_obj::loadImageFromDescription(description,done,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC5(Assets_obj,loadImageFromPath,(void))

::Array< ::String > Assets_obj::imageFormats;

::Array< ::String > Assets_obj::get_imageFormats(){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_240_get_imageFormats)
HXDLIN( 240)		return ::kha::LoaderImpl_obj::getImageFormats();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Assets_obj,get_imageFormats,return )

void Assets_obj::loadBlob(::String name, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::String,name, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::internal::BytesBlob blob){
            			HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_245_loadBlob)
HXLINE( 246)			::Reflect_obj::setField(::kha::Assets_obj::blobs,name,blob);
HXLINE( 247)			done(blob);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_243_loadBlob)
HXLINE( 244)		 ::kha::_Assets::BlobList description = ::kha::Assets_obj::blobs;
HXDLIN( 244)		 ::Dynamic description1 = ::Reflect_obj::field(description,(name + HX_("Description",dc,a0,4f,43)));
HXLINE( 248)		 ::Dynamic custom = failed;
HXDLIN( 248)		 ::Dynamic _hx_tmp;
HXDLIN( 248)		if (hx::IsNotNull( custom )) {
HXLINE( 248)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_248_loadBlob)
HXLINE( 248)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 248)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 248)			 ::Dynamic a1 = pos;
HXDLIN( 248)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXLINE( 245)		::kha::LoaderImpl_obj::loadBlobFromDescription(description1, ::Dynamic(new _hx_Closure_1(name,done)),_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadBlob,(void))

void Assets_obj::loadBlobFromPath(::String path, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_251_loadBlobFromPath)
HXLINE( 252)		 ::Dynamic description =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("files",77,de,98,00),::Array_obj< ::String >::__new(1)->init(0,path)));
HXLINE( 253)		 ::Dynamic custom = failed;
HXDLIN( 253)		 ::Dynamic _hx_tmp;
HXDLIN( 253)		if (hx::IsNotNull( custom )) {
HXLINE( 253)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_253_loadBlobFromPath)
HXLINE( 253)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 253)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 253)			 ::Dynamic a1 = pos;
HXDLIN( 253)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXDLIN( 253)		::kha::LoaderImpl_obj::loadBlobFromDescription(description,done,_hx_tmp);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadBlobFromPath,(void))

void Assets_obj::loadSound(::String name, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::String,name, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::Sound sound){
            			HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_258_loadSound)
HXLINE( 259)			::Reflect_obj::setField(::kha::Assets_obj::sounds,name,sound);
HXLINE( 260)			done(sound);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_256_loadSound)
HXLINE( 257)		 ::kha::_Assets::SoundList description = ::kha::Assets_obj::sounds;
HXDLIN( 257)		 ::Dynamic description1 = ::Reflect_obj::field(description,(name + HX_("Description",dc,a0,4f,43)));
HXLINE( 261)		 ::Dynamic custom = failed;
HXDLIN( 261)		 ::Dynamic _hx_tmp;
HXDLIN( 261)		if (hx::IsNotNull( custom )) {
HXLINE( 261)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_261_loadSound)
HXLINE( 261)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 261)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 261)			 ::Dynamic a1 = pos;
HXDLIN( 261)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXLINE( 258)		::kha::LoaderImpl_obj::loadSoundFromDescription(description1, ::Dynamic(new _hx_Closure_1(name,done)),_hx_tmp);
HXDLIN( 258)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadSound,(void))

void Assets_obj::loadSoundFromPath(::String path, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_264_loadSoundFromPath)
HXLINE( 265)		 ::Dynamic description =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("files",77,de,98,00),::Array_obj< ::String >::__new(1)->init(0,path)));
HXLINE( 266)		 ::Dynamic custom = failed;
HXDLIN( 266)		 ::Dynamic _hx_tmp;
HXDLIN( 266)		if (hx::IsNotNull( custom )) {
HXLINE( 266)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_266_loadSoundFromPath)
HXLINE( 266)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 266)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 266)			 ::Dynamic a1 = pos;
HXDLIN( 266)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXDLIN( 266)		::kha::LoaderImpl_obj::loadSoundFromDescription(description,done,_hx_tmp);
HXDLIN( 266)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadSoundFromPath,(void))

::Array< ::String > Assets_obj::soundFormats;

::Array< ::String > Assets_obj::get_soundFormats(){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_272_get_soundFormats)
HXDLIN( 272)		return ::kha::LoaderImpl_obj::getSoundFormats();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Assets_obj,get_soundFormats,return )

void Assets_obj::loadFont(::String name, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::String,name, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::Kravur font){
            			HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_277_loadFont)
HXLINE( 278)			::Reflect_obj::setField(::kha::Assets_obj::fonts,name,font);
HXLINE( 279)			done(font);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_275_loadFont)
HXLINE( 276)		 ::kha::_Assets::FontList description = ::kha::Assets_obj::fonts;
HXDLIN( 276)		 ::Dynamic description1 = ::Reflect_obj::field(description,(name + HX_("Description",dc,a0,4f,43)));
HXLINE( 280)		 ::Dynamic custom = failed;
HXDLIN( 280)		 ::Dynamic _hx_tmp;
HXDLIN( 280)		if (hx::IsNotNull( custom )) {
HXLINE( 280)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_280_loadFont)
HXLINE( 280)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 280)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 280)			 ::Dynamic a1 = pos;
HXDLIN( 280)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXLINE( 277)		::kha::LoaderImpl_obj::loadFontFromDescription(description1, ::Dynamic(new _hx_Closure_1(name,done)),_hx_tmp);
HXDLIN( 277)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadFont,(void))

void Assets_obj::loadFontFromPath(::String path, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_283_loadFontFromPath)
HXLINE( 284)		 ::Dynamic description =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("files",77,de,98,00),::Array_obj< ::String >::__new(1)->init(0,path)));
HXLINE( 285)		 ::Dynamic custom = failed;
HXDLIN( 285)		 ::Dynamic _hx_tmp;
HXDLIN( 285)		if (hx::IsNotNull( custom )) {
HXLINE( 285)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_285_loadFontFromPath)
HXLINE( 285)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 285)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 285)			 ::Dynamic a1 = pos;
HXDLIN( 285)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXDLIN( 285)		::kha::LoaderImpl_obj::loadFontFromDescription(description,done,_hx_tmp);
HXDLIN( 285)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadFontFromPath,(void))

::Array< ::String > Assets_obj::fontFormats;

::Array< ::String > Assets_obj::get_fontFormats(){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_291_get_fontFormats)
HXDLIN( 291)		return ::Array_obj< ::String >::fromData( _hx_array_data_b6c313ad_41,1);
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Assets_obj,get_fontFormats,return )

void Assets_obj::loadVideo(::String name, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            		HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_1,::String,name, ::Dynamic,done) HXARGC(1)
            		void _hx_run( ::kha::Video video){
            			HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_296_loadVideo)
HXLINE( 297)			::Reflect_obj::setField(::kha::Assets_obj::videos,name,video);
HXLINE( 298)			done(video);
            		}
            		HX_END_LOCAL_FUNC1((void))

            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_294_loadVideo)
HXLINE( 295)		 ::kha::_Assets::VideoList description = ::kha::Assets_obj::videos;
HXDLIN( 295)		 ::Dynamic description1 = ::Reflect_obj::field(description,(name + HX_("Description",dc,a0,4f,43)));
HXLINE( 299)		 ::Dynamic custom = failed;
HXDLIN( 299)		 ::Dynamic _hx_tmp;
HXDLIN( 299)		if (hx::IsNotNull( custom )) {
HXLINE( 299)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_299_loadVideo)
HXLINE( 299)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 299)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 299)			 ::Dynamic a1 = pos;
HXDLIN( 299)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXLINE( 296)		::kha::LoaderImpl_obj::loadVideoFromDescription(description1, ::Dynamic(new _hx_Closure_1(name,done)),_hx_tmp);
HXDLIN( 296)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadVideo,(void))

void Assets_obj::loadVideoFromPath(::String path, ::Dynamic done, ::Dynamic failed, ::Dynamic pos){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_302_loadVideoFromPath)
HXLINE( 303)		 ::Dynamic description =  ::Dynamic(hx::Anon_obj::Create(1)
            			->setFixed(0,HX_("files",77,de,98,00),::Array_obj< ::String >::__new(1)->init(0,path)));
HXLINE( 304)		 ::Dynamic custom = failed;
HXDLIN( 304)		 ::Dynamic _hx_tmp;
HXDLIN( 304)		if (hx::IsNotNull( custom )) {
HXLINE( 304)			_hx_tmp = custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_304_loadVideoFromPath)
HXLINE( 304)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXLINE( 304)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 304)			 ::Dynamic a1 = pos;
HXDLIN( 304)			_hx_tmp =  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXDLIN( 304)		::kha::LoaderImpl_obj::loadVideoFromDescription(description,done,_hx_tmp);
HXDLIN( 304)		return;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC4(Assets_obj,loadVideoFromPath,(void))

::Array< ::String > Assets_obj::videoFormats;

::Array< ::String > Assets_obj::get_videoFormats(){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_310_get_videoFormats)
HXDLIN( 310)		return ::kha::LoaderImpl_obj::getVideoFormats();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(Assets_obj,get_videoFormats,return )

 ::Dynamic Assets_obj::reporter( ::Dynamic custom, ::Dynamic pos){
            	HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_314_reporter)
HXDLIN( 314)		if (hx::IsNotNull( custom )) {
HXDLIN( 314)			return custom;
            		}
            		else {
            			HX_BEGIN_LOCAL_FUNC_S2(hx::LocalFunc,_hx_Closure_0, ::Dynamic,f, ::Dynamic,a1) HXARGC(1)
            			void _hx_run( ::Dynamic v){
            				HX_STACKFRAME(&_hx_pos_4e1ab36908a6f223_314_reporter)
HXDLIN( 314)				f(v,a1);
            			}
            			HX_END_LOCAL_FUNC1((void))

HXDLIN( 314)			 ::Dynamic f = ::haxe::Log_obj::trace;
HXDLIN( 314)			 ::Dynamic a1 = pos;
HXDLIN( 314)			return  ::Dynamic(new _hx_Closure_0(f,a1));
            		}
HXDLIN( 314)		return null();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC2(Assets_obj,reporter,return )


Assets_obj::Assets_obj()
{
}

bool Assets_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"blobs") ) { outValue = ( blobs ); return true; }
		if (HX_FIELD_EQ(inName,"fonts") ) { outValue = ( fonts ); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"images") ) { outValue = ( images ); return true; }
		if (HX_FIELD_EQ(inName,"sounds") ) { outValue = ( sounds ); return true; }
		if (HX_FIELD_EQ(inName,"videos") ) { outValue = ( videos ); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"progress") ) { outValue = ( progress ); return true; }
		if (HX_FIELD_EQ(inName,"loadBlob") ) { outValue = loadBlob_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadFont") ) { outValue = loadFont_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"reporter") ) { outValue = reporter_dyn(); return true; }
		break;
	case 9:
		if (HX_FIELD_EQ(inName,"loadImage") ) { outValue = loadImage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadSound") ) { outValue = loadSound_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadVideo") ) { outValue = loadVideo_dyn(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fontFormats") ) { outValue = ( inCallProp == hx::paccAlways ? get_fontFormats() : fontFormats ); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"imageFormats") ) { outValue = ( inCallProp == hx::paccAlways ? get_imageFormats() : imageFormats ); return true; }
		if (HX_FIELD_EQ(inName,"soundFormats") ) { outValue = ( inCallProp == hx::paccAlways ? get_soundFormats() : soundFormats ); return true; }
		if (HX_FIELD_EQ(inName,"videoFormats") ) { outValue = ( inCallProp == hx::paccAlways ? get_videoFormats() : videoFormats ); return true; }
		break;
	case 14:
		if (HX_FIELD_EQ(inName,"loadEverything") ) { outValue = loadEverything_dyn(); return true; }
		break;
	case 15:
		if (HX_FIELD_EQ(inName,"get_fontFormats") ) { outValue = get_fontFormats_dyn(); return true; }
		break;
	case 16:
		if (HX_FIELD_EQ(inName,"get_imageFormats") ) { outValue = get_imageFormats_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadBlobFromPath") ) { outValue = loadBlobFromPath_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_soundFormats") ) { outValue = get_soundFormats_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadFontFromPath") ) { outValue = loadFontFromPath_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"get_videoFormats") ) { outValue = get_videoFormats_dyn(); return true; }
		break;
	case 17:
		if (HX_FIELD_EQ(inName,"loadImageFromPath") ) { outValue = loadImageFromPath_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadSoundFromPath") ) { outValue = loadSoundFromPath_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"loadVideoFromPath") ) { outValue = loadVideoFromPath_dyn(); return true; }
	}
	return false;
}

bool Assets_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 5:
		if (HX_FIELD_EQ(inName,"blobs") ) { blobs=ioValue.Cast<  ::kha::_Assets::BlobList >(); return true; }
		if (HX_FIELD_EQ(inName,"fonts") ) { fonts=ioValue.Cast<  ::kha::_Assets::FontList >(); return true; }
		break;
	case 6:
		if (HX_FIELD_EQ(inName,"images") ) { images=ioValue.Cast<  ::kha::_Assets::ImageList >(); return true; }
		if (HX_FIELD_EQ(inName,"sounds") ) { sounds=ioValue.Cast<  ::kha::_Assets::SoundList >(); return true; }
		if (HX_FIELD_EQ(inName,"videos") ) { videos=ioValue.Cast<  ::kha::_Assets::VideoList >(); return true; }
		break;
	case 8:
		if (HX_FIELD_EQ(inName,"progress") ) { progress=ioValue.Cast< Float >(); return true; }
		break;
	case 11:
		if (HX_FIELD_EQ(inName,"fontFormats") ) { fontFormats=ioValue.Cast< ::Array< ::String > >(); return true; }
		break;
	case 12:
		if (HX_FIELD_EQ(inName,"imageFormats") ) { imageFormats=ioValue.Cast< ::Array< ::String > >(); return true; }
		if (HX_FIELD_EQ(inName,"soundFormats") ) { soundFormats=ioValue.Cast< ::Array< ::String > >(); return true; }
		if (HX_FIELD_EQ(inName,"videoFormats") ) { videoFormats=ioValue.Cast< ::Array< ::String > >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *Assets_obj_sMemberStorageInfo = 0;
static hx::StaticInfo Assets_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::kha::_Assets::ImageList*/ ,(void *) &Assets_obj::images,HX_HCSTRING("images","\xb8","\x50","\x92","\xfe")},
	{hx::fsObject /*::kha::_Assets::SoundList*/ ,(void *) &Assets_obj::sounds,HX_HCSTRING("sounds","\xc4","\xa8","\x2e","\x32")},
	{hx::fsObject /*::kha::_Assets::BlobList*/ ,(void *) &Assets_obj::blobs,HX_HCSTRING("blobs","\x76","\x74","\xfc","\xb4")},
	{hx::fsObject /*::kha::_Assets::FontList*/ ,(void *) &Assets_obj::fonts,HX_HCSTRING("fonts","\xc4","\xb7","\x91","\x04")},
	{hx::fsObject /*::kha::_Assets::VideoList*/ ,(void *) &Assets_obj::videos,HX_HCSTRING("videos","\x98","\xd7","\x95","\xe5")},
	{hx::fsFloat,(void *) &Assets_obj::progress,HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86")},
	{hx::fsObject /*Array< ::String >*/ ,(void *) &Assets_obj::imageFormats,HX_HCSTRING("imageFormats","\x41","\x3b","\xf7","\xce")},
	{hx::fsObject /*Array< ::String >*/ ,(void *) &Assets_obj::soundFormats,HX_HCSTRING("soundFormats","\x4d","\x24","\x67","\xf3")},
	{hx::fsObject /*Array< ::String >*/ ,(void *) &Assets_obj::fontFormats,HX_HCSTRING("fontFormats","\x4d","\x73","\xff","\xf3")},
	{hx::fsObject /*Array< ::String >*/ ,(void *) &Assets_obj::videoFormats,HX_HCSTRING("videoFormats","\x21","\x2a","\x2b","\xf9")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void Assets_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(Assets_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(Assets_obj::images,"images");
	HX_MARK_MEMBER_NAME(Assets_obj::sounds,"sounds");
	HX_MARK_MEMBER_NAME(Assets_obj::blobs,"blobs");
	HX_MARK_MEMBER_NAME(Assets_obj::fonts,"fonts");
	HX_MARK_MEMBER_NAME(Assets_obj::videos,"videos");
	HX_MARK_MEMBER_NAME(Assets_obj::progress,"progress");
	HX_MARK_MEMBER_NAME(Assets_obj::imageFormats,"imageFormats");
	HX_MARK_MEMBER_NAME(Assets_obj::soundFormats,"soundFormats");
	HX_MARK_MEMBER_NAME(Assets_obj::fontFormats,"fontFormats");
	HX_MARK_MEMBER_NAME(Assets_obj::videoFormats,"videoFormats");
};

#ifdef HXCPP_VISIT_ALLOCS
static void Assets_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(Assets_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(Assets_obj::images,"images");
	HX_VISIT_MEMBER_NAME(Assets_obj::sounds,"sounds");
	HX_VISIT_MEMBER_NAME(Assets_obj::blobs,"blobs");
	HX_VISIT_MEMBER_NAME(Assets_obj::fonts,"fonts");
	HX_VISIT_MEMBER_NAME(Assets_obj::videos,"videos");
	HX_VISIT_MEMBER_NAME(Assets_obj::progress,"progress");
	HX_VISIT_MEMBER_NAME(Assets_obj::imageFormats,"imageFormats");
	HX_VISIT_MEMBER_NAME(Assets_obj::soundFormats,"soundFormats");
	HX_VISIT_MEMBER_NAME(Assets_obj::fontFormats,"fontFormats");
	HX_VISIT_MEMBER_NAME(Assets_obj::videoFormats,"videoFormats");
};

#endif

hx::Class Assets_obj::__mClass;

static ::String Assets_obj_sStaticFields[] = {
	HX_HCSTRING("images","\xb8","\x50","\x92","\xfe"),
	HX_HCSTRING("sounds","\xc4","\xa8","\x2e","\x32"),
	HX_HCSTRING("blobs","\x76","\x74","\xfc","\xb4"),
	HX_HCSTRING("fonts","\xc4","\xb7","\x91","\x04"),
	HX_HCSTRING("videos","\x98","\xd7","\x95","\xe5"),
	HX_HCSTRING("progress","\xad","\xf7","\x2a","\x86"),
	HX_HCSTRING("loadEverything","\x39","\xd4","\x86","\x35"),
	HX_HCSTRING("loadImage","\x55","\x6b","\xa0","\xd8"),
	HX_HCSTRING("loadImageFromPath","\xa4","\xb8","\x7a","\xeb"),
	HX_HCSTRING("imageFormats","\x41","\x3b","\xf7","\xce"),
	HX_HCSTRING("get_imageFormats","\xca","\x27","\x96","\xd3"),
	HX_HCSTRING("loadBlob","\xa3","\x0e","\xb9","\xb1"),
	HX_HCSTRING("loadBlobFromPath","\xf2","\x59","\xfc","\x97"),
	HX_HCSTRING("loadSound","\xc9","\xd8","\x03","\x9c"),
	HX_HCSTRING("loadSoundFromPath","\x18","\xba","\xf6","\xa8"),
	HX_HCSTRING("soundFormats","\x4d","\x24","\x67","\xf3"),
	HX_HCSTRING("get_soundFormats","\xd6","\x10","\x06","\xf8"),
	HX_HCSTRING("loadFont","\x15","\x2f","\x60","\xb4"),
	HX_HCSTRING("loadFontFromPath","\x64","\x3c","\x44","\x36"),
	HX_HCSTRING("fontFormats","\x4d","\x73","\xff","\xf3"),
	HX_HCSTRING("get_fontFormats","\xe4","\x2a","\xe1","\xb4"),
	HX_HCSTRING("loadVideo","\x75","\x60","\x33","\x52"),
	HX_HCSTRING("loadVideoFromPath","\xc4","\xcd","\xb7","\xae"),
	HX_HCSTRING("videoFormats","\x21","\x2a","\x2b","\xf9"),
	HX_HCSTRING("get_videoFormats","\xaa","\x16","\xca","\xfd"),
	HX_HCSTRING("reporter","\x21","\x2a","\x94","\xdd"),
	::String(null())
};

void Assets_obj::__register()
{
	hx::Object *dummy = new Assets_obj;
	Assets_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("kha.Assets","\xad","\x13","\xc3","\xb6");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &Assets_obj::__GetStatic;
	__mClass->mSetStaticField = &Assets_obj::__SetStatic;
	__mClass->mMarkFunc = Assets_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(Assets_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< Assets_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = Assets_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = Assets_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = Assets_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

void Assets_obj::__boot()
{
{
            	HX_GC_STACKFRAME(&_hx_pos_4e1ab36908a6f223_70_boot)
HXDLIN(  70)		images =  ::kha::_Assets::ImageList_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_4e1ab36908a6f223_71_boot)
HXDLIN(  71)		sounds =  ::kha::_Assets::SoundList_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_4e1ab36908a6f223_72_boot)
HXDLIN(  72)		blobs =  ::kha::_Assets::BlobList_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_4e1ab36908a6f223_73_boot)
HXDLIN(  73)		fonts =  ::kha::_Assets::FontList_obj::__alloc( HX_CTX );
            	}
{
            	HX_GC_STACKFRAME(&_hx_pos_4e1ab36908a6f223_74_boot)
HXDLIN(  74)		videos =  ::kha::_Assets::VideoList_obj::__alloc( HX_CTX );
            	}
}

} // end namespace kha
